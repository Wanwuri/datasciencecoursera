<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3c.org/TR/1999/REC-html401-19991224/loose.dtd">
<!-- saved from url=(0084)http://127.0.0.1:29225/doc/manual/R-intro.html -->
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"><HTML><!-- This manual is for R, version 3.2.2 (2015-08-14).

Copyright (C) 1990 W. N. Venables

Copyright (C) 1992 W. N. Venables & D. M. Smith

Copyright (C) 1997 R. Gentleman & R. Ihaka

Copyright (C) 1997, 1998 M. Maechler

Copyright (C) 1999-2015 R Core Team

Permission is granted to make and distribute verbatim copies of this
manual provided the copyright notice and this permission notice are
preserved on all copies.

Permission is granted to copy and distribute modified versions of this
manual under the conditions for verbatim copying, provided that the
entire resulting derived work is distributed under the terms of a
permission notice identical to this one.

Permission is granted to copy and distribute translations of this manual
into another language, under the above conditions for modified versions,
except that this permission notice may be stated in a translation
approved by the R Core Team. --><!-- Created by GNU Texinfo 5.2, http://www.gnu.org/software/texinfo/ --><HEAD><META 
content="IE=11.0000" http-equiv="X-UA-Compatible">
 <TITLE>An Introduction to R</TITLE> 
<META name="description" content="An Introduction to R"> 
<META name="keywords" content="An Introduction to R"> 
<META name="resource-type" content="document"> 
<META name="distribution" content="global"> 
<META name="GENERATOR" content="MSHTML 11.00.9600.18036"> 
<META http-equiv="Content-Type" content="text/html; charset=UTF-8"> <LINK title="Top" 
href="#Top" rel="start"> <LINK title="Function and variable index" href="#Function-and-variable-index" 
rel="index"> <LINK title="Table of Contents" href="#SEC_Contents" 
rel="contents"> 
<STYLE type="text/css">
<!--
a.summary-letter {text-decoration: none}
blockquote.smallquotation {font-size: smaller}
div.display {margin-left: 3.2em}
div.example {margin-left: 3.2em}
div.indentedblock {margin-left: 3.2em}
div.lisp {margin-left: 3.2em}
div.smalldisplay {margin-left: 3.2em}
div.smallexample {margin-left: 3.2em}
div.smallindentedblock {margin-left: 3.2em; font-size: smaller}
div.smalllisp {margin-left: 3.2em}
kbd {font-style:oblique}
pre.display {font-family: inherit}
pre.format {font-family: inherit}
pre.menu-comment {font-family: serif}
pre.menu-preformatted {font-family: serif}
pre.smalldisplay {font-family: inherit; font-size: smaller}
pre.smallexample {font-size: smaller}
pre.smallformat {font-family: inherit; font-size: smaller}
pre.smalllisp {font-size: smaller}
span.nocodebreak {white-space:nowrap}
span.nolinebreak {white-space:nowrap}
span.roman {font-family:serif; font-weight:normal}
span.sansserif {font-family:sans-serif; font-weight:normal}
ul.no-bullet {list-style: none}
body {
    margin-left: 5%;
    margin-right: 5%;
}

h1 {             
    background: white;
    color: rgb(25%, 25%, 25%);
    font-family: monospace;
    font-size: xx-large;
    text-align: center;
}

h2 {
    background: white;
    color: rgb(40%, 40%, 40%);
    font-family: monospace;
    font-size: x-large;
    text-align: center;
}

h3 {
    background: white;
    color: rgb(40%, 40%, 40%);
    font-family: monospace;
    font-size: large;
}

h4 {
    background: white;
    color: rgb(40%, 40%, 40%);
    font-family: monospace;
}

span.samp {
    font-family: monospace;
}

span.command {
    font-family: monospace;
}

span.option {
    font-family: monospace;
}

span.file {
    font-family: monospace;
}

span.env {
    font-family: monospace;
}

ul {
    margin-top: 0.25ex;
    margin-bottom: 0.25ex;
}

li {
    margin-top: 0.25ex;
    margin-bottom: 0.25ex;
}

p {
    margin-top: 0.6ex;
    margin-bottom: 1.2ex;
}

-->
</STYLE>
 </HEAD> 
<BODY text="#000000" lang="en" bgcolor="#ffffff" link="#0000ff" alink="#ff0000" 
vlink="#800080">
<H1 align="center" class="settitle">An Introduction to R</H1><A name="SEC_Contents"></A> 
<H2 class="contents-heading">Table of Contents</H2>
<DIV class="contents">
<UL class="no-bullet">
  <LI><A name="toc-Preface-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Preface">Preface</A></LI>
  <LI><A name="toc-Introduction-and-preliminaries-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Introduction-and-preliminaries">1 
  Introduction and preliminaries</A>   
  <UL class="no-bullet">
    <LI><A name="toc-The-R-environment-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-R-environment">1.1 
    The R environment</A></LI>
    <LI><A name="toc-Related-software-and-documentation-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Related-software-and-documentation">1.2 
    Related software and documentation</A></LI>
    <LI><A name="toc-R-and-statistics-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#R-and-statistics">1.3 
    R and statistics</A></LI>
    <LI><A name="toc-R-and-the-window-system-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#R-and-the-window-system">1.4 
    R and the window system</A></LI>
    <LI><A name="toc-Using-R-interactively-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Using-R-interactively">1.5 
    Using R interactively</A></LI>
    <LI><A name="toc-An-introductory-session" href="http://127.0.0.1:29225/doc/manual/R-intro.html#An-introductory-session">1.6 
    An introductory session</A></LI>
    <LI><A name="toc-Getting-help-with-functions-and-features" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Getting-help">1.7 
    Getting help with functions and features</A></LI>
    <LI><A name="toc-R-commands_002c-case-sensitivity_002c-etc_002e" href="http://127.0.0.1:29225/doc/manual/R-intro.html#R-commands_003b-case-sensitivity-etc">1.8 
    R commands, case sensitivity, etc.</A></LI>
    <LI><A name="toc-Recall-and-correction-of-previous-commands-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Recall-and-correction-of-previous-commands">1.9 
    Recall and correction of previous commands</A></LI>
    <LI><A name="toc-Executing-commands-from-or-diverting-output-to-a-file-1" 
    href="http://127.0.0.1:29225/doc/manual/R-intro.html#Executing-commands-from-or-diverting-output-to-a-file">1.10 
    Executing commands from or diverting output to a file</A></LI>
    <LI><A name="toc-Data-permanency-and-removing-objects-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Data-permanency-and-removing-objects">1.11 
    Data permanency and removing objects</A></LI></UL></LI>
  <LI><A name="toc-Simple-manipulations_003b-numbers-and-vectors" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Simple-manipulations-numbers-and-vectors">2 
  Simple manipulations; numbers and vectors</A>   
  <UL class="no-bullet">
    <LI><A name="toc-Vectors-and-assignment-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Vectors-and-assignment">2.1 
    Vectors and assignment</A></LI>
    <LI><A name="toc-Vector-arithmetic-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Vector-arithmetic">2.2 
    Vector arithmetic</A></LI>
    <LI><A name="toc-Generating-regular-sequences-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Generating-regular-sequences">2.3 
    Generating regular sequences</A></LI>
    <LI><A name="toc-Logical-vectors-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Logical-vectors">2.4 
    Logical vectors</A></LI>
    <LI><A name="toc-Missing-values-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Missing-values">2.5 
    Missing values</A></LI>
    <LI><A name="toc-Character-vectors-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Character-vectors">2.6 
    Character vectors</A></LI>
    <LI><A name="toc-Index-vectors_003b-selecting-and-modifying-subsets-of-a-data-set" 
    href="http://127.0.0.1:29225/doc/manual/R-intro.html#Index-vectors">2.7 
    Index vectors; selecting and modifying subsets of a data set</A></LI>
    <LI><A name="toc-Other-types-of-objects-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Other-types-of-objects">2.8 
    Other types of objects</A></LI></UL></LI>
  <LI><A name="toc-Objects_002c-their-modes-and-attributes" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Objects">3 
  Objects, their modes and attributes</A>   
  <UL class="no-bullet">
    <LI><A name="toc-Intrinsic-attributes_003a-mode-and-length" href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-intrinsic-attributes-mode-and-length">3.1 
    Intrinsic attributes: mode and length</A></LI>
    <LI><A name="toc-Changing-the-length-of-an-object-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Changing-the-length-of-an-object">3.2 
    Changing the length of an object</A></LI>
    <LI><A name="toc-Getting-and-setting-attributes-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Getting-and-setting-attributes">3.3 
    Getting and setting attributes</A></LI>
    <LI><A name="toc-The-class-of-an-object-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-class-of-an-object">3.4 
    The class of an object</A></LI></UL></LI>
  <LI><A name="toc-Ordered-and-unordered-factors" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Factors">4 
  Ordered and unordered factors</A>   
  <UL class="no-bullet">
    <LI><A name="toc-A-specific-example" href="http://127.0.0.1:29225/doc/manual/R-intro.html#A-specific-example">4.1 
    A specific example</A></LI>
    <LI><A name="toc-The-function-tapply_0028_0029-and-ragged-arrays-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-function-tapply_0028_0029-and-ragged-arrays">4.2 
    The function <CODE>tapply()</CODE> and ragged arrays</A></LI>
    <LI><A name="toc-Ordered-factors-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Ordered-factors">4.3 
    Ordered factors</A></LI></UL></LI>
  <LI><A name="toc-Arrays-and-matrices-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Arrays-and-matrices">5 
  Arrays and matrices</A>   
  <UL class="no-bullet">
    <LI><A name="toc-Arrays-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Arrays">5.1 
    Arrays</A></LI>
    <LI><A name="toc-Array-indexing_002e-Subsections-of-an-array" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Array-indexing">5.2 
    Array indexing.  Subsections of an array</A></LI>
    <LI><A name="toc-Index-matrices-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Index-matrices">5.3 
    Index matrices</A></LI>
    <LI><A name="toc-The-array_0028_0029-function-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-array_0028_0029-function">5.4 
    The <CODE>array()</CODE> function</A>     
    <UL class="no-bullet">
      <LI><A name="toc-Mixed-vector-and-array-arithmetic_002e-The-recycling-rule" 
      href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-recycling-rule">5.4.1 
      Mixed vector and array arithmetic.  The recycling rule</A></LI></UL></LI>
    <LI><A name="toc-The-outer-product-of-two-arrays-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-outer-product-of-two-arrays">5.5 
    The outer product of two arrays</A></LI>
    <LI><A name="toc-Generalized-transpose-of-an-array-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Generalized-transpose-of-an-array">5.6 
    Generalized transpose of an array</A></LI>
    <LI><A name="toc-Matrix-facilities-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Matrix-facilities">5.7 
    Matrix facilities</A>     
    <UL class="no-bullet">
      <LI><A name="toc-Matrix-multiplication" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Multiplication">5.7.1 
      Matrix multiplication</A></LI>
      <LI><A name="toc-Linear-equations-and-inversion-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Linear-equations-and-inversion">5.7.2 
      Linear equations and inversion</A></LI>
      <LI><A name="toc-Eigenvalues-and-eigenvectors-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Eigenvalues-and-eigenvectors">5.7.3 
      Eigenvalues and eigenvectors</A></LI>
      <LI><A name="toc-Singular-value-decomposition-and-determinants-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Singular-value-decomposition-and-determinants">5.7.4 
      Singular value decomposition and determinants</A></LI>
      <LI><A name="toc-Least-squares-fitting-and-the-QR-decomposition-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Least-squares-fitting-and-the-QR-decomposition">5.7.5 
      Least squares fitting and the QR decomposition</A></LI></UL></LI>
    <LI><A name="toc-Forming-partitioned-matrices_002c-cbind_0028_0029-and-rbind_0028_0029" 
    href="http://127.0.0.1:29225/doc/manual/R-intro.html#Forming-partitioned-matrices">5.8 
    Forming partitioned matrices, <CODE>cbind()</CODE> and 
    <CODE>rbind()</CODE></A></LI>
    <LI><A name="toc-The-concatenation-function_002c-c_0028_0029_002c-with-arrays" 
    href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-concatenation-function-c_0028_0029-with-arrays">5.9 
    The concatenation function, <CODE>c()</CODE>, with arrays</A></LI>
    <LI><A name="toc-Frequency-tables-from-factors-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Frequency-tables-from-factors">5.10 
    Frequency tables from factors</A></LI></UL></LI>
  <LI><A name="toc-Lists-and-data-frames-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Lists-and-data-frames">6 
  Lists and data frames</A>   
  <UL class="no-bullet">
    <LI><A name="toc-Lists-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Lists">6.1 
    Lists</A></LI>
    <LI><A name="toc-Constructing-and-modifying-lists-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Constructing-and-modifying-lists">6.2 
    Constructing and modifying lists</A>     
    <UL class="no-bullet">
      <LI><A name="toc-Concatenating-lists-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Concatenating-lists">6.2.1 
      Concatenating lists</A></LI></UL></LI>
    <LI><A name="toc-Data-frames-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Data-frames">6.3 
    Data frames</A>     
    <UL class="no-bullet">
      <LI><A name="toc-Making-data-frames-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Making-data-frames">6.3.1 
      Making data frames</A></LI>
      <LI><A name="toc-attach_0028_0029-and-detach_0028_0029-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#attach_0028_0029-and-detach_0028_0029">6.3.2 
      <CODE>attach()</CODE> and <CODE>detach()</CODE></A></LI>
      <LI><A name="toc-Working-with-data-frames-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Working-with-data-frames">6.3.3 
      Working with data frames</A></LI>
      <LI><A name="toc-Attaching-arbitrary-lists-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Attaching-arbitrary-lists">6.3.4 
      Attaching arbitrary lists</A></LI>
      <LI><A name="toc-Managing-the-search-path-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Managing-the-search-path">6.3.5 
      Managing the search path</A></LI></UL></LI></UL></LI>
  <LI><A name="toc-Reading-data-from-files-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Reading-data-from-files">7 
  Reading data from files</A>   
  <UL class="no-bullet">
    <LI><A name="toc-The-read_002etable_0028_0029-function-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-read_002etable_0028_0029-function">7.1 
    The <CODE>read.table()</CODE> function</A></LI>
    <LI><A name="toc-The-scan_0028_0029-function-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-scan_0028_0029-function">7.2 
    The <CODE>scan()</CODE> function</A></LI>
    <LI><A name="toc-Accessing-builtin-datasets-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Accessing-builtin-datasets">7.3 
    Accessing builtin datasets</A>     
    <UL class="no-bullet">
      <LI><A name="toc-Loading-data-from-other-R-packages" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Loading-data-from-other-R-packages">7.3.1 
      Loading data from other R packages</A></LI></UL></LI>
    <LI><A name="toc-Editing-data-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Editing-data">7.4 
    Editing data</A></LI></UL></LI>
  <LI><A name="toc-Probability-distributions-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Probability-distributions">8 
  Probability distributions</A>   
  <UL class="no-bullet">
    <LI><A name="toc-R-as-a-set-of-statistical-tables-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#R-as-a-set-of-statistical-tables">8.1 
    R as a set of statistical tables</A></LI>
    <LI><A name="toc-Examining-the-distribution-of-a-set-of-data-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Examining-the-distribution-of-a-set-of-data">8.2 
    Examining the distribution of a set of data</A></LI>
    <LI><A name="toc-One_002d-and-two_002dsample-tests-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#One_002d-and-two_002dsample-tests">8.3 
    One- and two-sample tests</A></LI></UL></LI>
  <LI><A name="toc-Grouping_002c-loops-and-conditional-execution" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Loops-and-conditional-execution">9 
  Grouping, loops and conditional execution</A>   
  <UL class="no-bullet">
    <LI><A name="toc-Grouped-expressions-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Grouped-expressions">9.1 
    Grouped expressions</A></LI>
    <LI><A name="toc-Control-statements-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Control-statements">9.2 
    Control statements</A>     
    <UL class="no-bullet">
      <LI><A name="toc-Conditional-execution_003a-if-statements" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Conditional-execution">9.2.1 
      Conditional execution: <CODE>if</CODE> statements</A></LI>
      <LI><A name="toc-Repetitive-execution_003a-for-loops_002c-repeat-and-while" 
      href="http://127.0.0.1:29225/doc/manual/R-intro.html#Repetitive-execution">9.2.2 
      Repetitive execution: <CODE>for</CODE> loops, <CODE>repeat</CODE> and 
      <CODE>while</CODE></A></LI></UL></LI></UL></LI>
  <LI><A name="toc-Writing-your-own-functions-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Writing-your-own-functions">10 
  Writing your own functions</A>   
  <UL class="no-bullet">
    <LI><A name="toc-Simple-examples-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Simple-examples">10.1 
    Simple examples</A></LI>
    <LI><A name="toc-Defining-new-binary-operators-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Defining-new-binary-operators">10.2 
    Defining new binary operators</A></LI>
    <LI><A name="toc-Named-arguments-and-defaults-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Named-arguments-and-defaults">10.3 
    Named arguments and defaults</A></LI>
    <LI><A name="toc-The-_2026-argument" href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-three-dots-argument">10.4 
    The ‘<SAMP>…</SAMP>’ argument</A></LI>
    <LI><A name="toc-Assignments-within-functions" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Assignment-within-functions">10.5 
    Assignments within functions</A></LI>
    <LI><A name="toc-More-advanced-examples-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#More-advanced-examples">10.6 
    More advanced examples</A>     
    <UL class="no-bullet">
      <LI><A name="toc-Efficiency-factors-in-block-designs-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Efficiency-factors-in-block-designs">10.6.1 
      Efficiency factors in block designs</A></LI>
      <LI><A name="toc-Dropping-all-names-in-a-printed-array-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Dropping-all-names-in-a-printed-array">10.6.2 
      Dropping all names in a printed array</A></LI>
      <LI><A name="toc-Recursive-numerical-integration-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Recursive-numerical-integration">10.6.3 
      Recursive numerical integration</A></LI></UL></LI>
    <LI><A name="toc-Scope-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Scope">10.7 
    Scope</A></LI>
    <LI><A name="toc-Customizing-the-environment-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Customizing-the-environment">10.8 
    Customizing the environment</A></LI>
    <LI><A name="toc-Classes_002c-generic-functions-and-object-orientation" 
    href="http://127.0.0.1:29225/doc/manual/R-intro.html#Object-orientation">10.9 
    Classes, generic functions and object orientation</A></LI></UL></LI>
  <LI><A name="toc-Statistical-models-in-R-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Statistical-models-in-R">11 
  Statistical models in R</A>   
  <UL class="no-bullet">
    <LI><A name="toc-Defining-statistical-models_003b-formulae" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Formulae-for-statistical-models">11.1 
    Defining statistical models; formulae</A>     
    <UL class="no-bullet">
      <LI><A name="toc-Contrasts-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Contrasts">11.1.1 
      Contrasts</A></LI></UL></LI>
    <LI><A name="toc-Linear-models-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Linear-models">11.2 
    Linear models</A></LI>
    <LI><A name="toc-Generic-functions-for-extracting-model-information-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Generic-functions-for-extracting-model-information">11.3 
    Generic functions for extracting model information</A></LI>
    <LI><A name="toc-Analysis-of-variance-and-model-comparison-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Analysis-of-variance-and-model-comparison">11.4 
    Analysis of variance and model comparison</A>     
    <UL class="no-bullet">
      <LI><A name="toc-ANOVA-tables-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#ANOVA-tables">11.4.1 
      ANOVA tables</A></LI></UL></LI>
    <LI><A name="toc-Updating-fitted-models-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Updating-fitted-models">11.5 
    Updating fitted models</A></LI>
    <LI><A name="toc-Generalized-linear-models-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Generalized-linear-models">11.6 
    Generalized linear models</A>     
    <UL class="no-bullet">
      <LI><A name="toc-Families-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Families">11.6.1 
      Families</A></LI>
      <LI><A name="toc-The-glm_0028_0029-function-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-glm_0028_0029-function">11.6.2 
      The <CODE>glm()</CODE> function</A></LI></UL></LI>
    <LI><A name="toc-Nonlinear-least-squares-and-maximum-likelihood-models-1" 
    href="http://127.0.0.1:29225/doc/manual/R-intro.html#Nonlinear-least-squares-and-maximum-likelihood-models">11.7 
    Nonlinear least squares and maximum likelihood models</A>     
    <UL class="no-bullet">
      <LI><A name="toc-Least-squares-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Least-squares">11.7.1 
      Least squares</A></LI>
      <LI><A name="toc-Maximum-likelihood-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Maximum-likelihood">11.7.2 
      Maximum likelihood</A></LI></UL></LI>
    <LI><A name="toc-Some-non_002dstandard-models-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Some-non_002dstandard-models">11.8 
    Some non-standard models</A></LI></UL></LI>
  <LI><A name="toc-Graphical-procedures" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Graphics">12 
  Graphical procedures</A>   
  <UL class="no-bullet">
    <LI><A name="toc-High_002dlevel-plotting-commands-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#High_002dlevel-plotting-commands">12.1 
    High-level plotting commands</A>     
    <UL class="no-bullet">
      <LI><A name="toc-The-plot_0028_0029-function-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-plot_0028_0029-function">12.1.1 
      The <CODE>plot()</CODE> function</A></LI>
      <LI><A name="toc-Displaying-multivariate-data-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Displaying-multivariate-data">12.1.2 
      Displaying multivariate data</A></LI>
      <LI><A name="toc-Display-graphics-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Display-graphics">12.1.3 
      Display graphics</A></LI>
      <LI><A name="toc-Arguments-to-high_002dlevel-plotting-functions-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Arguments-to-high_002dlevel-plotting-functions">12.1.4 
      Arguments to high-level plotting functions</A></LI></UL></LI>
    <LI><A name="toc-Low_002dlevel-plotting-commands-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Low_002dlevel-plotting-commands">12.2 
    Low-level plotting commands</A>     
    <UL class="no-bullet">
      <LI><A name="toc-Mathematical-annotation-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Mathematical-annotation">12.2.1 
      Mathematical annotation</A></LI>
      <LI><A name="toc-Hershey-vector-fonts-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Hershey-vector-fonts">12.2.2 
      Hershey vector fonts</A></LI></UL></LI>
    <LI><A name="toc-Interacting-with-graphics-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Interacting-with-graphics">12.3 
    Interacting with graphics</A></LI>
    <LI><A name="toc-Using-graphics-parameters-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Using-graphics-parameters">12.4 
    Using graphics parameters</A>     
    <UL class="no-bullet">
      <LI><A name="toc-Permanent-changes_003a-The-par_0028_0029-function" href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-par_0028_0029-function">12.4.1 
      Permanent changes: The <CODE>par()</CODE> function</A></LI>
      <LI><A name="toc-Temporary-changes_003a-Arguments-to-graphics-functions" 
      href="http://127.0.0.1:29225/doc/manual/R-intro.html#Arguments-to-graphics-functions">12.4.2 
      Temporary changes: Arguments to graphics functions</A></LI></UL></LI>
    <LI><A name="toc-Graphics-parameters-list" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Graphics-parameters">12.5 
    Graphics parameters list</A>     
    <UL class="no-bullet">
      <LI><A name="toc-Graphical-elements-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Graphical-elements">12.5.1 
      Graphical elements</A></LI>
      <LI><A name="toc-Axes-and-tick-marks-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Axes-and-tick-marks">12.5.2 
      Axes and tick marks</A></LI>
      <LI><A name="toc-Figure-margins-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Figure-margins">12.5.3 
      Figure margins</A></LI>
      <LI><A name="toc-Multiple-figure-environment-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Multiple-figure-environment">12.5.4 
      Multiple figure environment</A></LI></UL></LI>
    <LI><A name="toc-Device-drivers-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Device-drivers">12.6 
    Device drivers</A>     
    <UL class="no-bullet">
      <LI><A name="toc-PostScript-diagrams-for-typeset-documents-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#PostScript-diagrams-for-typeset-documents">12.6.1 
      PostScript diagrams for typeset documents</A></LI>
      <LI><A name="toc-Multiple-graphics-devices-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Multiple-graphics-devices">12.6.2 
      Multiple graphics devices</A></LI></UL></LI>
    <LI><A name="toc-Dynamic-graphics-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Dynamic-graphics">12.7 
    Dynamic graphics</A></LI></UL></LI>
  <LI><A name="toc-Packages-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Packages">13 
  Packages</A>   
  <UL class="no-bullet">
    <LI><A name="toc-Standard-packages-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Standard-packages">13.1 
    Standard packages</A></LI>
    <LI><A name="toc-Contributed-packages-and-CRAN-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Contributed-packages-and-CRAN">13.2 
    Contributed packages and <ACRONYM>CRAN</ACRONYM></A></LI>
    <LI><A name="toc-Namespaces-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Namespaces">13.3 
    Namespaces</A></LI></UL></LI>
  <LI><A name="toc-OS-facilities-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#OS-facilities">14 
  OS facilities</A>   
  <UL class="no-bullet">
    <LI><A name="toc-Files-and-directories-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Files-and-directories">14.1 
    Files and directories</A></LI>
    <LI><A name="toc-Filepaths-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Filepaths">14.2 
    Filepaths</A></LI>
    <LI><A name="toc-System-commands-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#System-commands">14.3 
    System commands</A></LI>
    <LI><A name="toc-Compression-and-Archives-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Compression-and-Archives">14.4 
    Compression and Archives</A></LI></UL></LI>
  <LI><A name="toc-A-sample-session-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#A-sample-session">Appendix 
  A A sample session</A></LI>
  <LI><A name="toc-Invoking-R-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Invoking-R">Appendix 
  B Invoking R</A>   
  <UL class="no-bullet">
    <LI><A name="toc-Invoking-R-from-the-command-line-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Invoking-R-from-the-command-line">B.1 
    Invoking R from the command line</A></LI>
    <LI><A name="toc-Invoking-R-under-Windows-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Invoking-R-under-Windows">B.2 
    Invoking R under Windows</A></LI>
    <LI><A name="toc-Invoking-R-under-OS-X-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Invoking-R-under-OS-X">B.3 
    Invoking R under OS X</A></LI>
    <LI><A name="toc-Scripting-with-R-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Scripting-with-R">B.4 
    Scripting with R</A></LI></UL></LI>
  <LI><A name="toc-The-command_002dline-editor-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-command_002dline-editor">Appendix 
  C The command-line editor</A>   
  <UL class="no-bullet">
    <LI><A name="toc-Preliminaries" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Preliminaries">C.1 
    Preliminaries</A></LI>
    <LI><A name="toc-Editing-actions" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Editing-actions">C.2 
    Editing actions</A></LI>
    <LI><A name="toc-Command_002dline-editor-summary" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Command_002dline-editor-summary">C.3 
    Command-line editor summary</A></LI></UL></LI>
  <LI><A name="toc-Function-and-variable-index-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index">Appendix 
  D Function and variable index</A></LI>
  <LI><A name="toc-Concept-index-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Concept-index">Appendix 
  E Concept index</A></LI>
  <LI><A name="toc-References-1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#References">Appendix 
  F References</A></LI></UL></DIV><A name="Top"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Preface" 
rel="next">Preface</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="An-Introduction-to-R"></A> 
<H1 class="top">An Introduction to R</H1>
<P>This is an introduction to R (“GNU S”), a language and environment for
 statistical computing and graphics.  R is similar to the award-winning<A name="DOCF1" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#FOOT1"><SUP>1</SUP></A> S
 system, which was developed at Bell Laboratories by John Chambers et al. It 
provides a wide variety of statistical and graphical techniques (linear and 
nonlinear modelling, statistical tests, time series analysis, classification, 
clustering, ...). </P>
<P>This manual provides information on data types, programming elements,
 statistical modelling and graphics. </P>
<P>This manual is for R, version 3.2.2 (2015-08-14). </P>
<P>Copyright © 1990 W. N. Venables<BR>Copyright © 1992 W. N. Venables &amp; D. 
M. Smith<BR>Copyright © 1997 R. Gentleman &amp; R. Ihaka<BR>Copyright © 1997, 
1998 M. Maechler<BR>Copyright © 1999–2015 R Core Team </P>
<BLOCKQUOTE>
  <P>Permission is granted to make and distribute verbatim copies of this manual 
  provided the copyright notice and this permission notice are preserved on all 
  copies. </P>
  <P>Permission is granted to copy and distribute modified versions of this
   manual under the conditions for verbatim copying, provided that the entire 
  resulting derived work is distributed under the terms of a permission notice 
  identical to this one. </P>
  <P>Permission is granted to copy and distribute translations of this manual
   into another language, under the above conditions for modified versions,
   except that this permission notice may be stated in a translation approved by 
  the R Core Team. </P></BLOCKQUOTE>
<TABLE class="menu" border="0" cellspacing="0" summary="">
  <TBODY>
  <TR>
    <TD align="left" valign="top">• <A accesskey="1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Preface">Preface</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="2" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Introduction-and-preliminaries">Introduction 
      and preliminaries</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="3" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Simple-manipulations-numbers-and-vectors">Simple 
      manipulations numbers and vectors</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="4" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Objects">Objects</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="5" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Factors">Factors</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="6" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Arrays-and-matrices">Arrays 
      and matrices</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="7" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Lists-and-data-frames">Lists 
      and data frames</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="8" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Reading-data-from-files">Reading 
      data from files</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="9" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Probability-distributions">Probability 
      distributions</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Loops-and-conditional-execution">Loops 
      and conditional execution</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Writing-your-own-functions">Writing 
      your own functions</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Statistical-models-in-R">Statistical 
      models in R</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Graphics">Graphics</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Packages">Packages</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A href="http://127.0.0.1:29225/doc/manual/R-intro.html#OS-facilities">OS 
      facilities</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A href="http://127.0.0.1:29225/doc/manual/R-intro.html#A-sample-session">A 
      sample session</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Invoking-R">Invoking 
      R</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-command_002dline-editor">The 
      command-line editor</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index">Function 
      and variable index</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Concept-index">Concept 
      index</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A href="http://127.0.0.1:29225/doc/manual/R-intro.html#References">References</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR></TBODY></TABLE>
<HR>
<A name="Preface"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Introduction-and-preliminaries" 
rel="next">Introduction and preliminaries</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Top" 
rel="prev">Top</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Top" 
rel="up">Top</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Preface-1"></A> 
<H2 class="unnumbered">Preface</H2>
<P>This introduction to R is derived from an original set of notes describing 
the S and <SMALL>S-PLUS</SMALL> environments written in 1990–2 by Bill Venables 
and David M. Smith when at the University of Adelaide.  We have made a number of 
small changes to reflect differences between the R and S programs, and expanded 
some of the material. </P>
<P>We would like to extend warm thanks to Bill Venables (and David Smith) for 
granting permission to distribute this modified version of the notes in this 
way, and for being a supporter of R from way back. </P>
<P>Comments and corrections are always welcome.  Please address email
 correspondence to <A 
href="mailto:R-core@R-project.org">R-core@R-project.org</A>. </P><A name="Suggestions-to-the-reader"></A> 
<H4 class="subheading">Suggestions to the reader</H4>
<P>Most R novices will start with the introductory session in Appendix A.  This 
should give some familiarity with the style of R sessions and more importantly 
some instant feedback on what actually happens. </P>
<P>Many users will come to R mainly for its graphical facilities. See <A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Graphics">Graphics</A>, 
which can be read at almost any time and need not wait until all the preceding 
sections have been digested. </P>
<TABLE class="menu" border="0" cellspacing="0" summary="">
  <TBODY>
  <TR>
    <TD align="left" valign="top">• <A accesskey="1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Introduction-and-preliminaries">Introduction 
      and preliminaries</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR></TBODY></TABLE>
<HR>
<A name="Introduction-and-preliminaries"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Simple-manipulations-numbers-and-vectors" 
rel="next">Simple manipulations numbers and vectors</A>, Previous: <A accesskey="p" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#Preface" 
rel="prev">Preface</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Top" 
rel="up">Top</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Introduction-and-preliminaries-1"></A> 
<H2 class="chapter">1 Introduction and preliminaries</H2>
<TABLE class="menu" border="0" cellspacing="0" summary="">
  <TBODY>
  <TR>
    <TD align="left" valign="top">• <A accesskey="1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-R-environment">The 
      R environment</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="2" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Related-software-and-documentation">Related 
      software and documentation</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="3" href="http://127.0.0.1:29225/doc/manual/R-intro.html#R-and-statistics">R 
      and statistics</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="4" href="http://127.0.0.1:29225/doc/manual/R-intro.html#R-and-the-window-system">R 
      and the window system</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="5" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Using-R-interactively">Using 
      R interactively</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="6" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Getting-help">Getting 
      help</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="7" href="http://127.0.0.1:29225/doc/manual/R-intro.html#R-commands_003b-case-sensitivity-etc">R 
      commands; case sensitivity etc</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="8" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Recall-and-correction-of-previous-commands">Recall 
      and correction of previous commands</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="9" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Executing-commands-from-or-diverting-output-to-a-file">Executing 
      commands from or diverting output to a file</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Data-permanency-and-removing-objects">Data 
      permanency and removing objects</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR></TBODY></TABLE>
<HR>
<A name="The-R-environment"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Related-software-and-documentation" 
rel="next">Related software and documentation</A>, Previous: <A accesskey="p" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#Introduction-and-preliminaries" 
rel="prev">Introduction and preliminaries</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Introduction-and-preliminaries" 
rel="up">Introduction and preliminaries</A> &nbsp; [<A title="Table of contents" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" rel="contents">Contents</A>][<A 
title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="The-R-environment-1"></A> 
<H3 class="section">1.1 The R environment</H3>
<P>R is an integrated suite of software facilities for data manipulation, 
calculation and graphical display.  Among other things it has </P>
<UL>
  <LI> an effective data handling and storage facility, </LI>
  <LI> a suite of operators for calculations on arrays, in particular matrices, 
  </LI>
  <LI> a large, coherent, integrated collection of intermediate tools for data
   analysis, </LI>
  <LI> graphical facilities for data analysis and display either directly at the 
  computer or on hardcopy, and </LI>
  <LI> a well developed, simple and effective programming language (called ‘S’) 
  which includes conditionals, loops, user defined recursive functions and input 
  and output facilities.  (Indeed most of the system supplied functions are 
  themselves written in the S language.) </LI></UL>
<P>The term “environment” is intended to characterize it as a fully planned and 
coherent system, rather than an incremental accretion of very specific and 
inflexible tools, as is frequently the case with other data analysis software. 
</P>
<P>R is very much a vehicle for newly developing methods of interactive data 
analysis.  It has developed rapidly, and has been extended by a large collection 
of <EM>packages</EM>.  However, most programs written in R are essentially 
ephemeral, written for a single piece of data analysis. </P>
<HR>
<A name="Related-software-and-documentation"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#R-and-statistics" 
rel="next">R and statistics</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-R-environment" 
rel="prev">The R environment</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Introduction-and-preliminaries" 
rel="up">Introduction and preliminaries</A> &nbsp; [<A title="Table of contents" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" rel="contents">Contents</A>][<A 
title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A 
name="Related-software-and-documentation-1"></A> 
<H3 class="section">1.2 Related software and documentation</H3>
<P>R can be regarded as an implementation of the S language which was developed 
at Bell Laboratories by Rick Becker, John Chambers and Allan Wilks, and also 
forms the basis of the <SMALL>S-PLUS</SMALL> systems. </P>
<P>The evolution of the S language is characterized by four books by John 
Chambers and coauthors.  For R, the basic reference is <EM>The New S Language: A 
Programming Environment for Data Analysis and Graphics</EM> by Richard A. 
Becker, John M. Chambers and Allan R. Wilks.  The new features of the 1991 
release of S are covered in <EM>Statistical Models in S</EM> edited by John M.
 Chambers and Trevor J. Hastie.  The formal methods and classes of the 
<STRONG>methods</STRONG> package are based on those described in <EM>Programming
 with Data</EM> by John M. Chambers.  See <A href="http://127.0.0.1:29225/doc/manual/R-intro.html#References">References</A>, 
for precise references. </P>
<P>There are now a number of books which describe how to use R for data analysis 
and statistics, and documentation for S/<SMALL>S-PLUS</SMALL> can typically be 
used with R, keeping the differences between the S implementations in mind.  See 
<A href="http://127.0.0.1:29225/doc/manual/R-FAQ.html#What-documentation-exists-for-R_003f">What 
documentation exists for R?</A> in <CITE>The R statistical system FAQ</CITE>. 
</P>
<HR>
<A name="R-and-statistics"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#R-and-the-window-system" 
rel="next">R and the window system</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Related-software-and-documentation" 
rel="prev">Related software and documentation</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Introduction-and-preliminaries" 
rel="up">Introduction and preliminaries</A> &nbsp; [<A title="Table of contents" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" rel="contents">Contents</A>][<A 
title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="R-and-statistics-1"></A> 
<H3 class="section">1.3 R and statistics</H3><A name="index-Packages"></A> 
<P>Our introduction to the R environment did not mention <EM>statistics</EM>, 
yet many people use R as a statistics system.  We prefer to think of it of an 
environment within which many classical and modern statistical techniques have 
been implemented.  A few of these are built into the base R environment, but 
many are supplied as <EM>packages</EM>.  There are about 25 packages supplied 
with R (called “standard” and “recommended” packages) and many more are 
available through the <ACRONYM>CRAN</ACRONYM> family of Internet sites (via <A 
href="https://cran.r-project.org/">https://cran.r-project.org/</A>) and 
elsewhere.  More details on packages are given later (see <A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Packages">Packages</A>). 
</P>
<P>Most classical statistics and much of the latest methodology is available for 
use with R, but users may need to be prepared to do a little work to find it. 
</P>
<P>There is an important difference in philosophy between S (and hence R) and 
the other main statistical systems.  In S a statistical analysis is normally 
done as a series of steps, with intermediate results being stored in objects.  
Thus whereas SAS and SPSS will give copious output from a regression or 
discriminant analysis, R will give minimal output and store the results in a fit 
object for subsequent interrogation by further R functions. </P>
<HR>
<A name="R-and-the-window-system"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Using-R-interactively" 
rel="next">Using R interactively</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#R-and-statistics" 
rel="prev">R and statistics</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Introduction-and-preliminaries" 
rel="up">Introduction and preliminaries</A> &nbsp; [<A title="Table of contents" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" rel="contents">Contents</A>][<A 
title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="R-and-the-window-system-1"></A> 
<H3 class="section">1.4 R and the window system</H3>
<P>The most convenient way to use R is at a graphics workstation running a 
windowing system.  This guide is aimed at users who have this facility.  In 
particular we will occasionally refer to the use of R on an X window system 
although the vast bulk of what is said applies generally to any implementation 
of the R environment. </P>
<P>Most users will find it necessary to interact directly with the operating 
system on their computer from time to time.  In this guide, we mainly discuss 
interaction with the operating system on UNIX machines. If you are running R 
under Windows or OS X you will need to make some small adjustments. </P>
<P>Setting up a workstation to take full advantage of the customizable features 
of R is a straightforward if somewhat tedious procedure, and will not be 
considered further here.  Users in difficulty should seek local expert help. 
</P>
<HR>
<A name="Using-R-interactively"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Getting-help" 
rel="next">Getting help</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#R-and-the-window-system" 
rel="prev">R and the window system</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Introduction-and-preliminaries" 
rel="up">Introduction and preliminaries</A> &nbsp; [<A title="Table of contents" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" rel="contents">Contents</A>][<A 
title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Using-R-interactively-1"></A> 
<H3 class="section">1.5 Using R interactively</H3>
<P>When you use the R program it issues a prompt when it expects input commands. 
 The default prompt is ‘<SAMP><CODE>&gt;</CODE></SAMP>’, which on UNIX might be
 the same as the shell prompt, and so it may appear that nothing is happening.  
However, as we shall see, it is easy to change to a different R prompt if you 
wish.  We will assume that the UNIX shell prompt is 
‘<SAMP><CODE>$</CODE></SAMP>’. </P>
<P>In using R under UNIX the suggested procedure for the first occasion is as 
follows: </P>
<OL>
  <LI> Create a separate sub-directory, say <SAMP>work</SAMP>, to hold data 
  files on which you will use R for this problem.  This will be the working
   directory whenever you use R for this particular problem. 
  <DIV class="example">
<PRE class="example">$ mkdir work
$ cd work
</PRE></DIV></LI>
  <LI> Start the R program with the command 
  <DIV class="example">
<PRE class="example">$ R
</PRE></DIV></LI>
  <LI> At this point R commands may be issued (see later). </LI>
  <LI> To quit the R program the command is 
  <DIV class="example">
<PRE class="example">&gt; q()
</PRE></DIV>
  <P>At this point you will be asked whether you want to save the data from your 
  R session.  On some systems this will bring up a dialog box, and on others you 
  will receive a text prompt to which you can respond <KBD>yes</KBD>, 
  <KBD>no</KBD> or <KBD>cancel</KBD> (a single letter abbreviation will do) to 
  save the data before quitting, quit without saving, or return to the R 
  session.  Data which is saved will be available in future R sessions. 
</P></LI></OL>
<P>Further R sessions are simple. </P>
<OL>
  <LI> Make <SAMP>work</SAMP> the working directory and start the program as 
  before: 
  <DIV class="example">
<PRE class="example">$ cd work
$ R
</PRE></DIV></LI>
  <LI> Use the R program, terminating with the <CODE>q()</CODE> command at the 
  end of the session. </LI></OL>
<P>To use R under Windows the procedure to follow is basically the same.  Create 
a folder as the working directory, and set that in the <SAMP>Start In</SAMP> 
field in your R shortcut. Then launch R by double clicking on the icon. </P><A 
name="An-introductory-session"></A> 
<H3 class="section">1.6 An introductory session</H3>
<P>Readers wishing to get a feel for R at a computer before proceeding are 
strongly advised to work through the introductory session given in <A href="http://127.0.0.1:29225/doc/manual/R-intro.html#A-sample-session">A 
sample session</A>. </P>
<HR>
<A name="Getting-help"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#R-commands_003b-case-sensitivity-etc" 
rel="next">R commands; case sensitivity etc</A>, Previous: <A accesskey="p" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#Using-R-interactively" rel="prev">Using 
R interactively</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Introduction-and-preliminaries" 
rel="up">Introduction and preliminaries</A> &nbsp; [<A title="Table of contents" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" rel="contents">Contents</A>][<A 
title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Getting-help-with-functions-and-features"></A> 
<H3 class="section">1.7 Getting help with functions and features</H3><A name="index-help"></A> 
<P>R has an inbuilt help facility similar to the <CODE>man</CODE> facility of
 UNIX.  To get more information on any specific named function, for example 
<CODE>solve</CODE>, the command is </P>
<DIV class="example">
<PRE class="example">&gt; help(solve)
</PRE></DIV><A name="index-help-1"></A> 
<P>An alternative is </P>
<DIV class="example">
<PRE class="example">&gt; ?solve
</PRE></DIV><A name="index-_003f"></A> 
<P>For a feature specified by special characters, the argument must be enclosed 
in double or single quotes, making it a “character string”: This is also 
necessary for a few words with syntactic meaning including <CODE>if</CODE>, 
<CODE>for</CODE> and <CODE>function</CODE>. </P>
<DIV class="example">
<PRE class="example">&gt; help("[[")
</PRE></DIV>
<P>Either form of quote mark may be used to escape the other, as in the string 
<CODE>"It's important"</CODE>.  Our convention is to use double quote marks for 
preference. </P>
<P>On most R installations help is available in <ACRONYM>HTML</ACRONYM> format 
by running </P>
<DIV class="example">
<PRE class="example">&gt; help.start()
</PRE></DIV><A name="index-help_002estart"></A> 
<P>which will launch a Web browser that allows the help pages to be browsed with 
hyperlinks.  On UNIX, subsequent help requests are sent to the 
<ACRONYM>HTML</ACRONYM>-based help system.  The ‘Search Engine and Keywords’ 
link in the page loaded by <CODE>help.start()</CODE> is particularly useful as 
it is contains a high-level concept list which searches though available
 functions.  It can be a great way to get your bearings quickly and to
 understand the breadth of what R has to offer. </P><A name="index-help_002esearch"></A> 
<P>The <CODE>help.search</CODE> command (alternatively <CODE>??</CODE>)  allows 
searching for help in various ways. For example, </P>
<DIV class="example">
<PRE class="example">&gt; ??solve
</PRE></DIV><A name="index-_003f_003f"></A> 
<P>Try <CODE>?help.search</CODE> for details and more examples. </P>
<P>The examples on a help topic can normally be run by </P>
<DIV class="example">
<PRE class="example">&gt; example(<VAR>topic</VAR>)
</PRE></DIV><A name="index-example"></A> 
<P>Windows versions of R have other optional help systems: use </P>
<DIV class="example">
<PRE class="example">&gt; ?help
</PRE></DIV>
<P>for further details. </P>
<HR>
<A name="R-commands_003b-case-sensitivity-etc"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Recall-and-correction-of-previous-commands" 
rel="next">Recall and correction of previous commands</A>, Previous: <A 
accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Getting-help" 
rel="prev">Getting help</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Introduction-and-preliminaries" 
rel="up">Introduction and preliminaries</A> &nbsp; [<A title="Table of contents" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" rel="contents">Contents</A>][<A 
title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="R-commands_002c-case-sensitivity_002c-etc_002e"></A> 
<H3 class="section">1.8 R commands, case sensitivity, etc.</H3>
<P>Technically R is an <EM>expression language</EM> with a very simple syntax.  
It is <EM>case sensitive</EM> as are most UNIX based packages, so <CODE>A</CODE> 
and <CODE>a</CODE> are different symbols and would refer to different variables. 
 The set of symbols which can be used in R names depends on the operating system 
and country within which R is being run (technically on the <EM>locale</EM> in 
use).  Normally all alphanumeric symbols are allowed<A name="DOCF2" href="http://127.0.0.1:29225/doc/manual/R-intro.html#FOOT2"><SUP>2</SUP></A> 
(and in some countries this includes accented letters) plus 
‘<SAMP><CODE>.</CODE></SAMP>’ and ‘<SAMP><CODE>_</CODE></SAMP>’, with the 
restriction that a name must start with ‘<SAMP><CODE>.</CODE></SAMP>’ or a 
letter, and if it starts with ‘<SAMP><CODE>.</CODE></SAMP>’ the second character 
must not be a digit.  Names are effectively unlimited in length. </P>
<P>Elementary commands consist of either <EM>expressions</EM> or 
<EM>assignments</EM>.  If an expression is given as a command, it is evaluated, 
printed (unless specifically made invisible), and the value is lost.  An 
assignment also evaluates an expression and passes the value to a variable but 
the result is not automatically printed. </P>
<P>Commands are separated either by a semi-colon 
(‘<SAMP><CODE>;</CODE></SAMP>’), or by a newline.  Elementary commands can be 
grouped together into one compound expression by braces 
(‘<SAMP><CODE>{</CODE></SAMP>’ and ‘<SAMP><CODE>}</CODE></SAMP>’). 
<EM>Comments</EM> can be put almost<A name="DOCF3" href="http://127.0.0.1:29225/doc/manual/R-intro.html#FOOT3"><SUP>3</SUP></A> 
anywhere, starting with a hashmark (‘<SAMP><CODE>#</CODE></SAMP>’), everything 
to the end of the line is a comment. </P>
<P>If a command is not complete at the end of a line, R will give a different 
prompt, by default </P>
<DIV class="example">
<PRE class="example">+
</PRE></DIV>
<P>on second and subsequent lines and continue to read input until the command 
is syntactically complete.  This prompt may be changed by the user.  We will 
generally omit the continuation prompt and indicate continuation by simple 
indenting. </P>
<P>Command lines entered at the console are limited<A name="DOCF4" href="http://127.0.0.1:29225/doc/manual/R-intro.html#FOOT4"><SUP>4</SUP></A> 
to about 4095 bytes (not characters). </P>
<HR>
<A name="Recall-and-correction-of-previous-commands"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Executing-commands-from-or-diverting-output-to-a-file" 
rel="next">Executing commands from or diverting output to a file</A>, Previous: 
<A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#R-commands_003b-case-sensitivity-etc" 
rel="prev">R commands; case sensitivity etc</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Introduction-and-preliminaries" 
rel="up">Introduction and preliminaries</A> &nbsp; [<A title="Table of contents" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" rel="contents">Contents</A>][<A 
title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Recall-and-correction-of-previous-commands-1"></A> 
<H3 class="section">1.9 Recall and correction of previous commands</H3>
<P>Under many versions of UNIX and on Windows, R provides a mechanism for 
recalling and re-executing previous commands.  The vertical arrow keys on the 
keyboard can be used to scroll forward and backward through a <EM>command 
history</EM>.  Once a command is located in this way, the cursor can be moved 
within the command using the horizontal arrow keys, and characters can be 
removed with the <TT class="key">DEL</TT> key or added with the other keys.  
More details are provided later: see <A href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-command_002dline-editor">The 
command-line editor</A>. </P>
<P>The recall and editing capabilities under UNIX are highly customizable. You 
can find out how to do this by reading the manual entry for the 
<STRONG>readline</STRONG> library. </P>
<P>Alternatively, the Emacs text editor provides more general support mechanisms 
(via <ACRONYM>ESS</ACRONYM>, <EM>Emacs Speaks Statistics</EM>) for working 
interactively with R.  See <A href="http://127.0.0.1:29225/doc/manual/R-FAQ.html#R-and-Emacs">R 
and Emacs</A> in <CITE>The R statistical system FAQ</CITE>. </P>
<HR>
<A name="Executing-commands-from-or-diverting-output-to-a-file"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Data-permanency-and-removing-objects" 
rel="next">Data permanency and removing objects</A>, Previous: <A accesskey="p" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#Recall-and-correction-of-previous-commands" 
rel="prev">Recall and correction of previous commands</A>, Up: <A accesskey="u" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#Introduction-and-preliminaries" 
rel="up">Introduction and preliminaries</A> &nbsp; [<A title="Table of contents" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" rel="contents">Contents</A>][<A 
title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Executing-commands-from-or-diverting-output-to-a-file-1"></A> 
<H3 class="section">1.10 Executing commands from or diverting output to a 
file</H3><A name="index-Diverting-input-and-output"></A> 
<P>If commands<A name="DOCF5" href="http://127.0.0.1:29225/doc/manual/R-intro.html#FOOT5"><SUP>5</SUP></A> 
are stored in an external file, say <SAMP>commands.R</SAMP> in the working 
directory <SAMP>work</SAMP>, they may be executed at any time in an R session 
with the command </P>
<DIV class="example">
<PRE class="example">&gt; source("commands.R")
</PRE></DIV><A name="index-source"></A> 
<P>For Windows <STRONG>Source</STRONG> is also available on the 
<STRONG>File</STRONG> menu.  The function <CODE>sink</CODE>, </P>
<DIV class="example">
<PRE class="example">&gt; sink("record.lis")
</PRE></DIV><A 
name="index-sink"></A> 
<P>will divert all subsequent output from the console to an external file, 
<SAMP>record.lis</SAMP>.  The command </P>
<DIV class="example">
<PRE class="example">&gt; sink()
</PRE></DIV>
<P>restores it to the console once again. </P>
<HR>
<A name="Data-permanency-and-removing-objects"></A> 
<DIV class="header">
<P>Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Executing-commands-from-or-diverting-output-to-a-file" 
rel="prev">Executing commands from or diverting output to a file</A>, Up: <A 
accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Introduction-and-preliminaries" 
rel="up">Introduction and preliminaries</A> &nbsp; [<A title="Table of contents" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" rel="contents">Contents</A>][<A 
title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A 
name="Data-permanency-and-removing-objects-1"></A> 
<H3 class="section">1.11 Data permanency and removing objects</H3>
<P>The entities that R creates and manipulates are known as <EM>objects</EM>.  
These may be variables, arrays of numbers, character strings, functions, or more 
general structures built from such components. </P>
<P>During an R session, objects are created and stored by name (we discuss this 
process in the next session).  The R command </P>
<DIV class="example">
<PRE class="example">&gt; objects()
</PRE></DIV>
<P>(alternatively, <CODE>ls()</CODE>) can be used to display the names of (most
 of) the objects which are currently stored within R.  The collection of objects 
currently stored is called the <EM>workspace</EM>. <A 
name="index-Workspace"></A> </P>
<P>To remove objects the function <CODE>rm</CODE> is available: </P>
<DIV class="example">
<PRE class="example">&gt; rm(x, y, z, ink, junk, temp, foo, bar)
</PRE></DIV><A 
name="index-rm"></A> <A name="index-Removing-objects"></A> 
<P>All objects created during an R session can be stored permanently in a file 
for use in future R sessions.  At the end of each R session you are given the 
opportunity to save all the currently available objects.  If you indicate that 
you want to do this, the objects are written to a file called 
<SAMP>.RData</SAMP><A name="DOCF6" href="http://127.0.0.1:29225/doc/manual/R-intro.html#FOOT6"><SUP>6</SUP></A> 
in the current directory, and the command lines used in the session are saved to 
a file called <SAMP>.Rhistory</SAMP>. </P>
<P>When R is started at later time from the same directory it reloads the 
workspace from this file.  At the same time the associated commands history is 
reloaded. </P>
<P>It is recommended that you should use separate working directories for
 analyses conducted with R.  It is quite common for objects with names 
<CODE>x</CODE> and <CODE>y</CODE> to be created during an analysis.  Names like 
this are often meaningful in the context of a single analysis, but it can be
 quite hard to decide what they might be when the several analyses have been 
conducted in the same directory. </P>
<HR>
<A name="Simple-manipulations-numbers-and-vectors"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Objects" 
rel="next">Objects</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Introduction-and-preliminaries" 
rel="prev">Introduction and preliminaries</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Top" 
rel="up">Top</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Simple-manipulations_003b-numbers-and-vectors"></A> 
<H2 class="chapter">2 Simple manipulations; numbers and vectors</H2><A name="index-Vectors"></A> 
<TABLE class="menu" border="0" cellspacing="0" summary="">
  <TBODY>
  <TR>
    <TD align="left" valign="top">• <A accesskey="1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Vectors-and-assignment">Vectors 
      and assignment</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="2" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Vector-arithmetic">Vector 
      arithmetic</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="3" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Generating-regular-sequences">Generating 
      regular sequences</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="4" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Logical-vectors">Logical 
      vectors</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="5" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Missing-values">Missing 
      values</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="6" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Character-vectors">Character 
      vectors</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="7" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Index-vectors">Index 
      vectors</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="8" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Other-types-of-objects">Other 
      types of objects</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR></TBODY></TABLE>
<HR>
<A name="Vectors-and-assignment"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Vector-arithmetic" 
rel="next">Vector arithmetic</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Simple-manipulations-numbers-and-vectors" 
rel="prev">Simple manipulations numbers and vectors</A>, Up: <A accesskey="u" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#Simple-manipulations-numbers-and-vectors" 
rel="up">Simple manipulations numbers and vectors</A> &nbsp; [<A title="Table of contents" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" rel="contents">Contents</A>][<A 
title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Vectors-and-assignment-1"></A> 
<H3 class="section">2.1 Vectors and assignment</H3>
<P>R operates on named <EM>data structures</EM>.  The simplest such structure is 
the numeric <EM>vector</EM>, which is a single entity consisting of an ordered 
collection of numbers.  To set up a vector named <CODE>x</CODE>, say, consisting 
of five numbers, namely 10.4, 5.6, 3.1, 6.4 and 21.7, use the R command </P>
<DIV class="example">
<PRE class="example">&gt; x &lt;- c(10.4, 5.6, 3.1, 6.4, 21.7)
</PRE></DIV><A 
name="index-c"></A> <A name="index-vector"></A> 
<P>This is an <EM>assignment</EM> statement using the <EM>function</EM> 
<CODE>c()</CODE> which in this context can take an arbitrary number of vector 
<EM>arguments</EM> and whose value is a vector got by concatenating its
 arguments end to end.<A name="DOCF7" href="http://127.0.0.1:29225/doc/manual/R-intro.html#FOOT7"><SUP>7</SUP></A> 
</P>
<P>A number occurring by itself in an expression is taken as a vector of length 
one. </P>
<P>Notice that the assignment operator (‘<SAMP><CODE>&lt;-</CODE></SAMP>’), 
which consists of the two characters ‘<SAMP><CODE>&lt;</CODE></SAMP>’ (“less 
than”) and ‘<SAMP><CODE>-</CODE></SAMP>’ (“minus”) occurring strictly 
side-by-side and it ‘points’ to the object receiving the value of the 
expression. In most contexts the ‘<SAMP><CODE>=</CODE></SAMP>’ operator can be 
used as an alternative. <A name="index-Assignment"></A> </P>
<P>Assignment can also be made using the function <CODE>assign()</CODE>.  An
 equivalent way of making the same assignment as above is with: </P>
<DIV class="example">
<PRE class="example">&gt; assign("x", c(10.4, 5.6, 3.1, 6.4, 21.7))
</PRE></DIV>
<P>The usual operator, <CODE>&lt;-</CODE>, can be thought of as a syntactic
 short-cut to this. </P>
<P>Assignments can also be made in the other direction, using the obvious change 
in the assignment operator.  So the same assignment could be made using </P>
<DIV class="example">
<PRE class="example">&gt; c(10.4, 5.6, 3.1, 6.4, 21.7) -&gt; x
</PRE></DIV>
<P>If an expression is used as a complete command, the value is printed <EM>and 
lost</EM><A name="DOCF8" href="http://127.0.0.1:29225/doc/manual/R-intro.html#FOOT8"><SUP>8</SUP></A>. 
 So now if we were to use the command </P>
<DIV class="example">
<PRE class="example">&gt; 1/x
</PRE></DIV>
<P>the reciprocals of the five values would be printed at the terminal (and the 
value of <CODE>x</CODE>, of course, unchanged). </P>
<P>The further assignment </P>
<DIV class="example">
<PRE class="example">&gt; y &lt;- c(x, 0, x)
</PRE></DIV>
<P>would create a vector <CODE>y</CODE> with 11 entries consisting of two copies
 of <CODE>x</CODE> with a zero in the middle place. </P>
<HR>
<A name="Vector-arithmetic"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Generating-regular-sequences" 
rel="next">Generating regular sequences</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Vectors-and-assignment" 
rel="prev">Vectors and assignment</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Simple-manipulations-numbers-and-vectors" 
rel="up">Simple manipulations numbers and vectors</A> &nbsp; [<A title="Table of contents" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" rel="contents">Contents</A>][<A 
title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Vector-arithmetic-1"></A> 
<H3 class="section">2.2 Vector arithmetic</H3>
<P>Vectors can be used in arithmetic expressions, in which case the operations 
are performed element by element.  Vectors occurring in the same expression need 
not all be of the same length.  If they are not, the value of the expression is 
a vector with the same length as the longest vector which occurs in the 
expression.  Shorter vectors in the expression are <EM>recycled</EM> as often as 
need be (perhaps fractionally) until they match the length of the longest 
vector.  In particular a constant is simply repeated.  So with the above 
assignments the command <A name="index-Recycling-rule"></A> </P>
<DIV class="example">
<PRE class="example">&gt; v &lt;- 2*x + y + 1
</PRE></DIV>
<P>generates a new vector <CODE>v</CODE> of length 11 constructed by adding
 together, element by element, <CODE>2*x</CODE> repeated 2.2 times, 
<CODE>y</CODE> repeated just once, and <CODE>1</CODE> repeated 11 times. </P><A 
name="index-Arithmetic-functions-and-operators"></A> 
<P>The elementary arithmetic operators are the usual <CODE>+</CODE>, 
<CODE>-</CODE>, <CODE>*</CODE>, <CODE>/</CODE> and <CODE>^</CODE> for raising to 
a power. <A name="index-_002b"></A> <A name="index-_002d"></A> <A name="index-_002a"></A> 
<A name="index-_002f"></A> <A name="index-_005e"></A> In addition all of the 
common arithmetic functions are available. <CODE>log</CODE>, <CODE>exp</CODE>, 
<CODE>sin</CODE>, <CODE>cos</CODE>, <CODE>tan</CODE>, <CODE>sqrt</CODE>, and so 
on, all have their usual meaning. <A name="index-log"></A> <A 
name="index-exp"></A> <A name="index-sin"></A> <A name="index-cos"></A> <A name="index-tan"></A> 
<A name="index-sqrt"></A> <CODE>max</CODE> and <CODE>min</CODE> select the 
largest and smallest elements of a vector respectively. <A name="index-max"></A> 
<A name="index-min"></A> <CODE>range</CODE> is a function whose value is a 
vector of length two, namely <CODE>c(min(x), max(x))</CODE>. <A name="index-range"></A> 
<CODE>length(x)</CODE> is the number of elements in <CODE>x</CODE>, <A name="index-length"></A> 
<CODE>sum(x)</CODE> gives the total of the elements in <CODE>x</CODE>, <A name="index-sum"></A>
 and <CODE>prod(x)</CODE> their product. <A name="index-prod"></A> </P>
<P>Two statistical functions are <CODE>mean(x)</CODE> which calculates the 
sample mean, which is the same as <CODE>sum(x)/length(x)</CODE>, <A name="index-mean"></A>
 and <CODE>var(x)</CODE> which gives </P>
<DIV class="example">
<PRE class="example">sum((x-mean(x))^2)/(length(x)-1)
</PRE></DIV><A name="index-var"></A> 
<P>or sample variance.  If the argument to <CODE>var()</CODE> is an 
<EM>n</EM>-by-<EM>p</EM> matrix the value is a <EM>p</EM>-by-<EM>p</EM> sample
 covariance matrix got by regarding the rows as independent <EM>p</EM>-variate 
sample vectors. </P>
<P><CODE>sort(x)</CODE> returns a vector of the same size as <CODE>x</CODE> with 
the elements arranged in increasing order; however there are other more flexible 
sorting facilities available (see <CODE>order()</CODE> or 
<CODE>sort.list()</CODE> which produce a permutation to do the sorting). <A 
name="index-sort"></A> <A name="index-order"></A> </P>
<P>Note that <CODE>max</CODE> and <CODE>min</CODE> select the largest and 
smallest values in their arguments, even if they are given several vectors.  The 
<EM>parallel</EM> maximum and minimum functions <CODE>pmax</CODE> and 
<CODE>pmin</CODE> return a vector (of length equal to their longest argument)
 that contains in each element the largest (smallest) element in that position 
in any of the input vectors. <A name="index-pmax"></A> <A name="index-pmin"></A> 
</P>
<P>For most purposes the user will not be concerned if the “numbers” in a
 numeric vector are integers, reals or even complex.  Internally calculations 
are done as double precision real numbers, or double precision complex numbers 
if the input data are complex. </P>
<P>To work with complex numbers, supply an explicit complex part.  Thus </P>
<DIV class="example">
<PRE class="example">sqrt(-17)
</PRE></DIV>
<P>will give <CODE>NaN</CODE> and a warning, but </P>
<DIV class="example">
<PRE class="example">sqrt(-17+0i)
</PRE></DIV>
<P>will do the computations as complex numbers. </P>
<TABLE class="menu" border="0" cellspacing="0" summary="">
  <TBODY>
  <TR>
    <TD align="left" valign="top">• <A accesskey="1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Generating-regular-sequences">Generating 
      regular sequences</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR></TBODY></TABLE>
<HR>
<A name="Generating-regular-sequences"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Logical-vectors" 
rel="next">Logical vectors</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Vector-arithmetic" 
rel="prev">Vector arithmetic</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Simple-manipulations-numbers-and-vectors" 
rel="up">Simple manipulations numbers and vectors</A> &nbsp; [<A title="Table of contents" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" rel="contents">Contents</A>][<A 
title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Generating-regular-sequences-1"></A> 
<H3 class="section">2.3 Generating regular sequences</H3><A name="index-Regular-sequences"></A> 
<P>R has a number of facilities for generating commonly used sequences of 
numbers.  For example <CODE>1:30</CODE> is the vector <CODE>c(1, 2, …, 29, 
30)</CODE>. <A name="index-_003a"></A> The colon operator has high priority 
within an expression, so, for example <CODE>2*1:15</CODE> is the vector 
<CODE>c(2, 4, …, 28, 30)</CODE>. Put <CODE>n &lt;- 10</CODE> and compare the 
sequences <CODE>1:n-1</CODE> and <CODE>1:(n-1)</CODE>. </P>
<P>The construction <CODE>30:1</CODE> may be used to generate a sequence
 backwards. </P><A name="index-seq"></A> 
<P>The function <CODE>seq()</CODE> is a more general facility for generating
 sequences.  It has five arguments, only some of which may be specified in any 
one call.  The first two arguments, if given, specify the beginning and end of 
the sequence, and if these are the only two arguments given the result is the 
same as the colon operator.  That is <CODE>seq(2,10)</CODE> is the same vector 
as <CODE>2:10</CODE>. </P>
<P>Arguments to <CODE>seq()</CODE>, and to many other R functions, can also be 
given in named form, in which case the order in which they appear is irrelevant. 
 The first two arguments may be named <CODE>from=<VAR>value</VAR></CODE> and 
<CODE>to=<VAR>value</VAR></CODE>; thus <CODE>seq(1,30)</CODE>, <CODE>seq(from=1, 
to=30)</CODE> and <CODE>seq(to=30, from=1)</CODE> are all the same as 
<CODE>1:30</CODE>.  The next two arguments to <CODE>seq()</CODE> may be named 
<CODE>by=<VAR>value</VAR></CODE> and <CODE>length=<VAR>value</VAR></CODE>, which 
specify a step size and a length for the sequence respectively.  If neither of 
these is given, the default <CODE>by=1</CODE> is assumed. </P>
<P>For example </P>
<DIV class="example">
<PRE class="example">&gt; seq(-5, 5, by=.2) -&gt; s3
</PRE></DIV>
<P>generates in <CODE>s3</CODE> the vector <CODE>c(-5.0, -4.8, -4.6, …, 4.6, 
4.8, 5.0)</CODE>.  Similarly </P>
<DIV class="example">
<PRE class="example">&gt; s4 &lt;- seq(length=51, from=-5, by=.2)
</PRE></DIV>
<P>generates the same vector in <CODE>s4</CODE>. </P>
<P>The fifth argument may be named <CODE>along=<VAR>vector</VAR></CODE>, which 
is normally used as the only argument to create the sequence <CODE>1, 2, …, 
length(<VAR>vector</VAR>)</CODE>, or the empty sequence if the vector is empty 
(as it can be). </P>
<P>A related function is <CODE>rep()</CODE> <A name="index-rep"></A> which can 
be used for replicating an object in various complicated ways. The simplest form 
is </P>
<DIV class="example">
<PRE class="example">&gt; s5 &lt;- rep(x, times=5)
</PRE></DIV>
<P>which will put five copies of <CODE>x</CODE> end-to-end in <CODE>s5</CODE>.  
Another useful version is </P>
<DIV class="example">
<PRE class="example">&gt; s6 &lt;- rep(x, each=5)
</PRE></DIV>
<P>which repeats each element of <CODE>x</CODE> five times before moving on to
 the next. </P>
<HR>
<A name="Logical-vectors"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Missing-values" 
rel="next">Missing values</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Generating-regular-sequences" 
rel="prev">Generating regular sequences</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Simple-manipulations-numbers-and-vectors" 
rel="up">Simple manipulations numbers and vectors</A> &nbsp; [<A title="Table of contents" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" rel="contents">Contents</A>][<A 
title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Logical-vectors-1"></A> 
<H3 class="section">2.4 Logical vectors</H3>
<P>As well as numerical vectors, R allows manipulation of logical quantities.  
The elements of a logical vector can have the values <CODE>TRUE</CODE>, 
<CODE>FALSE</CODE>, and <CODE>NA</CODE> (for “not available”, see below).  The 
first two are often abbreviated as <CODE>T</CODE> and <CODE>F</CODE>,
 respectively.  Note however that <CODE>T</CODE> and <CODE>F</CODE> are just
 variables which are set to <CODE>TRUE</CODE> and <CODE>FALSE</CODE> by default, 
but are not reserved words and hence can be overwritten by the user.  Hence, you 
should always use <CODE>TRUE</CODE> and <CODE>FALSE</CODE>. <A name="index-FALSE"></A> 
<A name="index-TRUE"></A> <A name="index-F"></A> <A name="index-T"></A> </P>
<P>Logical vectors are generated by <EM>conditions</EM>.  For example </P>
<DIV class="example">
<PRE class="example">&gt; temp &lt;- x &gt; 13
</PRE></DIV>
<P>sets <CODE>temp</CODE> as a vector of the same length as <CODE>x</CODE> with 
values <CODE>FALSE</CODE> corresponding to elements of <CODE>x</CODE> where the 
condition is <EM>not</EM> met and <CODE>TRUE</CODE> where it is. </P>
<P>The logical operators are <CODE>&lt;</CODE>, <CODE>&lt;=</CODE>, 
<CODE>&gt;</CODE>, <CODE>&gt;=</CODE>, <CODE>==</CODE> for exact equality and 
<CODE>!=</CODE> for inequality. <A name="index-_003c"></A> <A name="index-_003c_003d"></A> 
<A name="index-_003e"></A> <A name="index-_003e_003d"></A> <A name="index-_003d_003d"></A> 
<A name="index-_0021_003d"></A> In addition if <CODE>c1</CODE> and 
<CODE>c2</CODE> are logical expressions, then <CODE>c1&nbsp;&amp;&nbsp;c2</CODE><!-- /@w --> 
is their intersection (<EM>“and”</EM>), <CODE>c1&nbsp;|&nbsp;c2</CODE><!-- /@w -->
 is their union (<EM>“or”</EM>), and <CODE>!c1</CODE> is the negation of 
<CODE>c1</CODE>. <A name="index-_0021"></A> <A name="index-_007c"></A> <A name="index-_0026"></A> 
</P>
<P>Logical vectors may be used in ordinary arithmetic, in which case they are 
<EM>coerced</EM> into numeric vectors, <CODE>FALSE</CODE> becoming 
<CODE>0</CODE> and <CODE>TRUE</CODE> becoming <CODE>1</CODE>.  However there are 
situations where logical vectors and their coerced numeric counterparts are not
 equivalent, for example see the next subsection. </P>
<HR>
<A name="Missing-values"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Character-vectors" 
rel="next">Character vectors</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Logical-vectors" 
rel="prev">Logical vectors</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Simple-manipulations-numbers-and-vectors" 
rel="up">Simple manipulations numbers and vectors</A> &nbsp; [<A title="Table of contents" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" rel="contents">Contents</A>][<A 
title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Missing-values-1"></A> 
<H3 class="section">2.5 Missing values</H3><A name="index-Missing-values"></A> 
<P>In some cases the components of a vector may not be completely known.  When 
an element or value is “not available” or a “missing value” in the statistical 
sense, a place within a vector may be reserved for it by assigning it the 
special value <CODE>NA</CODE>. <A name="index-NA"></A> In general any operation 
on an <CODE>NA</CODE> becomes an <CODE>NA</CODE>.  The motivation for this rule 
is simply that if the specification of an operation is incomplete, the result 
cannot be known and hence is not available. </P><A name="index-is_002ena"></A> 
<P>The function <CODE>is.na(x)</CODE> gives a logical vector of the same size as 
<CODE>x</CODE> with value <CODE>TRUE</CODE> if and only if the corresponding 
element in <CODE>x</CODE> is <CODE>NA</CODE>. </P>
<DIV class="example">
<PRE class="example">&gt; z &lt;- c(1:3,NA);  ind &lt;- is.na(z)
</PRE></DIV>
<P>Notice that the logical expression <CODE>x == NA</CODE> is quite different
 from <CODE>is.na(x)</CODE> since <CODE>NA</CODE> is not really a value but a 
marker for a quantity that is not available.  Thus <CODE>x == NA</CODE> is a 
vector of the same length as <CODE>x</CODE> <EM>all</EM> of whose values are 
<CODE>NA</CODE> as the logical expression itself is incomplete and hence 
undecidable. </P>
<P>Note that there is a second kind of “missing” values which are produced by 
numerical computation, the so-called <EM>Not a Number</EM>, <CODE>NaN</CODE>, <A 
name="index-NaN"></A> values.  Examples are </P>
<DIV class="example">
<PRE class="example">&gt; 0/0
</PRE></DIV>
<P>or </P>
<DIV class="example">
<PRE class="example">&gt; Inf - Inf
</PRE></DIV>
<P>which both give <CODE>NaN</CODE> since the result cannot be defined sensibly. 
</P>
<P>In summary, <CODE>is.na(xx)</CODE> is <CODE>TRUE</CODE> <EM>both</EM> for 
<CODE>NA</CODE> and <CODE>NaN</CODE> values.  To differentiate these, 
<CODE>is.nan(xx)</CODE> is only <CODE>TRUE</CODE> for <CODE>NaN</CODE>s. <A 
name="index-is_002enan"></A> </P>
<P>Missing values are sometimes printed as <CODE>&lt;NA&gt;</CODE> when 
character vectors are printed without quotes. </P>
<HR>
<A name="Character-vectors"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Index-vectors" 
rel="next">Index vectors</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Missing-values" 
rel="prev">Missing values</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Simple-manipulations-numbers-and-vectors" 
rel="up">Simple manipulations numbers and vectors</A> &nbsp; [<A title="Table of contents" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" rel="contents">Contents</A>][<A 
title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Character-vectors-1"></A> 
<H3 class="section">2.6 Character vectors</H3><A 
name="index-Character-vectors"></A> 
<P>Character quantities and character vectors are used frequently in R, for 
example as plot labels.  Where needed they are denoted by a sequence of 
characters delimited by the double quote character, e.g., 
<CODE>"x-values"</CODE>, <CODE>"New iteration results"</CODE>. </P>
<P>Character strings are entered using either matching double (<CODE>"</CODE>) 
or single (<CODE>'</CODE>) quotes, but are printed using double quotes (or
 sometimes without quotes).  They use C-style escape sequences, using 
<CODE>\</CODE> as the escape character, so <CODE>\\</CODE> is entered and 
printed as <CODE>\\</CODE>, and inside double quotes <CODE>"</CODE> is entered 
as <CODE>\"</CODE>. Other useful escape sequences are <CODE>\n</CODE>, newline, 
<CODE>\t</CODE>, tab and <CODE>\b</CODE>, backspace—see <CODE>?Quotes</CODE> for 
a full list. </P>
<P>Character vectors may be concatenated into a vector by the <CODE>c()</CODE>
 function; examples of their use will emerge frequently. <A 
name="index-c-1"></A> </P><A name="index-paste"></A> 
<P>The <CODE>paste()</CODE> function takes an arbitrary number of arguments and
 concatenates them one by one into character strings.  Any numbers given among 
the arguments are coerced into character strings in the evident way, that is, in 
the same way they would be if they were printed.  The arguments are by default 
separated in the result by a single blank character, but this can be changed by 
the named argument, <CODE>sep=<VAR>string</VAR></CODE>, which changes it to 
<CODE><VAR>string</VAR></CODE>, possibly empty. </P>
<P>For example </P>
<DIV class="example">
<PRE class="example">&gt; labs &lt;- paste(c("X","Y"), 1:10, sep="")
</PRE></DIV>
<P>makes <CODE>labs</CODE> into the character vector </P>
<DIV class="example">
<PRE class="example">c("X1", "Y2", "X3", "Y4", "X5", "Y6", "X7", "Y8", "X9", "Y10")
</PRE></DIV>
<P>Note particularly that recycling of short lists takes place here too; thus 
<CODE>c("X", "Y")</CODE> is repeated 5 times to match the sequence 
<CODE>1:10</CODE>. <A name="DOCF9" href="http://127.0.0.1:29225/doc/manual/R-intro.html#FOOT9"><SUP>9</SUP></A> 
</P>
<HR>
<A name="Index-vectors"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Other-types-of-objects" 
rel="next">Other types of objects</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Character-vectors" 
rel="prev">Character vectors</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Simple-manipulations-numbers-and-vectors" 
rel="up">Simple manipulations numbers and vectors</A> &nbsp; [<A title="Table of contents" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" rel="contents">Contents</A>][<A 
title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Index-vectors_003b-selecting-and-modifying-subsets-of-a-data-set"></A> 
<H3 class="section">2.7 Index vectors; selecting and modifying subsets of a data 
set</H3><A name="index-Indexing-vectors"></A> 
<P>Subsets of the elements of a vector may be selected by appending to the name 
of the vector an <EM>index vector</EM> in square brackets.  More generally any 
expression that evaluates to a vector may have subsets of its elements similarly 
selected by appending an index vector in square brackets immediately after the 
expression. </P>
<P>Such index vectors can be any of four distinct types. </P>
<OL>
  <LI><STRONG>A logical vector</STRONG>.  In this case the index vector is 
  recycled to the same length as the vector from which elements are to be 
  selected. Values corresponding to <CODE>TRUE</CODE> in the index vector are 
  selected and those corresponding to <CODE>FALSE</CODE> are omitted.  For 
  example 
  <DIV class="example">
<PRE class="example">&gt; y &lt;- x[!is.na(x)]
</PRE></DIV>
  <P>creates (or re-creates) an object <CODE>y</CODE> which will contain the
   non-missing values of <CODE>x</CODE>, in the same order.  Note that if 
  <CODE>x</CODE> has missing values, <CODE>y</CODE> will be shorter than 
  <CODE>x</CODE>. Also </P>
  <DIV class="example">
<PRE class="example">&gt; (x+1)[(!is.na(x)) &amp; x&gt;0] -&gt; z
</PRE></DIV>
  <P>creates an object <CODE>z</CODE> and places in it the values of the vector 
  <CODE>x+1</CODE> for which the corresponding value in <CODE>x</CODE> was both
   non-missing and positive. </P></LI>
  <LI><STRONG>A vector of positive integral quantities</STRONG>.  In this case 
  the values in the index vector must lie in the set {1, 2, …, 
  <CODE>length(x)</CODE>}.  The corresponding elements of the vector are
   selected and concatenated, <EM>in that order</EM>, in the result.  The index 
  vector can be of any length and the result is of the same length as the index 
  vector.  For example <CODE>x[6]</CODE> is the sixth component of 
  <CODE>x</CODE> and 
  <DIV class="example">
<PRE class="example">&gt; x[1:10]
</PRE></DIV>
  <P>selects the first 10 elements of <CODE>x</CODE> (assuming 
  <CODE>length(x)</CODE> is not less than 10).  Also </P>
  <DIV class="example">
<PRE class="example">&gt; c("x","y")[rep(c(1,2,2,1), times=4)]
</PRE></DIV>
  <P>(an admittedly unlikely thing to do) produces a character vector of length 
  16 consisting of <CODE>"x", "y", "y", "x"</CODE> repeated four times. 
</P></LI>
  <LI><STRONG>A vector of negative integral quantities</STRONG>.  Such an index 
  vector specifies the values to be <EM>excluded</EM> rather than included.  
  Thus 
  <DIV class="example">
<PRE class="example">&gt; y &lt;- x[-(1:5)]
</PRE></DIV>
  <P>gives <CODE>y</CODE> all but the first five elements of <CODE>x</CODE>. 
  </P></LI>
  <LI><STRONG>A vector of character strings</STRONG>.  This possibility only 
  applies where an object has a <CODE>names</CODE> attribute to identify its 
  components. In this case a sub-vector of the names vector may be used in the 
  same way as the positive integral labels in item 2 further above. 
  <DIV class="example">
<PRE class="example">&gt; fruit &lt;- c(5, 10, 1, 20)
&gt; names(fruit) &lt;- c("orange", "banana", "apple", "peach")
&gt; lunch &lt;- fruit[c("apple","orange")]
</PRE></DIV>
  <P>The advantage is that alphanumeric <EM>names</EM> are often easier to
   remember than <EM>numeric indices</EM>.  This option is particularly useful 
  in connection with data frames, as we shall see later. </P></LI></OL>
<P>An indexed expression can also appear on the receiving end of an assignment, 
in which case the assignment operation is performed <EM>only on those elements 
of the vector</EM>.  The expression must be of the form 
<CODE>vector[<VAR>index_vector</VAR>]</CODE> as having an arbitrary expression 
in place of the vector name does not make much sense here. </P>
<P>For example </P>
<DIV class="example">
<PRE class="example">&gt; x[is.na(x)] &lt;- 0
</PRE></DIV>
<P>replaces any missing values in <CODE>x</CODE> by zeros and </P>
<DIV class="example">
<PRE class="example">&gt; y[y &lt; 0] &lt;- -y[y &lt; 0]
</PRE></DIV>
<P>has the same effect as </P>
<DIV class="example">
<PRE class="example">&gt; y &lt;- abs(y)
</PRE></DIV>
<HR>
<A name="Other-types-of-objects"></A> 
<DIV class="header">
<P>Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Index-vectors" 
rel="prev">Index vectors</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Simple-manipulations-numbers-and-vectors" 
rel="up">Simple manipulations numbers and vectors</A> &nbsp; [<A title="Table of contents" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" rel="contents">Contents</A>][<A 
title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Other-types-of-objects-1"></A> 
<H3 class="section">2.8 Other types of objects</H3>
<P>Vectors are the most important type of object in R, but there are several 
others which we will meet more formally in later sections. </P>
<UL>
  <LI><EM>matrices</EM> or more generally <EM>arrays</EM> are multi-dimensional
   generalizations of vectors.  In fact, they <EM>are</EM> vectors that can be 
  indexed by two or more indices and will be printed in special ways. See <A 
  href="http://127.0.0.1:29225/doc/manual/R-intro.html#Arrays-and-matrices">Arrays 
  and matrices</A>. </LI>
  <LI><EM>factors</EM> provide compact ways to handle categorical data. See <A 
  href="http://127.0.0.1:29225/doc/manual/R-intro.html#Factors">Factors</A>. 
  </LI>
  <LI><EM>lists</EM> are a general form of vector in which the various elements
   need not be of the same type, and are often themselves vectors or lists.
   Lists provide a convenient way to return the results of a statistical
   computation.  See <A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Lists">Lists</A>. 
  </LI>
  <LI><EM>data frames</EM> are matrix-like structures, in which the columns can
   be of different types.  Think of data frames as ‘data matrices’ with one row 
  per observational unit but with (possibly) both numerical and categorical 
  variables.  Many experiments are best described by data frames: the treatments 
  are categorical but the response is numeric. See <A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Data-frames">Data 
  frames</A>. </LI>
  <LI><EM>functions</EM> are themselves objects in R which can be stored in the 
  project’s workspace.  This provides a simple and convenient way to extend R.  
  See <A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Writing-your-own-functions">Writing 
  your own functions</A>. </LI></UL>
<HR>
<A name="Objects"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Factors" 
rel="next">Factors</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Simple-manipulations-numbers-and-vectors" 
rel="prev">Simple manipulations numbers and vectors</A>, Up: <A accesskey="u" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#Top" rel="up">Top</A> 
&nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Objects_002c-their-modes-and-attributes"></A> 
<H2 class="chapter">3 Objects, their modes and attributes</H2><A name="index-Objects"></A> 
<A name="index-Attributes"></A> 
<TABLE class="menu" border="0" cellspacing="0" summary="">
  <TBODY>
  <TR>
    <TD align="left" valign="top">• <A accesskey="1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-intrinsic-attributes-mode-and-length">The 
      intrinsic attributes mode and length</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="2" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Changing-the-length-of-an-object">Changing 
      the length of an object</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="3" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Getting-and-setting-attributes">Getting 
      and setting attributes</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="4" href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-class-of-an-object">The 
      class of an object</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR></TBODY></TABLE>
<HR>
<A name="The-intrinsic-attributes-mode-and-length"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Changing-the-length-of-an-object" 
rel="next">Changing the length of an object</A>, Previous: <A accesskey="p" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#Objects" 
rel="prev">Objects</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Objects" 
rel="up">Objects</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Intrinsic-attributes_003a-mode-and-length"></A> 
<H3 class="section">3.1 Intrinsic attributes: mode and length</H3>
<P>The entities R operates on are technically known as <EM>objects</EM>.
 Examples are vectors of numeric (real) or complex values, vectors of logical 
values and vectors of character strings.  These are known as “atomic” structures 
since their components are all of the same type, or <EM>mode</EM>, namely 
<EM>numeric</EM><A name="DOCF10" href="http://127.0.0.1:29225/doc/manual/R-intro.html#FOOT10"><SUP>10</SUP></A>, 
<EM>complex</EM>, <EM>logical</EM>, <EM>character</EM> and <EM>raw</EM>. </P>
<P>Vectors must have their values <EM>all of the same mode</EM>.  Thus any given 
vector must be unambiguously either <EM>logical</EM>, <EM>numeric</EM>, 
<EM>complex</EM>, <EM>character</EM> or <EM>raw</EM>.  (The only apparent 
exception to this rule is the special “value” listed as <CODE>NA</CODE> for 
quantities not available, but in fact there are several types of 
<CODE>NA</CODE>).  Note that a vector can be empty and still have a mode.  For 
example the empty character string vector is listed as <CODE>character(0)</CODE> 
and the empty numeric vector as <CODE>numeric(0)</CODE>. </P>
<P>R also operates on objects called <EM>lists</EM>, which are of mode 
<EM>list</EM>.  These are ordered sequences of objects which individually can be 
of any mode.  <EM>lists</EM> are known as “recursive” rather than atomic 
structures since their components can themselves be lists in their own right. 
</P>
<P>The other recursive structures are those of mode <EM>function</EM> and 
<EM>expression</EM>.  Functions are the objects that form part of the R system 
along with similar user written functions, which we discuss in some detail 
later.  Expressions as objects form an advanced part of R which will not be 
discussed in this guide, except indirectly when we discuss <EM>formulae</EM> 
used with modeling in R. </P>
<P>By the <EM>mode</EM> of an object we mean the basic type of its fundamental 
constituents.  This is a special case of a “property” of an object.  Another 
property of every object is its <EM>length</EM>.  The functions 
<CODE>mode(<VAR>object</VAR>)</CODE> and <CODE>length(<VAR>object</VAR>)</CODE> 
can be used to find out the mode and length of any defined structure <A name="DOCF11" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#FOOT11"><SUP>11</SUP></A>. 
</P>
<P>Further properties of an object are usually provided by 
<CODE>attributes(<VAR>object</VAR>)</CODE>, see <A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Getting-and-setting-attributes">Getting 
and setting attributes</A>. Because of this, <EM>mode</EM> and <EM>length</EM> 
are also called “intrinsic attributes” of an object. <A name="index-mode"></A> 
<A name="index-length-1"></A> </P>
<P>For example, if <CODE>z</CODE> is a complex vector of length 100, then in an
 expression <CODE>mode(z)</CODE> is the character string <CODE>"complex"</CODE> 
and <CODE>length(z)</CODE> is <CODE>100</CODE>. </P>
<P>R caters for changes of mode almost anywhere it could be considered sensible 
to do so, (and a few where it might not be).  For example with </P>
<DIV class="example">
<PRE class="example">&gt; z &lt;- 0:9
</PRE></DIV>
<P>we could put </P>
<DIV class="example">
<PRE class="example">&gt; digits &lt;- as.character(z)
</PRE></DIV>
<P>after which <CODE>digits</CODE> is the character vector <CODE>c("0", "1", 
"2", …, "9")</CODE>.  A further <EM>coercion</EM>, or change of mode,
 reconstructs the numerical vector again: </P>
<DIV class="example">
<PRE class="example">&gt; d &lt;- as.integer(digits)
</PRE></DIV>
<P>Now <CODE>d</CODE> and <CODE>z</CODE> are the same.<A name="DOCF12" href="http://127.0.0.1:29225/doc/manual/R-intro.html#FOOT12"><SUP>12</SUP></A> 
 There is a large collection of functions of the form 
<CODE>as.<VAR>something</VAR>()</CODE> for either coercion from one mode to 
another, or for investing an object with some other attribute it may not already 
possess.  The reader should consult the different help files to become familiar 
with them. </P>
<HR>
<A name="Changing-the-length-of-an-object"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Getting-and-setting-attributes" 
rel="next">Getting and setting attributes</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-intrinsic-attributes-mode-and-length" 
rel="prev">The intrinsic attributes mode and length</A>, Up: <A accesskey="u" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#Objects" 
rel="up">Objects</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A 
name="Changing-the-length-of-an-object-1"></A> 
<H3 class="section">3.2 Changing the length of an object</H3>
<P>An “empty” object may still have a mode.  For example </P>
<DIV class="example">
<PRE class="example">&gt; e &lt;- numeric()
</PRE></DIV>
<P>makes <CODE>e</CODE> an empty vector structure of mode numeric.  Similarly 
<CODE>character()</CODE> is a empty character vector, and so on.  Once an object 
of any size has been created, new components may be added to it simply by giving 
it an index value outside its previous range.  Thus </P>
<DIV class="example">
<PRE class="example">&gt; e[3] &lt;- 17
</PRE></DIV>
<P>now makes <CODE>e</CODE> a vector of length 3, (the first two components of
 which are at this point both <CODE>NA</CODE>).  This applies to any structure
 at all, provided the mode of the additional component(s) agrees with the mode 
of the object in the first place. </P>
<P>This automatic adjustment of lengths of an object is used often, for example 
in the <CODE>scan()</CODE> function for input.  (see <A href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-scan_0028_0029-function">The 
scan() function</A>.) </P>
<P>Conversely to truncate the size of an object requires only an assignment to 
do so.  Hence if <CODE>alpha</CODE> is an object of length 10, then </P>
<DIV class="example">
<PRE class="example">&gt; alpha &lt;- alpha[2 * 1:5]
</PRE></DIV>
<P>makes it an object of length 5 consisting of just the former components with 
even index.  (The old indices are not retained, of course.)  We can then retain 
just the first three values by </P>
<DIV class="example">
<PRE class="example">&gt; length(alpha) &lt;- 3
</PRE></DIV>
<P>and vectors can be extended (by missing values) in the same way. </P>
<HR>
<A name="Getting-and-setting-attributes"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-class-of-an-object" 
rel="next">The class of an object</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Changing-the-length-of-an-object" 
rel="prev">Changing the length of an object</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Objects" 
rel="up">Objects</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Getting-and-setting-attributes-1"></A> 
<H3 class="section">3.3 Getting and setting attributes</H3><A 
name="index-attr"></A> <A name="index-attributes"></A> 
<P>The function <CODE>attributes(<VAR>object</VAR>)</CODE> <A name="index-attributes-1"></A>
 returns a list of all the non-intrinsic attributes currently defined for that 
object.  The function <CODE>attr(<VAR>object</VAR>, <VAR>name</VAR>)</CODE> <A 
name="index-attr-1"></A> can be used to select a specific attribute.  These 
functions are rarely used, except in rather special circumstances when some new 
attribute is being created for some particular purpose, for example to associate 
a creation date or an operator with an R object.  The concept, however, is very 
important. </P>
<P>Some care should be exercised when assigning or deleting attributes since 
they are an integral part of the object system used in R. </P>
<P>When it is used on the left hand side of an assignment it can be used either 
to associate a new attribute with <CODE><VAR>object</VAR></CODE> or to change an 
existing one.  For example </P>
<DIV class="example">
<PRE class="example">&gt; attr(z, "dim") &lt;- c(10,10)
</PRE></DIV>
<P>allows R to treat <CODE>z</CODE> as if it were a 10-by-10 matrix. </P>
<HR>
<A name="The-class-of-an-object"></A> 
<DIV class="header">
<P>Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Getting-and-setting-attributes" 
rel="prev">Getting and setting attributes</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Objects" 
rel="up">Objects</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="The-class-of-an-object-1"></A> 
<H3 class="section">3.4 The class of an object</H3><A name="index-Classes"></A> 
<P>All objects in R have a <EM>class</EM>, reported by the function 
<CODE>class</CODE>.  For simple vectors this is just the mode, for example 
<CODE>"numeric"</CODE>, <CODE>"logical"</CODE>, <CODE>"character"</CODE> or 
<CODE>"list"</CODE>, but <CODE>"matrix"</CODE>, <CODE>"array"</CODE>, 
<CODE>"factor"</CODE> and <CODE>"data.frame"</CODE> are other possible values. 
</P>
<P>A special attribute known as the <EM>class</EM> of the object is used to
 allow for an object-oriented style<A name="DOCF13" href="http://127.0.0.1:29225/doc/manual/R-intro.html#FOOT13"><SUP>13</SUP></A> 
of programming in R.  For example if an object has class 
<CODE>"data.frame"</CODE>, it will be printed in a certain way, the 
<CODE>plot()</CODE> function will display it graphically in a certain way, and
 other so-called generic functions such as <CODE>summary()</CODE> will react to
 it as an argument in a way sensitive to its class. </P>
<P>To remove temporarily the effects of class, use the function 
<CODE>unclass()</CODE>. <A name="index-unclass"></A> For example if 
<CODE>winter</CODE> has the class <CODE>"data.frame"</CODE> then </P>
<DIV class="example">
<PRE class="example">&gt; winter
</PRE></DIV>
<P>will print it in data frame form, which is rather like a matrix, whereas </P>
<DIV class="example">
<PRE class="example">&gt; unclass(winter)
</PRE></DIV>
<P>will print it as an ordinary list.  Only in rather special situations do you 
need to use this facility, but one is when you are learning to come to terms 
with the idea of class and generic functions. </P>
<P>Generic functions and classes will be discussed further in <A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Object-orientation">Object 
orientation</A>, but only briefly. </P>
<HR>
<A name="Factors"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Arrays-and-matrices" 
rel="next">Arrays and matrices</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Objects" 
rel="prev">Objects</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Top" 
rel="up">Top</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Ordered-and-unordered-factors"></A> 
<H2 class="chapter">4 Ordered and unordered factors</H2><A 
name="index-Factors"></A> <A name="index-Ordered-factors"></A> 
<P>A <EM>factor</EM> is a vector object used to specify a discrete
 classification (grouping) of the components of other vectors of the same 
length. R provides both <EM>ordered</EM> and <EM>unordered</EM> factors. While 
the “real” application of factors is with model formulae (see <A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Contrasts">Contrasts</A>), 
we here look at a specific example. </P><A name="A-specific-example"></A> 
<H3 class="section">4.1 A specific example</H3>
<P>Suppose, for example, we have a sample of 30 tax accountants from all the 
states and territories of Australia<A name="DOCF14" href="http://127.0.0.1:29225/doc/manual/R-intro.html#FOOT14"><SUP>14</SUP></A>
 and their individual state of origin is specified by a character vector of 
state mnemonics as </P>
<DIV class="example">
<PRE class="example">&gt; state &lt;- c("tas", "sa",  "qld", "nsw", "nsw", "nt",  "wa",  "wa",
             "qld", "vic", "nsw", "vic", "qld", "qld", "sa",  "tas",
             "sa",  "nt",  "wa",  "vic", "qld", "nsw", "nsw", "wa",
             "sa",  "act", "nsw", "vic", "vic", "act")
</PRE></DIV>
<P>Notice that in the case of a character vector, “sorted” means sorted in 
alphabetical order. </P>
<P>A <EM>factor</EM> is similarly created using the <CODE>factor()</CODE> 
function: <A name="index-factor"></A> </P>
<DIV class="example">
<PRE class="example">&gt; statef &lt;- factor(state)
</PRE></DIV>
<P>The <CODE>print()</CODE> function handles factors slightly differently from
 other objects: </P>
<DIV class="example">
<PRE class="example">&gt; statef
 [1] tas sa  qld nsw nsw nt  wa  wa  qld vic nsw vic qld qld sa
[16] tas sa  nt  wa  vic qld nsw nsw wa  sa  act nsw vic vic act
Levels:  act nsw nt qld sa tas vic wa
</PRE></DIV>
<P>To find out the levels of a factor the function <CODE>levels()</CODE> can be
 used. <A name="index-levels"></A> </P>
<DIV class="example">
<PRE class="example">&gt; levels(statef)
[1] "act" "nsw" "nt"  "qld" "sa"  "tas" "vic" "wa"
</PRE></DIV>
<TABLE class="menu" border="0" cellspacing="0" summary="">
  <TBODY>
  <TR>
    <TD align="left" valign="top">• <A accesskey="1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-function-tapply_0028_0029-and-ragged-arrays">The 
      function tapply() and ragged arrays</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="2" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Ordered-factors">Ordered 
      factors</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR></TBODY></TABLE>
<HR>
<A name="The-function-tapply_0028_0029-and-ragged-arrays"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Ordered-factors" 
rel="next">Ordered factors</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Factors" 
rel="prev">Factors</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Factors" 
rel="up">Factors</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="The-function-tapply_0028_0029-and-ragged-arrays-1"></A> 
<H3 class="section">4.2 The function <CODE>tapply()</CODE> and ragged 
arrays</H3><A name="index-tapply"></A> 
<P>To continue the previous example, suppose we have the incomes of the same tax 
accountants in another vector (in suitably large units of money) </P>
<DIV class="example">
<PRE class="example">&gt; incomes &lt;- c(60, 49, 40, 61, 64, 60, 59, 54, 62, 69, 70, 42, 56,
               61, 61, 61, 58, 51, 48, 65, 49, 49, 41, 48, 52, 46,
               59, 46, 58, 43)
</PRE></DIV>
<P>To calculate the sample mean income for each state we can now use the special 
function <CODE>tapply()</CODE>: </P>
<DIV class="example">
<PRE class="example">&gt; incmeans &lt;- tapply(incomes, statef, mean)
</PRE></DIV>
<P>giving a means vector with the components labelled by the levels </P>
<DIV class="example">
<PRE class="example">   act    nsw     nt    qld     sa    tas    vic     wa
44.500 57.333 55.500 53.600 55.000 60.500 56.000 52.250
</PRE></DIV>
<P>The function <CODE>tapply()</CODE> is used to apply a function, here 
<CODE>mean()</CODE>, to each group of components of the first argument, here 
<CODE>incomes</CODE>, defined by the levels of the second component, here 
<CODE>statef</CODE><A name="DOCF15" href="http://127.0.0.1:29225/doc/manual/R-intro.html#FOOT15"><SUP>15</SUP></A>, 
as if they were separate vector structures.  The result is a structure of the 
same length as the levels attribute of the factor containing the results.  The 
reader should consult the help document for more details. </P>
<P>Suppose further we needed to calculate the standard errors of the state
 income means.  To do this we need to write an R function to calculate the 
standard error for any given vector.  Since there is an builtin function 
<CODE>var()</CODE> to calculate the sample variance, such a function is a very 
simple one liner, specified by the assignment: </P>
<DIV class="example">
<PRE class="example">&gt; stderr &lt;- function(x) sqrt(var(x)/length(x))
</PRE></DIV>
<P>(Writing functions will be considered later in <A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Writing-your-own-functions">Writing 
your own functions</A>, and in this case was unnecessary as R also has a builtin
 function <CODE>sd()</CODE>.) <A name="index-sd"></A> <A name="index-var-1"></A>
 After this assignment, the standard errors are calculated by </P>
<DIV class="example">
<PRE class="example">&gt; incster &lt;- tapply(incomes, statef, stderr)
</PRE></DIV>
<P>and the values calculated are then </P>
<DIV class="example">
<PRE class="example">&gt; incster
act    nsw  nt    qld     sa tas   vic     wa
1.5 4.3102 4.5 4.1061 2.7386 0.5 5.244 2.6575
</PRE></DIV>
<P>As an exercise you may care to find the usual 95% confidence limits for the 
state mean incomes.  To do this you could use <CODE>tapply()</CODE> once more 
with the <CODE>length()</CODE> function to find the sample sizes, and the 
<CODE>qt()</CODE> function to find the percentage points of the appropriate 
<EM>t</EM>-distributions.  (You could also investigate R’s facilities for 
<EM>t</EM>-tests.) </P>
<P>The function <CODE>tapply()</CODE> can also be used to handle more 
complicated indexing of a vector by multiple categories.  For example, we might 
wish to split the tax accountants by both state and sex.  However in this simple 
instance (just one factor) what happens can be thought of as follows.  The 
values in the vector are collected into groups corresponding to the distinct 
entries in the factor.  The function is then applied to each of these groups 
individually.  The value is a vector of function results, labelled by the 
<CODE>levels</CODE> attribute of the factor. </P>
<P>The combination of a vector and a labelling factor is an example of what is 
sometimes called a <EM>ragged array</EM>, since the subclass sizes are possibly 
irregular.  When the subclass sizes are all the same the indexing may be done 
implicitly and much more efficiently, as we see in the next section. </P>
<HR>
<A name="Ordered-factors"></A> 
<DIV class="header">
<P>Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-function-tapply_0028_0029-and-ragged-arrays" 
rel="prev">The function tapply() and ragged arrays</A>, Up: <A accesskey="u" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#Factors" 
rel="up">Factors</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Ordered-factors-1"></A> 
<H3 class="section">4.3 Ordered factors</H3><A name="index-ordered"></A> 
<P>The levels of factors are stored in alphabetical order, or in the order they 
were specified to <CODE>factor</CODE> if they were specified explicitly. </P>
<P>Sometimes the levels will have a natural ordering that we want to record and 
want our statistical analysis to make use of.  The <CODE>ordered()</CODE> <A 
name="index-ordered-1"></A> function creates such ordered factors but is 
otherwise identical to <CODE>factor</CODE>.  For most purposes the only 
difference between ordered and unordered factors is that the former are printed 
showing the ordering of the levels, but the contrasts generated for them in 
fitting linear models are different. </P>
<HR>
<A name="Arrays-and-matrices"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Lists-and-data-frames" 
rel="next">Lists and data frames</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Factors" 
rel="prev">Factors</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Top" 
rel="up">Top</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Arrays-and-matrices-1"></A> 
<H2 class="chapter">5 Arrays and matrices</H2>
<TABLE class="menu" border="0" cellspacing="0" summary="">
  <TBODY>
  <TR>
    <TD align="left" valign="top">• <A accesskey="1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Arrays">Arrays</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="2" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Array-indexing">Array 
      indexing</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="3" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Index-matrices">Index 
      matrices</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="4" href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-array_0028_0029-function">The 
      array() function</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="5" href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-outer-product-of-two-arrays">The 
      outer product of two arrays</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="6" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Generalized-transpose-of-an-array">Generalized 
      transpose of an array</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="7" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Matrix-facilities">Matrix 
      facilities</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="8" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Forming-partitioned-matrices">Forming 
      partitioned matrices</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="9" href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-concatenation-function-c_0028_0029-with-arrays">The 
      concatenation function c() with arrays</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Frequency-tables-from-factors">Frequency 
      tables from factors</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR></TBODY></TABLE>
<HR>
<A name="Arrays"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Array-indexing" 
rel="next">Array indexing</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Arrays-and-matrices" 
rel="prev">Arrays and matrices</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Arrays-and-matrices" 
rel="up">Arrays and matrices</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Arrays-1"></A> 
<H3 class="section">5.1 Arrays</H3><A name="index-Arrays"></A> <A name="index-Matrices"></A> 
<P>An array can be considered as a multiply subscripted collection of data
 entries, for example numeric.  R allows simple facilities for creating and 
handling arrays, and in particular the special case of matrices. </P>
<P>A dimension vector is a vector of non-negative integers.  If its length is 
<EM>k</EM> then the array is <EM>k</EM>-dimensional, e.g.&nbsp;a matrix is a 
<EM>2</EM>-dimensional array.  The dimensions are indexed from one up to the 
values given in the dimension vector. </P>
<P>A vector can be used by R as an array only if it has a dimension vector as 
its <EM>dim</EM> attribute.  Suppose, for example, <CODE>z</CODE> is a vector of 
1500 elements.  The assignment </P>
<DIV class="example">
<PRE class="example">&gt; dim(z) &lt;- c(3,5,100)
</PRE></DIV><A name="index-dim"></A> 
<P>gives it the <EM>dim</EM> attribute that allows it to be treated as a 
<EM>3</EM> by <EM>5</EM> by <EM>100</EM> array. </P>
<P>Other functions such as <CODE>matrix()</CODE> and <CODE>array()</CODE> are 
available for simpler and more natural looking assignments, as we shall see in 
<A href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-array_0028_0029-function">The 
array() function</A>. </P>
<P>The values in the data vector give the values in the array in the same order 
as they would occur in FORTRAN, that is “column major order,” with the first 
subscript moving fastest and the last subscript slowest. </P>
<P>For example if the dimension vector for an array, say <CODE>a</CODE>, is 
<CODE>c(3,4,2)</CODE> then there are 3 * 4 * 2 = 24 entries in <CODE>a</CODE> 
and the data vector holds them in the order <CODE>a[1,1,1], a[2,1,1], …, 
a[2,4,2], a[3,4,2]</CODE>. </P>
<P>Arrays can be one-dimensional: such arrays are usually treated in the same 
way as vectors (including when printing), but the exceptions can cause 
confusion. </P>
<HR>
<A name="Array-indexing"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Index-matrices" 
rel="next">Index matrices</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Arrays" 
rel="prev">Arrays</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Arrays-and-matrices" 
rel="up">Arrays and matrices</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Array-indexing_002e-Subsections-of-an-array"></A> 
<H3 class="section">5.2 Array indexing.  Subsections of an array</H3><A name="index-Indexing-of-and-by-arrays"></A> 
<P>Individual elements of an array may be referenced by giving the name of the 
array followed by the subscripts in square brackets, separated by commas. </P>
<P>More generally, subsections of an array may be specified by giving a sequence 
of <EM>index vectors</EM> in place of subscripts; however <EM>if any index 
position is given an empty index vector, then the full range of that subscript 
is taken</EM>. </P>
<P>Continuing the previous example, <CODE>a[2,,]</CODE> is a 4 * 2 array with 
dimension vector <CODE>c(4,2)</CODE> and data vector containing the values </P>
<DIV class="example">
<PRE class="example">c(a[2,1,1], a[2,2,1], a[2,3,1], a[2,4,1],
  a[2,1,2], a[2,2,2], a[2,3,2], a[2,4,2])
</PRE></DIV>
<P>in that order.  <CODE>a[,,]</CODE> stands for the entire array, which is the
 same as omitting the subscripts entirely and using <CODE>a</CODE> alone. </P>
<P>For any array, say <CODE>Z</CODE>, the dimension vector may be referenced
 explicitly as <CODE>dim(Z)</CODE> (on either side of an assignment). </P>
<P>Also, if an array name is given with just <EM>one subscript or index
 vector</EM>, then the corresponding values of the data vector only are used; in 
this case the dimension vector is ignored.  This is not the case, however, if 
the single index is not a vector but itself an array, as we next discuss. </P>
<TABLE class="menu" border="0" cellspacing="0" summary="">
  <TBODY>
  <TR>
    <TD align="left" valign="top">• <A accesskey="1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Index-matrices">Index 
      matrices</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="2" href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-array_0028_0029-function">The 
      array() function</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR></TBODY></TABLE>
<HR>
<A name="Index-matrices"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-array_0028_0029-function" 
rel="next">The array() function</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Array-indexing" 
rel="prev">Array indexing</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Arrays-and-matrices" 
rel="up">Arrays and matrices</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Index-matrices-1"></A> 
<H3 class="section">5.3 Index matrices</H3>
<P>As well as an index vector in any subscript position, a matrix may be used 
with a single <EM>index matrix</EM> in order either to assign a vector of 
quantities to an irregular collection of elements in the array, or to extract an 
irregular collection as a vector. </P>
<P>A matrix example makes the process clear.  In the case of a doubly indexed 
array, an index matrix may be given consisting of two columns and as many rows 
as desired.  The entries in the index matrix are the row and column indices for 
the doubly indexed array.  Suppose for example we have a <EM>4</EM> by 
<EM>5</EM> array <CODE>X</CODE> and we wish to do the following: </P>
<UL>
  <LI> Extract elements <CODE>X[1,3]</CODE>, <CODE>X[2,2]</CODE> and 
  <CODE>X[3,1]</CODE> as a vector structure, and </LI>
  <LI> Replace these entries in the array <CODE>X</CODE> by zeroes. </LI></UL>
<P>In this case we need a <EM>3</EM> by <EM>2</EM> subscript array, as in the
 following example. </P>
<DIV class="example">
<PRE class="example">&gt; x &lt;- array(1:20, dim=c(4,5))   # <SPAN class="roman">Generate a 4 by 5 array.</SPAN>
&gt; x
     [,1] [,2] [,3] [,4] [,5]
[1,]    1    5    9   13   17
[2,]    2    6   10   14   18
[3,]    3    7   11   15   19
[4,]    4    8   12   16   20
&gt; i &lt;- array(c(1:3,3:1), dim=c(3,2))
&gt; i                             # <SPAN class="roman"><CODE>i</CODE> is a 3 by 2 index array.</SPAN>
     [,1] [,2]
[1,]    1    3
[2,]    2    2
[3,]    3    1
&gt; x[i]                          # <SPAN class="roman">Extract those elements</SPAN>
[1] 9 6 3
&gt; x[i] &lt;- 0                     # <SPAN class="roman">Replace those elements by zeros.</SPAN>
&gt; x
     [,1] [,2] [,3] [,4] [,5]
[1,]    1    5    0   13   17
[2,]    2    0   10   14   18
[3,]    0    7   11   15   19
[4,]    4    8   12   16   20
&gt;
</PRE></DIV>
<P>Negative indices are not allowed in index matrices.  <CODE>NA</CODE> and zero
 values are allowed: rows in the index matrix containing a zero are ignored, and 
rows containing an <CODE>NA</CODE> produce an <CODE>NA</CODE> in the result. 
</P>
<P>As a less trivial example, suppose we wish to generate an (unreduced) design 
matrix for a block design defined by factors <CODE>blocks</CODE> (<CODE>b</CODE> 
levels) and <CODE>varieties</CODE> (<CODE>v</CODE> levels).  Further suppose 
there are <CODE>n</CODE> plots in the experiment.  We could proceed as follows: 
</P>
<DIV class="example">
<PRE class="example">&gt; Xb &lt;- matrix(0, n, b)
&gt; Xv &lt;- matrix(0, n, v)
&gt; ib &lt;- cbind(1:n, blocks)
&gt; iv &lt;- cbind(1:n, varieties)
&gt; Xb[ib] &lt;- 1
&gt; Xv[iv] &lt;- 1
&gt; X &lt;- cbind(Xb, Xv)
</PRE></DIV>
<P>To construct the incidence matrix, <CODE>N</CODE> say, we could use </P>
<DIV class="example">
<PRE class="example">&gt; N &lt;- crossprod(Xb, Xv)
</PRE></DIV><A name="index-crossprod"></A> 
<P>However a simpler direct way of producing this matrix is to use 
<CODE>table()</CODE>: <A name="index-table"></A> </P>
<DIV class="example">
<PRE class="example">&gt; N &lt;- table(blocks, varieties)
</PRE></DIV>
<P>Index matrices must be numerical: any other form of matrix (e.g.&nbsp;a
 logical or character matrix) supplied as a matrix is treated as an indexing 
vector. </P>
<HR>
<A name="The-array_0028_0029-function"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-outer-product-of-two-arrays" 
rel="next">The outer product of two arrays</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Index-matrices" 
rel="prev">Index matrices</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Arrays-and-matrices" 
rel="up">Arrays and matrices</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="The-array_0028_0029-function-1"></A> 
<H3 class="section">5.4 The <CODE>array()</CODE> function</H3><A name="index-array"></A> 
<P>As well as giving a vector structure a <CODE>dim</CODE> attribute, arrays can
 be constructed from vectors by the <CODE>array</CODE> function, which has the
 form </P>
<DIV class="example">
<PRE class="example">&gt; Z &lt;- array(<VAR>data_vector</VAR>, <VAR>dim_vector</VAR>)
</PRE></DIV>
<P>For example, if the vector <CODE>h</CODE> contains 24 or fewer, numbers then
 the command </P>
<DIV class="example">
<PRE class="example">&gt; Z &lt;- array(h, dim=c(3,4,2))
</PRE></DIV>
<P>would use <CODE>h</CODE> to set up <EM>3</EM> by <EM>4</EM> by <EM>2</EM> 
array in <CODE>Z</CODE>.  If the size of <CODE>h</CODE> is exactly 24 the result 
is the same as </P>
<DIV class="example">
<PRE class="example">&gt; Z &lt;- h ; dim(Z) &lt;- c(3,4,2)
</PRE></DIV>
<P>However if <CODE>h</CODE> is shorter than 24, its values are recycled from 
the beginning again to make it up to size 24 (see <A href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-recycling-rule">The 
recycling rule</A>) but <CODE>dim(h) &lt;- c(3,4,2)</CODE> would signal an error 
about mismatching length. As an extreme but common example </P>
<DIV class="example">
<PRE class="example">&gt; Z &lt;- array(0, c(3,4,2))
</PRE></DIV>
<P>makes <CODE>Z</CODE> an array of all zeros. </P>
<P>At this point <CODE>dim(Z)</CODE> stands for the dimension vector 
<CODE>c(3,4,2)</CODE>, and <CODE>Z[1:24]</CODE> stands for the data vector as it 
was in <CODE>h</CODE>, and <CODE>Z[]</CODE> with an empty subscript or 
<CODE>Z</CODE> with no subscript stands for the entire array as an array. </P>
<P>Arrays may be used in arithmetic expressions and the result is an array
 formed by element-by-element operations on the data vector.  The 
<CODE>dim</CODE> attributes of operands generally need to be the same, and this 
becomes the dimension vector of the result.  So if <CODE>A</CODE>, 
<CODE>B</CODE> and <CODE>C</CODE> are all similar arrays, then </P>
<DIV class="example">
<PRE class="example">&gt; D &lt;- 2*A*B + C + 1
</PRE></DIV>
<P>makes <CODE>D</CODE> a similar array with its data vector being the result of
 the given element-by-element operations.  However the precise rule concerning 
mixed array and vector calculations has to be considered a little more 
carefully. </P>
<TABLE class="menu" border="0" cellspacing="0" summary="">
  <TBODY>
  <TR>
    <TD align="left" valign="top">• <A accesskey="1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-recycling-rule">The 
      recycling rule</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR></TBODY></TABLE>
<HR>
<A name="The-recycling-rule"></A> 
<DIV class="header">
<P>Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-array_0028_0029-function" 
rel="prev">The array() function</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-array_0028_0029-function" 
rel="up">The array() function</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Mixed-vector-and-array-arithmetic_002e-The-recycling-rule"></A> 
<H4 class="subsection">5.4.1 Mixed vector and array arithmetic.  The recycling 
rule</H4><A name="index-Recycling-rule-1"></A> 
<P>The precise rule affecting element by element mixed calculations with vectors 
and arrays is somewhat quirky and hard to find in the references.  From 
experience we have found the following to be a reliable guide. </P>
<UL>
  <LI> The expression is scanned from left to right. </LI>
  <LI> Any short vector operands are extended by recycling their values until
   they match the size of any other operands. </LI>
  <LI> As long as short vectors and arrays <EM>only</EM> are encountered, the
   arrays must all have the same <CODE>dim</CODE> attribute or an error results. 
  </LI>
  <LI> Any vector operand longer than a matrix or array operand generates an 
  error. </LI>
  <LI> If array structures are present and no error or coercion to vector has
   been precipitated, the result is an array structure with the common 
  <CODE>dim</CODE> attribute of its array operands. </LI></UL>
<HR>
<A name="The-outer-product-of-two-arrays"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Generalized-transpose-of-an-array" 
rel="next">Generalized transpose of an array</A>, Previous: <A accesskey="p" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-array_0028_0029-function" 
rel="prev">The array() function</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Arrays-and-matrices" 
rel="up">Arrays and matrices</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="The-outer-product-of-two-arrays-1"></A> 
<H3 class="section">5.5 The outer product of two arrays</H3><A name="index-Outer-products-of-arrays"></A> 
<P>An important operation on arrays is the <EM>outer product</EM>.  If 
<CODE>a</CODE> and <CODE>b</CODE> are two numeric arrays, their outer product is 
an array whose dimension vector is obtained by concatenating their two dimension 
vectors (order is important), and whose data vector is got by forming all 
possible products of elements of the data vector of <CODE>a</CODE> with those of 
<CODE>b</CODE>.  The outer product is formed by the special operator 
<CODE>%o%</CODE>: <A name="index-_0025o_0025"></A> </P>
<DIV class="example">
<PRE class="example">&gt; ab &lt;- a %o% b
</PRE></DIV>
<P>An alternative is </P>
<DIV class="example">
<PRE class="example">&gt; ab &lt;- outer(a, b, "*")
</PRE></DIV><A name="index-outer"></A> 
<P>The multiplication function can be replaced by an arbitrary function of two 
variables.  For example if we wished to evaluate the function f(x; y) = 
cos(y)/(1 + x^2) over a regular grid of values with <EM>x</EM>- and 
<EM>y</EM>-coordinates defined by the R vectors <CODE>x</CODE> and 
<CODE>y</CODE> respectively, we could proceed as follows: </P>
<DIV class="example">
<PRE class="example">&gt; f &lt;- function(x, y) cos(y)/(1 + x^2)
&gt; z &lt;- outer(x, y, f)
</PRE></DIV>
<P>In particular the outer product of two ordinary vectors is a doubly
 subscripted array (that is a matrix, of rank at most 1).  Notice that the outer 
product operator is of course non-commutative.  Defining your own R functions 
will be considered further in <A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Writing-your-own-functions">Writing 
your own functions</A>. </P><A name="An-example_003a-Determinants-of-2-by-2-single_002ddigit-matrices"></A> 
<H4 class="subsubheading">An example: Determinants of 2 by 2 single-digit 
matrices</H4>
<P>As an artificial but cute example, consider the determinants of <EM>2</EM> by 
<EM>2</EM> matrices <EM>[a, b; c, d]</EM> where each entry is a non-negative 
integer in the range <EM>0, 1, …, 9</EM>, that is a digit. </P>
<P>The problem is to find the determinants, <EM>ad - bc</EM>, of all possible
 matrices of this form and represent the frequency with which each value occurs 
as a <EM>high density</EM> plot.  This amounts to finding the probability 
distribution of the determinant if each digit is chosen independently and 
uniformly at random. </P>
<P>A neat way of doing this uses the <CODE>outer()</CODE> function twice: </P>
<DIV class="example">
<PRE class="example">&gt; d &lt;- outer(0:9, 0:9)
&gt; fr &lt;- table(outer(d, d, "-"))
&gt; plot(as.numeric(names(fr)), fr, type="h",
       xlab="Determinant", ylab="Frequency")
</PRE></DIV>
<P>Notice the coercion of the <CODE>names</CODE> attribute of the frequency 
table to numeric in order to recover the range of the determinant values.  The 
“obvious” way of doing this problem with <CODE>for</CODE> loops, to be discussed 
in <A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Loops-and-conditional-execution">Loops 
and conditional execution</A>, is so inefficient as to be impractical. </P>
<P>It is also perhaps surprising that about 1 in 20 such matrices is singular. 
</P>
<HR>
<A name="Generalized-transpose-of-an-array"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Matrix-facilities" 
rel="next">Matrix facilities</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-outer-product-of-two-arrays" 
rel="prev">The outer product of two arrays</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Arrays-and-matrices" 
rel="up">Arrays and matrices</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A 
name="Generalized-transpose-of-an-array-1"></A> 
<H3 class="section">5.6 Generalized transpose of an array</H3><A name="index-Generalized-transpose-of-an-array"></A> 
<P>The function <CODE>aperm(a, perm)</CODE> <A name="index-aperm"></A> may be 
used to permute an array, <CODE>a</CODE>.  The argument <CODE>perm</CODE> must 
be a permutation of the integers <EM>{1, …, k}</EM>, where <EM>k</EM> is the 
number of subscripts in <CODE>a</CODE>.  The result of the function is an array 
of the same size as <CODE>a</CODE> but with old dimension given by 
<CODE>perm[j]</CODE> becoming the new <CODE>j</CODE>-th dimension.  The easiest 
way to think of this operation is as a generalization of transposition for 
matrices.  Indeed if <CODE>A</CODE> is a matrix, (that is, a doubly subscripted 
array) then <CODE>B</CODE> given by </P>
<DIV class="example">
<PRE class="example">&gt; B &lt;- aperm(A, c(2,1))
</PRE></DIV>
<P>is just the transpose of <CODE>A</CODE>.  For this special case a simpler
 function <CODE>t()</CODE> <A name="index-t"></A> is available, so we could have 
used <CODE>B &lt;- t(A)</CODE>. </P>
<HR>
<A name="Matrix-facilities"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Forming-partitioned-matrices" 
rel="next">Forming partitioned matrices</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Generalized-transpose-of-an-array" 
rel="prev">Generalized transpose of an array</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Arrays-and-matrices" 
rel="up">Arrays and matrices</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Matrix-facilities-1"></A> 
<H3 class="section">5.7 Matrix facilities</H3>
<P>As noted above, a matrix is just an array with two subscripts.  However it is 
such an important special case it needs a separate discussion. R contains many 
operators and functions that are available only for matrices.  For example 
<CODE>t(X)</CODE> is the matrix transpose function, as noted above.  The 
functions <CODE>nrow(A)</CODE> and <CODE>ncol(A)</CODE> give the number of rows 
and columns in the matrix <CODE>A</CODE> respectively. <A name="index-nrow"></A> 
<A name="index-ncol"></A> </P>
<TABLE class="menu" border="0" cellspacing="0" summary="">
  <TBODY>
  <TR>
    <TD align="left" valign="top">• <A accesskey="1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Multiplication">Multiplication</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="2" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Linear-equations-and-inversion">Linear 
      equations and inversion</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="3" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Eigenvalues-and-eigenvectors">Eigenvalues 
      and eigenvectors</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="4" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Singular-value-decomposition-and-determinants">Singular 
      value decomposition and determinants</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="5" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Least-squares-fitting-and-the-QR-decomposition">Least 
      squares fitting and the QR decomposition</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR></TBODY></TABLE>
<HR>
<A name="Multiplication"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Linear-equations-and-inversion" 
rel="next">Linear equations and inversion</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Matrix-facilities" 
rel="prev">Matrix facilities</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Matrix-facilities" 
rel="up">Matrix facilities</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Matrix-multiplication"></A> 
<H4 class="subsection">5.7.1 Matrix multiplication</H4><A name="index-Matrix-multiplication"></A> 
<P>The operator <CODE>%*%</CODE> is used for matrix multiplication. <A name="index-_0025_002a_0025"></A>
 An <EM>n</EM> by <EM>1</EM> or <EM>1</EM> by <EM>n</EM> matrix may of course be
 used as an <EM>n</EM>-vector if in the context such is appropriate. Conversely, 
vectors which occur in matrix multiplication expressions are automatically 
promoted either to row or column vectors, whichever is multiplicatively 
coherent, if possible, (although this is not always unambiguously possible, as 
we see later). </P>
<P>If, for example, <CODE>A</CODE> and <CODE>B</CODE> are square matrices of the 
same size, then </P>
<DIV class="example">
<PRE class="example">&gt; A * B
</PRE></DIV>
<P>is the matrix of element by element products and </P>
<DIV class="example">
<PRE class="example">&gt; A %*% B
</PRE></DIV>
<P>is the matrix product.  If <CODE>x</CODE> is a vector, then </P>
<DIV class="example">
<PRE class="example">&gt; x %*% A %*% x
</PRE></DIV>
<P>is a quadratic form.<A name="DOCF16" href="http://127.0.0.1:29225/doc/manual/R-intro.html#FOOT16"><SUP>16</SUP></A> 
</P><A name="index-crossprod-1"></A> 
<P>The function <CODE>crossprod()</CODE> forms “crossproducts”, meaning that 
<CODE>crossprod(X, y)</CODE> is the same as <CODE>t(X) %*% y</CODE> but the
 operation is more efficient.  If the second argument to 
<CODE>crossprod()</CODE> is omitted it is taken to be the same as the first. 
</P><A name="index-diag"></A> 
<P>The meaning of <CODE>diag()</CODE> depends on its argument.  
<CODE>diag(v)</CODE>, where <CODE>v</CODE> is a vector, gives a diagonal matrix 
with elements of the vector as the diagonal entries.  On the other hand 
<CODE>diag(M)</CODE>, where <CODE>M</CODE> is a matrix, gives the vector of main 
diagonal entries of <CODE>M</CODE>.  This is the same convention as that used 
for <CODE>diag()</CODE> in <SMALL>MATLAB</SMALL>.  Also, somewhat confusingly, 
if <CODE>k</CODE> is a single numeric value then <CODE>diag(k)</CODE> is the 
<CODE>k</CODE> by <CODE>k</CODE> identity matrix! </P>
<HR>
<A name="Linear-equations-and-inversion"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Eigenvalues-and-eigenvectors" 
rel="next">Eigenvalues and eigenvectors</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Multiplication" 
rel="prev">Multiplication</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Matrix-facilities" 
rel="up">Matrix facilities</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Linear-equations-and-inversion-1"></A> 
<H4 class="subsection">5.7.2 Linear equations and inversion</H4><A name="index-Linear-equations"></A> 
<A name="index-solve"></A> 
<P>Solving linear equations is the inverse of matrix multiplication. When after 
</P>
<DIV class="example">
<PRE class="example">&gt; b &lt;- A %*% x
</PRE></DIV>
<P>only <CODE>A</CODE> and <CODE>b</CODE> are given, the vector <CODE>x</CODE> 
is the solution of that linear equation system.  In R, </P>
<DIV class="example">
<PRE class="example">&gt; solve(A,b)
</PRE></DIV>
<P>solves the system, returning <CODE>x</CODE> (up to some accuracy loss). Note 
that in linear algebra, formally <CODE>x = A^{-1} %*% b</CODE> where 
<CODE>A^{-1}</CODE> denotes the <EM>inverse</EM> of <CODE>A</CODE>, which can be 
computed by </P>
<DIV class="example">
<PRE class="example">solve(A)
</PRE></DIV>
<P>but rarely is needed.  Numerically, it is both inefficient and potentially 
unstable to compute <CODE>x &lt;- solve(A) %*% b</CODE> instead of 
<CODE>solve(A,b)</CODE>. </P>
<P>The quadratic form &nbsp;<CODE>x %*% A^{-1} %*% x</CODE> &nbsp; which is used 
in multivariate computations, should be computed by something like<A name="DOCF17" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#FOOT17"><SUP>17</SUP></A> 
<CODE>x %*% solve(A,x)</CODE>, rather than computing the inverse of 
<CODE>A</CODE>. </P>
<HR>
<A name="Eigenvalues-and-eigenvectors"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Singular-value-decomposition-and-determinants" 
rel="next">Singular value decomposition and determinants</A>, Previous: <A 
accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Linear-equations-and-inversion" 
rel="prev">Linear equations and inversion</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Matrix-facilities" 
rel="up">Matrix facilities</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Eigenvalues-and-eigenvectors-1"></A> 
<H4 class="subsection">5.7.3 Eigenvalues and eigenvectors</H4><A name="index-Eigenvalues-and-eigenvectors"></A> 
<A name="index-eigen"></A> 
<P>The function <CODE>eigen(Sm)</CODE> calculates the eigenvalues and
 eigenvectors of a symmetric matrix <CODE>Sm</CODE>.  The result of this
 function is a list of two components named <CODE>values</CODE> and 
<CODE>vectors</CODE>.  The assignment </P>
<DIV class="example">
<PRE class="example">&gt; ev &lt;- eigen(Sm)
</PRE></DIV>
<P>will assign this list to <CODE>ev</CODE>.  Then <CODE>ev$val</CODE> is the 
vector of eigenvalues of <CODE>Sm</CODE> and <CODE>ev$vec</CODE> is the matrix 
of corresponding eigenvectors.  Had we only needed the eigenvalues we could have 
used the assignment: </P>
<DIV class="example">
<PRE class="example">&gt; evals &lt;- eigen(Sm)$values
</PRE></DIV>
<P><CODE>evals</CODE> now holds the vector of eigenvalues and the second
 component is discarded.  If the expression </P>
<DIV class="example">
<PRE class="example">&gt; eigen(Sm)
</PRE></DIV>
<P>is used by itself as a command the two components are printed, with their 
names.  For large matrices it is better to avoid computing the eigenvectors if 
they are not needed by using the expression </P>
<DIV class="example">
<PRE class="example">&gt; evals &lt;- eigen(Sm, only.values = TRUE)$values
</PRE></DIV>
<HR>
<A name="Singular-value-decomposition-and-determinants"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Least-squares-fitting-and-the-QR-decomposition" 
rel="next">Least squares fitting and the QR decomposition</A>, Previous: <A 
accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Eigenvalues-and-eigenvectors" 
rel="prev">Eigenvalues and eigenvectors</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Matrix-facilities" 
rel="up">Matrix facilities</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Singular-value-decomposition-and-determinants-1"></A> 
<H4 class="subsection">5.7.4 Singular value decomposition and 
determinants</H4><A name="index-Singular-value-decomposition"></A> <A name="index-svd"></A> 
<P>The function <CODE>svd(M)</CODE> takes an arbitrary matrix argument, 
<CODE>M</CODE>, and calculates the singular value decomposition of 
<CODE>M</CODE>.  This consists of a matrix of orthonormal columns <CODE>U</CODE> 
with the same column space as <CODE>M</CODE>, a second matrix of orthonormal 
columns <CODE>V</CODE> whose column space is the row space of <CODE>M</CODE> and 
a diagonal matrix of positive entries <CODE>D</CODE> such that <CODE>M = U %*% D 
%*% t(V)</CODE>.  <CODE>D</CODE> is actually returned as a vector of the 
diagonal elements.  The result of <CODE>svd(M)</CODE> is actually a list of 
three components named <CODE>d</CODE>, <CODE>u</CODE> and <CODE>v</CODE>, with 
evident meanings. </P>
<P>If <CODE>M</CODE> is in fact square, then, it is not hard to see that </P>
<DIV class="example">
<PRE class="example">&gt; absdetM &lt;- prod(svd(M)$d)
</PRE></DIV>
<P>calculates the absolute value of the determinant of <CODE>M</CODE>.  If this
 calculation were needed often with a variety of matrices it could be defined as 
an R function </P>
<DIV class="example">
<PRE class="example">&gt; absdet &lt;- function(M) prod(svd(M)$d)
</PRE></DIV><A 
name="index-Determinants"></A> 
<P>after which we could use <CODE>absdet()</CODE> as just another R function. As 
a further trivial but potentially useful example, you might like to consider 
writing a function, say <CODE>tr()</CODE>, to calculate the trace of a square 
matrix.  [Hint: You will not need to use an explicit loop. Look again at the 
<CODE>diag()</CODE> function.] </P><A name="index-det"></A> <A name="index-determinant"></A> 
<P>R has a builtin function <CODE>det</CODE> to calculate a determinant,
 including the sign, and another, <CODE>determinant</CODE>, to give the sign and 
modulus (optionally on log scale), </P>
<HR>
<A name="Least-squares-fitting-and-the-QR-decomposition"></A> 
<DIV class="header">
<P>Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Singular-value-decomposition-and-determinants" 
rel="prev">Singular value decomposition and determinants</A>, Up: <A accesskey="u" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#Matrix-facilities" 
rel="up">Matrix facilities</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Least-squares-fitting-and-the-QR-decomposition-1"></A> 
<H4 class="subsection">5.7.5 Least squares fitting and the QR 
decomposition</H4><A name="index-Least-squares-fitting"></A> <A name="index-QR-decomposition"></A> 
<P>The function <CODE>lsfit()</CODE> returns a list giving results of a least
 squares fitting procedure.  An assignment such as </P>
<DIV class="example">
<PRE class="example">&gt; ans &lt;- lsfit(X, y)
</PRE></DIV><A name="index-lsfit"></A> 
<P>gives the results of a least squares fit where <CODE>y</CODE> is the vector 
of observations and <CODE>X</CODE> is the design matrix.  See the help facility
 for more details, and also for the follow-up function <CODE>ls.diag()</CODE>
 for, among other things, regression diagnostics.  Note that a grand mean term 
is automatically included and need not be included explicitly as a column of 
<CODE>X</CODE>.  Further note that you almost always will prefer using 
<CODE>lm(.)</CODE> (see <A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Linear-models">Linear 
models</A>) to <CODE>lsfit()</CODE> for regression modelling. </P><A name="index-qr"></A> 
<P>Another closely related function is <CODE>qr()</CODE> and its allies.
 Consider the following assignments </P>
<DIV class="example">
<PRE class="example">&gt; Xplus &lt;- qr(X)
&gt; b &lt;- qr.coef(Xplus, y)
&gt; fit &lt;- qr.fitted(Xplus, y)
&gt; res &lt;- qr.resid(Xplus, y)
</PRE></DIV>
<P>These compute the orthogonal projection of <CODE>y</CODE> onto the range of 
<CODE>X</CODE> in <CODE>fit</CODE>, the projection onto the orthogonal 
complement in <CODE>res</CODE> and the coefficient vector for the projection in 
<CODE>b</CODE>, that is, <CODE>b</CODE> is essentially the result of the 
<SMALL>MATLAB</SMALL> ‘backslash’ operator. </P>
<P>It is not assumed that <CODE>X</CODE> has full column rank.  Redundancies 
will be discovered and removed as they are found. </P>
<P>This alternative is the older, low-level way to perform least squares
 calculations.  Although still useful in some contexts, it would now generally 
be replaced by the statistical models features, as will be discussed in <A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Statistical-models-in-R">Statistical 
models in R</A>. </P>
<HR>
<A name="Forming-partitioned-matrices"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-concatenation-function-c_0028_0029-with-arrays" 
rel="next">The concatenation function c() with arrays</A>, Previous: <A 
accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Matrix-facilities" 
rel="prev">Matrix facilities</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Arrays-and-matrices" 
rel="up">Arrays and matrices</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Forming-partitioned-matrices_002c-cbind_0028_0029-and-rbind_0028_0029"></A> 
<H3 class="section">5.8 Forming partitioned matrices, <CODE>cbind()</CODE> and 
<CODE>rbind()</CODE></H3><A name="index-cbind"></A> <A name="index-rbind"></A> 
<P>As we have already seen informally, matrices can be built up from other
 vectors and matrices by the functions <CODE>cbind()</CODE> and 
<CODE>rbind()</CODE>. Roughly <CODE>cbind()</CODE> forms matrices by binding 
together matrices horizontally, or column-wise, and <CODE>rbind()</CODE> 
vertically, or row-wise. </P>
<P>In the assignment </P>
<DIV class="example">
<PRE class="example">&gt; X &lt;- cbind(<VAR>arg_1</VAR>, <VAR>arg_2</VAR>, <VAR>arg_3</VAR>, …)
</PRE></DIV>
<P>the arguments to <CODE>cbind()</CODE> must be either vectors of any length, 
or matrices with the same column size, that is the same number of rows. The 
result is a matrix with the concatenated arguments <VAR>arg_1</VAR>, 
<VAR>arg_2</VAR>, … forming the columns. </P>
<P>If some of the arguments to <CODE>cbind()</CODE> are vectors they may be
 shorter than the column size of any matrices present, in which case they are 
cyclically extended to match the matrix column size (or the length of the 
longest vector if no matrices are given). </P>
<P>The function <CODE>rbind()</CODE> does the corresponding operation for rows.
 In this case any vector argument, possibly cyclically extended, are of course 
taken as row vectors. </P>
<P>Suppose <CODE>X1</CODE> and <CODE>X2</CODE> have the same number of rows.  To
 combine these by columns into a matrix <CODE>X</CODE>, together with an initial 
column of <CODE>1</CODE>s we can use </P>
<DIV class="example">
<PRE class="example">&gt; X &lt;- cbind(1, X1, X2)
</PRE></DIV>
<P>The result of <CODE>rbind()</CODE> or <CODE>cbind()</CODE> always has matrix 
status. Hence <CODE>cbind(x)</CODE> and <CODE>rbind(x)</CODE> are possibly the 
simplest ways explicitly to allow the vector <CODE>x</CODE> to be treated as a 
column or row matrix respectively. </P>
<HR>
<A name="The-concatenation-function-c_0028_0029-with-arrays"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Frequency-tables-from-factors" 
rel="next">Frequency tables from factors</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Forming-partitioned-matrices" 
rel="prev">Forming partitioned matrices</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Arrays-and-matrices" 
rel="up">Arrays and matrices</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="The-concatenation-function_002c-c_0028_0029_002c-with-arrays"></A> 
<H3 class="section">5.9 The concatenation function, <CODE>c()</CODE>, with 
arrays</H3>
<P>It should be noted that whereas <CODE>cbind()</CODE> and <CODE>rbind()</CODE> 
are concatenation functions that respect <CODE>dim</CODE> attributes, the basic 
<CODE>c()</CODE> function does not, but rather clears numeric objects of all 
<CODE>dim</CODE> and <CODE>dimnames</CODE> attributes.  This is occasionally 
useful in its own right. </P>
<P>The official way to coerce an array back to a simple vector object is to use 
<CODE>as.vector()</CODE> </P>
<DIV class="example">
<PRE class="example">&gt; vec &lt;- as.vector(X)
</PRE></DIV><A name="index-as_002evector"></A> 
<P>However a similar result can be achieved by using <CODE>c()</CODE> with just
 one argument, simply for this side-effect: </P>
<DIV class="example">
<PRE class="example">&gt; vec &lt;- c(X)
</PRE></DIV><A name="index-c-2"></A> 
<P>There are slight differences between the two, but ultimately the choice
 between them is largely a matter of style (with the former being preferable). 
</P>
<HR>
<A name="Frequency-tables-from-factors"></A> 
<DIV class="header">
<P>Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-concatenation-function-c_0028_0029-with-arrays" 
rel="prev">The concatenation function c() with arrays</A>, Up: <A accesskey="u" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#Arrays-and-matrices" rel="up">Arrays 
and matrices</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Frequency-tables-from-factors-1"></A> 
<H3 class="section">5.10 Frequency tables from factors</H3><A name="index-Tabulation"></A> 
<P>Recall that a factor defines a partition into groups.  Similarly a pair of 
factors defines a two way cross classification, and so on. <A name="index-table-1"></A>
 The function <CODE>table()</CODE> allows frequency tables to be calculated from 
equal length factors.  If there are <EM>k</EM> factor arguments, the result is a 
<EM>k</EM>-way array of frequencies. </P>
<P>Suppose, for example, that <CODE>statef</CODE> is a factor giving the state
 code for each entry in a data vector.  The assignment </P>
<DIV class="example">
<PRE class="example">&gt; statefr &lt;- table(statef)
</PRE></DIV>
<P>gives in <CODE>statefr</CODE> a table of frequencies of each state in the
 sample.  The frequencies are ordered and labelled by the <CODE>levels</CODE>
 attribute of the factor.  This simple case is equivalent to, but more
 convenient than, </P>
<DIV class="example">
<PRE class="example">&gt; statefr &lt;- tapply(statef, statef, length)
</PRE></DIV>
<P>Further suppose that <CODE>incomef</CODE> is a factor giving a suitably
 defined “income class” for each entry in the data vector, for example with the 
<CODE>cut()</CODE> function: </P>
<DIV class="example">
<PRE class="example">&gt; factor(cut(incomes, breaks = 35+10*(0:7))) -&gt; incomef
</PRE></DIV><A 
name="index-cut"></A> 
<P>Then to calculate a two-way table of frequencies: </P>
<DIV class="example">
<PRE class="example">&gt; table(incomef,statef)
         statef
incomef   act nsw nt qld sa tas vic wa
  (35,45]   1   1  0   1  0   0   1  0
  (45,55]   1   1  1   1  2   0   1  3
  (55,65]   0   3  1   3  2   2   2  1
  (65,75]   0   1  0   0  0   0   1  0
</PRE></DIV>
<P>Extension to higher-way frequency tables is immediate. </P>
<HR>
<A name="Lists-and-data-frames"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Reading-data-from-files" 
rel="next">Reading data from files</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Arrays-and-matrices" 
rel="prev">Arrays and matrices</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Top" 
rel="up">Top</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Lists-and-data-frames-1"></A> 
<H2 class="chapter">6 Lists and data frames</H2>
<TABLE class="menu" border="0" cellspacing="0" summary="">
  <TBODY>
  <TR>
    <TD align="left" valign="top">• <A accesskey="1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Lists">Lists</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="2" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Constructing-and-modifying-lists">Constructing 
      and modifying lists</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="3" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Data-frames">Data 
      frames</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR></TBODY></TABLE>
<HR>
<A name="Lists"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Constructing-and-modifying-lists" 
rel="next">Constructing and modifying lists</A>, Previous: <A accesskey="p" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#Lists-and-data-frames" rel="prev">Lists 
and data frames</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Lists-and-data-frames" 
rel="up">Lists and data frames</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Lists-1"></A> 
<H3 class="section">6.1 Lists</H3><A name="index-Lists"></A> 
<P>An R <EM>list</EM> is an object consisting of an ordered collection of
 objects known as its <EM>components</EM>. </P>
<P>There is no particular need for the components to be of the same mode or
 type, and, for example, a list could consist of a numeric vector, a logical 
value, a matrix, a complex vector, a character array, a function, and so on.  
Here is a simple example of how to make a list: </P>
<DIV class="example">
<PRE class="example">&gt; Lst &lt;- list(name="Fred", wife="Mary", no.children=3,
              child.ages=c(4,7,9))
</PRE></DIV><A 
name="index-list"></A> 
<P>Components are always <EM>numbered</EM> and may always be referred to as
 such.  Thus if <CODE>Lst</CODE> is the name of a list with four components,
 these may be individually referred to as <CODE>Lst[[1]]</CODE>, 
<CODE>Lst[[2]]</CODE>, <CODE>Lst[[3]]</CODE> and <CODE>Lst[[4]]</CODE>.  If, 
further, <CODE>Lst[[4]]</CODE> is a vector subscripted array then 
<CODE>Lst[[4]][1]</CODE> is its first entry. </P>
<P>If <CODE>Lst</CODE> is a list, then the function <CODE>length(Lst)</CODE> 
gives the number of (top level) components it has. </P>
<P>Components of lists may also be <EM>named</EM>, and in this case the
 component may be referred to either by giving the component name as a character 
string in place of the number in double square brackets, or, more conveniently, 
by giving an expression of the form </P>
<DIV class="example">
<PRE class="example">&gt; <VAR>name</VAR>$<VAR>component_name</VAR>
</PRE></DIV>
<P>for the same thing. </P>
<P>This is a very useful convention as it makes it easier to get the right
 component if you forget the number. </P>
<P>So in the simple example given above: </P>
<P><CODE>Lst$name</CODE> is the same as <CODE>Lst[[1]]</CODE> and is the string 
<CODE>"Fred"</CODE>, </P>
<P><CODE>Lst$wife</CODE> is the same as <CODE>Lst[[2]]</CODE> and is the string 
<CODE>"Mary"</CODE>, </P>
<P><CODE>Lst$child.ages[1]</CODE> is the same as <CODE>Lst[[4]][1]</CODE> and is 
the number <CODE>4</CODE>. </P>
<P>Additionally, one can also use the names of the list components in double 
square brackets, i.e., <CODE>Lst[["name"]]</CODE> is the same as 
<CODE>Lst$name</CODE>.  This is especially useful, when the name of the
 component to be extracted is stored in another variable as in </P>
<DIV class="example">
<PRE class="example">&gt; x &lt;- "name"; Lst[[x]]
</PRE></DIV>
<P>It is very important to distinguish <CODE>Lst[[1]]</CODE> from 
<CODE>Lst[1]</CODE>. ‘<SAMP><CODE>[[<VAR>…</VAR>]]</CODE></SAMP>’ is the 
operator used to select a single element, whereas 
‘<SAMP><CODE>[<VAR>…</VAR>]</CODE></SAMP>’ is a general subscripting operator.  
Thus the former is the <EM>first object in the list</EM> <CODE>Lst</CODE>, and 
if it is a named list the name is <EM>not</EM> included. The latter is a 
<EM>sublist of the list <CODE>Lst</CODE> consisting of the first entry only.  If 
it is a named list, the names are transferred to the sublist.</EM> </P>
<P>The names of components may be abbreviated down to the minimum number of
 letters needed to identify them uniquely.  Thus <CODE>Lst$coefficients</CODE>
 may be minimally specified as <CODE>Lst$coe</CODE> and 
<CODE>Lst$covariance</CODE> as <CODE>Lst$cov</CODE>. </P>
<P>The vector of names is in fact simply an attribute of the list like any other 
and may be handled as such.  Other structures besides lists may, of course, 
similarly be given a <EM>names</EM> attribute also. </P>
<HR>
<A name="Constructing-and-modifying-lists"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Data-frames" 
rel="next">Data frames</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Lists" 
rel="prev">Lists</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Lists-and-data-frames" 
rel="up">Lists and data frames</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A 
name="Constructing-and-modifying-lists-1"></A> 
<H3 class="section">6.2 Constructing and modifying lists</H3>
<P>New lists may be formed from existing objects by the function 
<CODE>list()</CODE>.  An assignment of the form </P>
<DIV class="example">
<PRE class="example">&gt; Lst &lt;- list(<VAR>name_1</VAR>=<VAR>object_1</VAR>, <VAR>…</VAR>, <VAR>name_m</VAR>=<VAR>object_m</VAR>)
</PRE></DIV>
<P>sets up a list <CODE>Lst</CODE> of <EM>m</EM> components using 
<VAR>object_1</VAR>, …, <VAR>object_m</VAR> for the components and giving them 
names as specified by the argument names, (which can be freely chosen).  If 
these names are omitted, the components are numbered only.  The components used 
to form the list are <EM>copied</EM> when forming the new list and the originals 
are not affected. </P>
<P>Lists, like any subscripted object, can be extended by specifying additional 
components.  For example </P>
<DIV class="example">
<PRE class="example">&gt; Lst[5] &lt;- list(matrix=Mat)
</PRE></DIV>
<TABLE class="menu" border="0" cellspacing="0" summary="">
  <TBODY>
  <TR>
    <TD align="left" valign="top">• <A accesskey="1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Concatenating-lists">Concatenating 
      lists</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR></TBODY></TABLE>
<HR>
<A name="Concatenating-lists"></A> 
<DIV class="header">
<P>Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Constructing-and-modifying-lists" 
rel="prev">Constructing and modifying lists</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Constructing-and-modifying-lists" 
rel="up">Constructing and modifying lists</A> &nbsp; [<A title="Table of contents" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" rel="contents">Contents</A>][<A 
title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Concatenating-lists-1"></A> 
<H4 class="subsection">6.2.1 Concatenating lists</H4><A name="index-Concatenating-lists"></A> 
<A name="index-c-3"></A> 
<P>When the concatenation function <CODE>c()</CODE> is given list arguments, the
 result is an object of mode list also, whose components are those of the
 argument lists joined together in sequence. </P>
<DIV class="example">
<PRE class="example">&gt; list.ABC &lt;- c(list.A, list.B, list.C)
</PRE></DIV>
<P>Recall that with vector objects as arguments the concatenation function
 similarly joined together all arguments into a single vector structure. In this 
case all other attributes, such as <CODE>dim</CODE> attributes, are discarded. 
</P>
<HR>
<A name="Data-frames"></A> 
<DIV class="header">
<P>Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Constructing-and-modifying-lists" 
rel="prev">Constructing and modifying lists</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Lists-and-data-frames" 
rel="up">Lists and data frames</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Data-frames-1"></A> 
<H3 class="section">6.3 Data frames</H3><A name="index-Data-frames"></A> 
<P>A <EM>data frame</EM> is a list with class <CODE>"data.frame"</CODE>.  There 
are restrictions on lists that may be made into data frames, namely </P>
<UL>
  <LI> The components must be vectors (numeric, character, or logical), factors, 
  numeric matrices, lists, or other data frames. </LI>
  <LI> Matrices, lists, and data frames provide as many variables to the new
   data frame as they have columns, elements, or variables, respectively. </LI>
  <LI> Numeric vectors, logicals and factors are included as is, and by
   default<A name="DOCF18" href="http://127.0.0.1:29225/doc/manual/R-intro.html#FOOT18"><SUP>18</SUP></A> 
  character vectors are coerced to be factors, whose levels are the unique 
  values appearing in the vector. </LI>
  <LI> Vector structures appearing as variables of the data frame must all have
   the <EM>same length</EM>, and matrix structures must all have the same 
  <EM>row size</EM>. </LI></UL>
<P>A data frame may for many purposes be regarded as a matrix with columns
 possibly of differing modes and attributes.  It may be displayed in matrix 
form, and its rows and columns extracted using matrix indexing conventions. </P>
<TABLE class="menu" border="0" cellspacing="0" summary="">
  <TBODY>
  <TR>
    <TD align="left" valign="top">• <A accesskey="1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Making-data-frames">Making 
      data frames</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="2" href="http://127.0.0.1:29225/doc/manual/R-intro.html#attach_0028_0029-and-detach_0028_0029">attach() 
      and detach()</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="3" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Working-with-data-frames">Working 
      with data frames</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="4" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Attaching-arbitrary-lists">Attaching 
      arbitrary lists</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="5" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Managing-the-search-path">Managing 
      the search path</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR></TBODY></TABLE>
<HR>
<A name="Making-data-frames"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#attach_0028_0029-and-detach_0028_0029" 
rel="next">attach() and detach()</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Data-frames" 
rel="prev">Data frames</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Data-frames" 
rel="up">Data frames</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Making-data-frames-1"></A> 
<H4 class="subsection">6.3.1 Making data frames</H4>
<P>Objects satisfying the restrictions placed on the columns (components) of a 
data frame may be used to form one using the function <CODE>data.frame</CODE>: 
<A name="index-data_002eframe"></A> </P>
<DIV class="example">
<PRE class="example">&gt; accountants &lt;- data.frame(home=statef, loot=incomes, shot=incomef)
</PRE></DIV>
<P>A list whose components conform to the restrictions of a data frame may be 
<EM>coerced</EM> into a data frame using the function 
<CODE>as.data.frame()</CODE> <A name="index-as_002edata_002eframe"></A> </P>
<P>The simplest way to construct a data frame from scratch is to use the 
<CODE>read.table()</CODE> function to read an entire data frame from an external 
file.  This is discussed further in <A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Reading-data-from-files">Reading 
data from files</A>. </P>
<HR>
<A name="attach_0028_0029-and-detach_0028_0029"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Working-with-data-frames" 
rel="next">Working with data frames</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Making-data-frames" 
rel="prev">Making data frames</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Data-frames" 
rel="up">Data frames</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="attach_0028_0029-and-detach_0028_0029-1"></A> 
<H4 class="subsection">6.3.2 <CODE>attach()</CODE> and 
<CODE>detach()</CODE></H4><A name="index-attach"></A> <A 
name="index-detach"></A> 
<P>The <CODE>$</CODE> notation, such as <CODE>accountants$home</CODE>, for list
 components is not always very convenient.  A useful facility would be somehow 
to make the components of a list or data frame temporarily visible as variables 
under their component name, without the need to quote the list name explicitly 
each time. </P>
<P>The <CODE>attach()</CODE> function takes a ‘database’ such as a list or data
 frame as its argument.  Thus suppose <CODE>lentils</CODE> is a data frame with 
three variables <CODE>lentils$u</CODE>, <CODE>lentils$v</CODE>, 
<CODE>lentils$w</CODE>.  The attach </P>
<DIV class="example">
<PRE class="example">&gt; attach(lentils)
</PRE></DIV>
<P>places the data frame in the search path at position&nbsp;2<!-- /@w -->, and 
provided there are no variables <CODE>u</CODE>, <CODE>v</CODE> or <CODE>w</CODE> 
in position&nbsp;1<!-- /@w -->, <CODE>u</CODE>, <CODE>v</CODE> and 
<CODE>w</CODE> are available as variables from the data frame in their own 
right.  At this point an assignment such as </P>
<DIV class="example">
<PRE class="example">&gt; u &lt;- v+w
</PRE></DIV>
<P>does not replace the component <CODE>u</CODE> of the data frame, but rather
 masks it with another variable <CODE>u</CODE> in the working directory at
 position&nbsp;1<!-- /@w --> on the search path.  To make a permanent change to 
the data frame itself, the simplest way is to resort once again to the 
<CODE>$</CODE> notation: </P>
<DIV class="example">
<PRE class="example">&gt; lentils$u &lt;- v+w
</PRE></DIV>
<P>However the new value of component <CODE>u</CODE> is not visible until the
 data frame is detached and attached again. </P>
<P>To detach a data frame, use the function </P>
<DIV class="example">
<PRE class="example">&gt; detach()
</PRE></DIV>
<P>More precisely, this statement detaches from the search path the entity
 currently at position&nbsp;2<!-- /@w -->.  Thus in the present context the 
variables <CODE>u</CODE>, <CODE>v</CODE> and <CODE>w</CODE> would be no longer 
visible, except under the list notation as <CODE>lentils$u</CODE> and so on.  
Entities at positions greater than 2 on the search path can be detached by 
giving their number to <CODE>detach</CODE>, but it is much safer to always use a 
name, for example by <CODE>detach(lentils)</CODE> or 
<CODE>detach("lentils")</CODE> </P>
<BLOCKQUOTE>
  <P><B>Note:</B> In R lists and data frames can only be attached at position 2 
  or above, and what is attached is a <EM>copy</EM> of the original object. You 
  can alter the attached values <EM>via</EM> <CODE>assign</CODE>, but the
   original list or data frame is unchanged. </P></BLOCKQUOTE>
<HR>
<A name="Working-with-data-frames"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Attaching-arbitrary-lists" 
rel="next">Attaching arbitrary lists</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#attach_0028_0029-and-detach_0028_0029" 
rel="prev">attach() and detach()</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Data-frames" 
rel="up">Data frames</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Working-with-data-frames-1"></A> 
<H4 class="subsection">6.3.3 Working with data frames</H4>
<P>A useful convention that allows you to work with many different problems
 comfortably together in the same working directory is </P>
<UL>
  <LI> gather together all variables for any well defined and separate problem
   in a data frame under a suitably informative name; </LI>
  <LI> when working with a problem attach the appropriate data frame at
   position&nbsp;2<!-- /@w -->, and use the working directory at level&nbsp;1<!-- /@w --> 
  for operational quantities and temporary variables; </LI>
  <LI> before leaving a problem, add any variables you wish to keep for future
   reference to the data frame using the <CODE>$</CODE> form of assignment, and
   then <CODE>detach()</CODE>; </LI>
  <LI> finally remove all unwanted variables from the working directory and keep 
  it as clean of left-over temporary variables as possible. </LI></UL>
<P>In this way it is quite simple to work with many problems in the same
 directory, all of which have variables named <CODE>x</CODE>, <CODE>y</CODE> and 
<CODE>z</CODE>, for example. </P>
<HR>
<A name="Attaching-arbitrary-lists"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Managing-the-search-path" 
rel="next">Managing the search path</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Working-with-data-frames" 
rel="prev">Working with data frames</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Data-frames" 
rel="up">Data frames</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Attaching-arbitrary-lists-1"></A> 
<H4 class="subsection">6.3.4 Attaching arbitrary lists</H4>
<P><CODE>attach()</CODE> is a generic function that allows not only directories
 and data frames to be attached to the search path, but other classes of object 
as well.  In particular any object of mode <CODE>"list"</CODE> may be attached 
in the same way: </P>
<DIV class="example">
<PRE class="example">&gt; attach(any.old.list)
</PRE></DIV>
<P>Anything that has been attached can be detached by <CODE>detach</CODE>, by
 position number or, preferably, by name. </P>
<HR>
<A name="Managing-the-search-path"></A> 
<DIV class="header">
<P>Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Attaching-arbitrary-lists" 
rel="prev">Attaching arbitrary lists</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Data-frames" 
rel="up">Data frames</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Managing-the-search-path-1"></A> 
<H4 class="subsection">6.3.5 Managing the search path</H4><A 
name="index-search"></A> <A name="index-Search-path"></A> 
<P>The function <CODE>search</CODE> shows the current search path and so is a 
very useful way to keep track of which data frames and lists (and packages) have 
been attached and detached.  Initially it gives </P>
<DIV class="example">
<PRE class="example">&gt; search()
[1] ".GlobalEnv"   "Autoloads"    "package:base"
</PRE></DIV>
<P>where <CODE>.GlobalEnv</CODE> is the workspace.<A name="DOCF19" href="http://127.0.0.1:29225/doc/manual/R-intro.html#FOOT19"><SUP>19</SUP></A> 
</P>
<P>After <CODE>lentils</CODE> is attached we have </P>
<DIV class="example">
<PRE class="example">&gt; search()
[1] ".GlobalEnv"   "lentils"      "Autoloads"    "package:base"
&gt; ls(2)
[1] "u" "v" "w"
</PRE></DIV>
<P>and as we see <CODE>ls</CODE> (or <CODE>objects</CODE>) can be used to 
examine the contents of any position on the search path. </P>
<P>Finally, we detach the data frame and confirm it has been removed from the 
search path. </P>
<DIV class="example">
<PRE class="example">&gt; detach("lentils")
&gt; search()
[1] ".GlobalEnv"   "Autoloads"    "package:base"
</PRE></DIV>
<HR>
<A name="Reading-data-from-files"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Probability-distributions" 
rel="next">Probability distributions</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Lists-and-data-frames" 
rel="prev">Lists and data frames</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Top" 
rel="up">Top</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Reading-data-from-files-1"></A> 
<H2 class="chapter">7 Reading data from files</H2><A name="index-Reading-data-from-files"></A> 
<P>Large data objects will usually be read as values from external files rather 
than entered during an R session at the keyboard.  R input facilities are simple 
and their requirements are fairly strict and even rather inflexible.  There is a 
clear presumption by the designers of R that you will be able to modify your 
input files using other tools, such as file editors or Perl<A name="DOCF20" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#FOOT20"><SUP>20</SUP></A> 
to fit in with the requirements of R.  Generally this is very simple. </P>
<P>If variables are to be held mainly in data frames, as we strongly suggest 
they should be, an entire data frame can be read directly with the 
<CODE>read.table()</CODE> function.  There is also a more primitive input
 function, <CODE>scan()</CODE>, that can be called directly. </P>
<P>For more details on importing data into R and also exporting data, see the 
<EM>R Data Import/Export</EM> manual. </P>
<TABLE class="menu" border="0" cellspacing="0" summary="">
  <TBODY>
  <TR>
    <TD align="left" valign="top">• <A accesskey="1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-read_002etable_0028_0029-function">The 
      read.table() function</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="2" href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-scan_0028_0029-function">The 
      scan() function</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="3" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Accessing-builtin-datasets">Accessing 
      builtin datasets</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="4" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Editing-data">Editing 
      data</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR></TBODY></TABLE>
<HR>
<A name="The-read_002etable_0028_0029-function"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-scan_0028_0029-function" 
rel="next">The scan() function</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Reading-data-from-files" 
rel="prev">Reading data from files</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Reading-data-from-files" 
rel="up">Reading data from files</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="The-read_002etable_0028_0029-function-1"></A> 
<H3 class="section">7.1 The <CODE>read.table()</CODE> function</H3><A name="index-read_002etable"></A> 
<P>To read an entire data frame directly, the external file will normally have a 
special form. </P>
<UL>
  <LI> The first line of the file should have a <EM>name</EM> for each variable
   in the data frame. </LI>
  <LI> Each additional line of the file has as its first item a <EM>row 
  label</EM> and the values for each variable. </LI></UL>
<P>If the file has one fewer item in its first line than in its second, this
 arrangement is presumed to be in force.  So the first few lines of a file to be 
read as a data frame might look as follows. </P>
<BLOCKQUOTE>
  <TABLE class="cartouche" border="1" summary="">
    <TBODY>
    <TR>
      <TD>
        <DIV class="example">
<PRE class="example"><SPAN class="roman">Input file form with names and row labels:</SPAN>

     Price    Floor     Area   Rooms     Age  Cent.heat
01   52.00    111.0      830     5       6.2      no
02   54.75    128.0      710     5       7.5      no
03   57.50    101.0     1000     5       4.2      no
04   57.50    131.0      690     6       8.8      no
05   59.75     93.0      900     5       1.9     yes
...
</PRE></DIV></TD></TR></TBODY></TABLE></BLOCKQUOTE>
<P>By default numeric items (except row labels) are read as numeric variables 
and non-numeric variables, such as <CODE>Cent.heat</CODE> in the example, as 
factors.  This can be changed if necessary. </P>
<P>The function <CODE>read.table()</CODE> can then be used to read the data 
frame directly </P>
<DIV class="example">
<PRE class="example">&gt; HousePrice &lt;- read.table("houses.data")
</PRE></DIV>
<P>Often you will want to omit including the row labels directly and use the
 default labels.  In this case the file may omit the row label column as in the 
following. </P>
<BLOCKQUOTE>
  <TABLE class="cartouche" border="1" summary="">
    <TBODY>
    <TR>
      <TD>
        <DIV class="example">
<PRE class="example"><SPAN class="roman">Input file form without row labels:</SPAN>

Price    Floor     Area   Rooms     Age  Cent.heat
52.00    111.0      830     5       6.2      no
54.75    128.0      710     5       7.5      no
57.50    101.0     1000     5       4.2      no
57.50    131.0      690     6       8.8      no
59.75     93.0      900     5       1.9     yes
...
</PRE></DIV></TD></TR></TBODY></TABLE></BLOCKQUOTE>
<P>The data frame may then be read as </P>
<DIV class="example">
<PRE class="example">&gt; HousePrice &lt;- read.table("houses.data", header=TRUE)
</PRE></DIV>
<P>where the <CODE>header=TRUE</CODE> option specifies that the first line is a
 line of headings, and hence, by implication from the form of the file, that no 
explicit row labels are given. </P>
<TABLE class="menu" border="0" cellspacing="0" summary="">
  <TBODY>
  <TR>
    <TD align="left" valign="top">• <A accesskey="1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-scan_0028_0029-function">The 
      scan() function</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR></TBODY></TABLE>
<HR>
<A name="The-scan_0028_0029-function"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Accessing-builtin-datasets" 
rel="next">Accessing builtin datasets</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-read_002etable_0028_0029-function" 
rel="prev">The read.table() function</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Reading-data-from-files" 
rel="up">Reading data from files</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="The-scan_0028_0029-function-1"></A> 
<H3 class="section">7.2 The <CODE>scan()</CODE> function</H3><A name="index-scan"></A> 
<P>Suppose the data vectors are of equal length and are to be read in parallel.  
Further suppose that there are three vectors, the first of mode character and 
the remaining two of mode numeric, and the file is <SAMP>input.dat</SAMP>.  The 
first step is to use <CODE>scan()</CODE> to read in the three vectors as a list, 
as follows </P>
<DIV class="example">
<PRE class="example">&gt; inp &lt;- scan("input.dat", list("",0,0))
</PRE></DIV>
<P>The second argument is a dummy list structure that establishes the mode of 
the three vectors to be read.  The result, held in <CODE>inp</CODE>, is a list 
whose components are the three vectors read in.  To separate the data items into 
three separate vectors, use assignments like </P>
<DIV class="example">
<PRE class="example">&gt; label &lt;- inp[[1]]; x &lt;- inp[[2]]; y &lt;- inp[[3]]
</PRE></DIV>
<P>More conveniently, the dummy list can have named components, in which case 
the names can be used to access the vectors read in.  For example </P>
<DIV class="example">
<PRE class="example">&gt; inp &lt;- scan("input.dat", list(id="", x=0, y=0))
</PRE></DIV>
<P>If you wish to access the variables separately they may either be re-assigned 
to variables in the working frame: </P>
<DIV class="example">
<PRE class="example">&gt; label &lt;- inp$id; x &lt;- inp$x; y &lt;- inp$y
</PRE></DIV>
<P>or the list may be attached at position&nbsp;2<!-- /@w --> of the search path
 (see <A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Attaching-arbitrary-lists">Attaching 
arbitrary lists</A>). </P>
<P>If the second argument is a single value and not a list, a single vector is 
read in, all components of which must be of the same mode as the dummy value. 
</P>
<DIV class="example">
<PRE class="example">&gt; X &lt;- matrix(scan("light.dat", 0), ncol=5, byrow=TRUE)
</PRE></DIV>
<P>There are more elaborate input facilities available and these are detailed in 
the manuals. </P>
<HR>
<A name="Accessing-builtin-datasets"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Editing-data" 
rel="next">Editing data</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-scan_0028_0029-function" 
rel="prev">The scan() function</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Reading-data-from-files" 
rel="up">Reading data from files</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Accessing-builtin-datasets-1"></A> 
<H3 class="section">7.3 Accessing builtin datasets</H3><A name="index-Accessing-builtin-datasets"></A> 
<A name="index-data"></A> 
<P>Around 100 datasets are supplied with R (in package 
<STRONG>datasets</STRONG>), and others are available in packages (including the 
recommended packages supplied with R).  To see the list of datasets currently 
available use </P>
<DIV class="example">
<PRE class="example">data()
</PRE></DIV>
<P>All the datasets supplied with R are available directly by name. However, 
many packages still use the obsolete convention in which <CODE>data</CODE> was 
also used to load datasets into R, for example </P>
<DIV class="example">
<PRE class="example">data(infert)
</PRE></DIV>
<P>and this can still be used with the standard packages (as in this example).  
In most cases this will load an R object of the same name. However, in a few 
cases it loads several objects, so see the on-line help for the object to see 
what to expect. </P><A name="Loading-data-from-other-R-packages"></A> 
<H4 class="subsection">7.3.1 Loading data from other R packages</H4>
<P>To access data from a particular package, use the <CODE>package</CODE>
 argument, for example </P>
<DIV class="example">
<PRE class="example">data(package="rpart")
data(Puromycin, package="datasets")
</PRE></DIV>
<P>If a package has been attached by <CODE>library</CODE>, its datasets are
 automatically included in the search. </P>
<P>User-contributed packages can be a rich source of datasets. </P>
<HR>
<A name="Editing-data"></A> 
<DIV class="header">
<P>Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Accessing-builtin-datasets" 
rel="prev">Accessing builtin datasets</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Reading-data-from-files" 
rel="up">Reading data from files</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Editing-data-1"></A> 
<H3 class="section">7.4 Editing data</H3><A name="index-edit"></A> 
<P>When invoked on a data frame or matrix, <CODE>edit</CODE> brings up a 
separate spreadsheet-like environment for editing.  This is useful for making
 small changes once a data set has been read.  The command </P>
<DIV class="example">
<PRE class="example">&gt; xnew &lt;- edit(xold)
</PRE></DIV>
<P>will allow you to edit your data set <CODE>xold</CODE>, and on completion the
 changed object is assigned to <CODE>xnew</CODE>.  If you want to alter the
 original dataset <CODE>xold</CODE>, the simplest way is to use 
<CODE>fix(xold)</CODE>, which is equivalent to <CODE>xold &lt;- 
edit(xold)</CODE>. </P>
<P>Use </P>
<DIV class="example">
<PRE class="example">&gt; xnew &lt;- edit(data.frame())
</PRE></DIV>
<P>to enter new data via the spreadsheet interface. </P>
<HR>
<A name="Probability-distributions"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Loops-and-conditional-execution" 
rel="next">Loops and conditional execution</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Reading-data-from-files" 
rel="prev">Reading data from files</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Top" 
rel="up">Top</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Probability-distributions-1"></A> 
<H2 class="chapter">8 Probability distributions</H2><A name="index-Probability-distributions"></A> 
<TABLE class="menu" border="0" cellspacing="0" summary="">
  <TBODY>
  <TR>
    <TD align="left" valign="top">• <A accesskey="1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#R-as-a-set-of-statistical-tables">R 
      as a set of statistical tables</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="2" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Examining-the-distribution-of-a-set-of-data">Examining 
      the distribution of a set of data</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="3" href="http://127.0.0.1:29225/doc/manual/R-intro.html#One_002d-and-two_002dsample-tests">One- 
      and two-sample tests</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR></TBODY></TABLE>
<HR>
<A name="R-as-a-set-of-statistical-tables"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Examining-the-distribution-of-a-set-of-data" 
rel="next">Examining the distribution of a set of data</A>, Previous: <A 
accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Probability-distributions" 
rel="prev">Probability distributions</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Probability-distributions" 
rel="up">Probability distributions</A> &nbsp; [<A title="Table of contents" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" rel="contents">Contents</A>][<A 
title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A 
name="R-as-a-set-of-statistical-tables-1"></A> 
<H3 class="section">8.1 R as a set of statistical tables</H3>
<P>One convenient use of R is to provide a comprehensive set of statistical 
tables.  Functions are provided to evaluate the cumulative distribution function 
P(X &lt;= x), the probability density function and the quantile function (given 
<EM>q</EM>, the smallest <EM>x</EM> such that P(X &lt;= x) &gt; q), and to 
simulate from the distribution. </P>
<BLOCKQUOTE>
  <TABLE summary="">
    <THEAD>
    <TR>
      <TH>Distribution</TH>
      <TH>R name</TH>
      <TH>additional arguments</TH></TR></THEAD>
    <TBODY>
    <TR>
      <TD>beta</TD>
      <TD><CODE>beta</CODE></TD>
      <TD><CODE>shape1, shape2, ncp</CODE></TD></TR>
    <TR>
      <TD>binomial</TD>
      <TD><CODE>binom</CODE></TD>
      <TD><CODE>size, prob</CODE></TD></TR>
    <TR>
      <TD>Cauchy</TD>
      <TD><CODE>cauchy</CODE></TD>
      <TD><CODE>location, scale</CODE></TD></TR>
    <TR>
      <TD>chi-squared</TD>
      <TD><CODE>chisq</CODE></TD>
      <TD><CODE>df, ncp</CODE></TD></TR>
    <TR>
      <TD>exponential</TD>
      <TD><CODE>exp</CODE></TD>
      <TD><CODE>rate</CODE></TD></TR>
    <TR>
      <TD>F</TD>
      <TD><CODE>f</CODE></TD>
      <TD><CODE>df1, df2, ncp</CODE></TD></TR>
    <TR>
      <TD>gamma</TD>
      <TD><CODE>gamma</CODE></TD>
      <TD><CODE>shape, scale</CODE></TD></TR>
    <TR>
      <TD>geometric</TD>
      <TD><CODE>geom</CODE></TD>
      <TD><CODE>prob</CODE></TD></TR>
    <TR>
      <TD>hypergeometric</TD>
      <TD><CODE>hyper</CODE></TD>
      <TD><CODE>m, n, k</CODE></TD></TR>
    <TR>
      <TD>log-normal</TD>
      <TD><CODE>lnorm</CODE></TD>
      <TD><CODE>meanlog, sdlog</CODE></TD></TR>
    <TR>
      <TD>logistic</TD>
      <TD><CODE>logis</CODE></TD>
      <TD><CODE>location, scale</CODE></TD></TR>
    <TR>
      <TD>negative binomial</TD>
      <TD><CODE>nbinom</CODE></TD>
      <TD><CODE>size, prob</CODE></TD></TR>
    <TR>
      <TD>normal</TD>
      <TD><CODE>norm</CODE></TD>
      <TD><CODE>mean, sd</CODE></TD></TR>
    <TR>
      <TD>Poisson</TD>
      <TD><CODE>pois</CODE></TD>
      <TD><CODE>lambda</CODE></TD></TR>
    <TR>
      <TD>signed rank</TD>
      <TD><CODE>signrank</CODE></TD>
      <TD><CODE>n</CODE></TD></TR>
    <TR>
      <TD>Student’s t</TD>
      <TD><CODE>t</CODE></TD>
      <TD><CODE>df, ncp</CODE></TD></TR>
    <TR>
      <TD>uniform</TD>
      <TD><CODE>unif</CODE></TD>
      <TD><CODE>min, max</CODE></TD></TR>
    <TR>
      <TD>Weibull</TD>
      <TD><CODE>weibull</CODE></TD>
      <TD><CODE>shape, scale</CODE></TD></TR>
    <TR>
      <TD>Wilcoxon</TD>
      <TD><CODE>wilcox</CODE></TD>
      <TD><CODE>m, n</CODE></TD></TR></TBODY></TABLE></BLOCKQUOTE>
<P>Prefix the name given here by ‘<SAMP>d</SAMP>’ for the density, 
‘<SAMP>p</SAMP>’ for the CDF, ‘<SAMP>q</SAMP>’ for the quantile function and 
‘<SAMP>r</SAMP>’ for simulation (<EM>r</EM>andom deviates).  The first argument 
is <CODE>x</CODE> for <CODE>d<VAR>xxx</VAR></CODE>, <CODE>q</CODE> for 
<CODE>p<VAR>xxx</VAR></CODE>, <CODE>p</CODE> for <CODE>q<VAR>xxx</VAR></CODE> 
and <CODE>n</CODE> for <CODE>r<VAR>xxx</VAR></CODE> (except for 
<CODE>rhyper</CODE>, <CODE>rsignrank</CODE> and <CODE>rwilcox</CODE>, for which 
it is <CODE>nn</CODE>).  In not quite all cases is the non-centrality parameter 
<CODE>ncp</CODE> currently available: see the on-line help for details. </P>
<P>The <CODE>p<VAR>xxx</VAR></CODE> and <CODE>q<VAR>xxx</VAR></CODE> functions 
all have logical arguments <CODE>lower.tail</CODE> and <CODE>log.p</CODE> and 
the <CODE>d<VAR>xxx</VAR></CODE> ones have <CODE>log</CODE>.  This allows, e.g., 
getting the cumulative (or “integrated”) <EM>hazard</EM> function, H(t) = - 
log(1 - F(t)), by </P>
<DIV class="example">
<PRE class="example"> - p<VAR>xxx</VAR>(t, ..., lower.tail = FALSE, log.p = TRUE)
</PRE></DIV>
<P>or more accurate log-likelihoods (by <CODE>d<VAR>xxx</VAR>(..., log =
 TRUE)</CODE>), directly. </P>
<P>In addition there are functions <CODE>ptukey</CODE> and <CODE>qtukey</CODE> 
for the distribution of the studentized range of samples from a normal
 distribution, and <CODE>dmultinom</CODE> and <CODE>rmultinom</CODE> for the
 multinomial distribution. Further distributions are available in contributed 
packages, notably <A 
href="http://cran.r-project.org/package=SuppDists"><STRONG>SuppDists</STRONG></A>. 
</P>
<P>Here are some examples </P>
<DIV class="example">
<PRE class="example">&gt; ## <SPAN class="roman">2-tailed p-value for t distribution</SPAN>
&gt; 2*pt(-2.43, df = 13)
&gt; ## <SPAN class="roman">upper 1% point for an F(2, 7) distribution</SPAN>
&gt; qf(0.01, 2, 7, lower.tail = FALSE)
</PRE></DIV>
<P>See the on-line help on <CODE>RNG</CODE> for how random-number generation is
 done in R. </P>
<HR>
<A name="Examining-the-distribution-of-a-set-of-data"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#One_002d-and-two_002dsample-tests" 
rel="next">One- and two-sample tests</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#R-as-a-set-of-statistical-tables" 
rel="prev">R as a set of statistical tables</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Probability-distributions" 
rel="up">Probability distributions</A> &nbsp; [<A title="Table of contents" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" rel="contents">Contents</A>][<A 
title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Examining-the-distribution-of-a-set-of-data-1"></A> 
<H3 class="section">8.2 Examining the distribution of a set of data</H3>
<P>Given a (univariate) set of data we can examine its distribution in a large 
number of ways.  The simplest is to examine the numbers.  Two slightly different 
summaries are given by <CODE>summary</CODE> and <CODE>fivenum</CODE> <A name="index-summary"></A> 
<A name="index-fivenum"></A> and a display of the numbers by <CODE>stem</CODE> 
(a “stem and leaf” plot). <A name="index-stem"></A> </P>
<DIV class="example">
<PRE class="example">&gt; attach(faithful)
&gt; summary(eruptions)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
  1.600   2.163   4.000   3.488   4.454   5.100
&gt; fivenum(eruptions)
[1] 1.6000 2.1585 4.0000 4.4585 5.1000
&gt; stem(eruptions)

  The decimal point is 1 digit(s) to the left of the |

  16 | 070355555588
  18 | 000022233333335577777777888822335777888
  20 | 00002223378800035778
  22 | 0002335578023578
  24 | 00228
  26 | 23
  28 | 080
  30 | 7
  32 | 2337
  34 | 250077
  36 | 0000823577
  38 | 2333335582225577
  40 | 0000003357788888002233555577778
  42 | 03335555778800233333555577778
  44 | 02222335557780000000023333357778888
  46 | 0000233357700000023578
  48 | 00000022335800333
  50 | 0370
</PRE></DIV>
<P>A stem-and-leaf plot is like a histogram, and R has a function 
<CODE>hist</CODE> to plot histograms. <A name="index-hist"></A> </P>
<DIV class="example">
<PRE class="example">&gt; hist(eruptions)
## <SPAN class="roman">make the bins smaller, make a plot of density</SPAN>
&gt; hist(eruptions, seq(1.6, 5.2, 0.2), prob=TRUE)
&gt; lines(density(eruptions, bw=0.1))
&gt; rug(eruptions) # <SPAN class="roman">show the actual data points</SPAN>
</PRE></DIV><A 
name="index-density"></A> <A name="index-Density-estimation"></A> 
<P>More elegant density plots can be made by <CODE>density</CODE>, and we added 
a line produced by <CODE>density</CODE> in this example.  The bandwidth 
<CODE>bw</CODE> was chosen by trial-and-error as the default gives too much
 smoothing (it usually does for “interesting” densities).  (Better automated 
methods of bandwidth choice are available, and in this example <CODE>bw = 
"SJ"</CODE> gives a good result.) </P><IMG alt="images/hist" src="An%20Introduction%20to%20R_files/hist.png"> 
<P>We can plot the empirical cumulative distribution function by using the
 function <CODE>ecdf</CODE>. <A name="index-ecdf"></A> <A name="index-Empirical-CDFs"></A> 
</P>
<DIV class="example">
<PRE class="example">&gt; plot(ecdf(eruptions), do.points=FALSE, verticals=TRUE)
</PRE></DIV>
<P>This distribution is obviously far from any standard distribution. How about 
the right-hand mode, say eruptions of longer than 3 minutes? Let us fit a normal 
distribution and overlay the fitted CDF. </P>
<DIV class="example">
<PRE class="example">&gt; long &lt;- eruptions[eruptions &gt; 3]
&gt; plot(ecdf(long), do.points=FALSE, verticals=TRUE)
&gt; x &lt;- seq(3, 5.4, 0.01)
&gt; lines(x, pnorm(x, mean=mean(long), sd=sqrt(var(long))), lty=3)
</PRE></DIV><IMG 
alt="images/ecdf" src="An%20Introduction%20to%20R_files/ecdf.png"> 
<P>Quantile-quantile (Q-Q) plots can help us examine this more carefully. <A 
name="index-Quantile_002dquantile-plots"></A> <A name="index-qqnorm"></A> <A 
name="index-qqline"></A> </P>
<DIV class="example">
<PRE class="example">par(pty="s")       # arrange for a square figure region
qqnorm(long); qqline(long)
</PRE></DIV>
<P>which shows a reasonable fit but a shorter right tail than one would expect 
from a normal distribution.  Let us compare this with some simulated data from a 
<EM>t</EM> distribution </P><IMG alt="images/QQ" src="An%20Introduction%20to%20R_files/QQ.png"> 
<DIV class="example">
<PRE class="example">x &lt;- rt(250, df = 5)
qqnorm(x); qqline(x)
</PRE></DIV>
<P>which will usually (if it is a random sample) show longer tails than expected 
for a normal.  We can make a Q-Q plot against the generating distribution by 
</P>
<DIV class="example">
<PRE class="example">qqplot(qt(ppoints(250), df = 5), x, xlab = "Q-Q plot for t dsn")
qqline(x)
</PRE></DIV>
<P>Finally, we might want a more formal test of agreement with normality (or 
not).  R provides the Shapiro-Wilk test <A 
name="index-Shapiro_002dWilk-test"></A> <A name="index-shapiro_002etest"></A> 
</P>
<DIV class="example">
<PRE class="example">&gt; shapiro.test(long)

         Shapiro-Wilk normality test

data:  long
W = 0.9793, p-value = 0.01052
</PRE></DIV>
<P>and the Kolmogorov-Smirnov test <A 
name="index-Kolmogorov_002dSmirnov-test"></A> <A name="index-ks_002etest"></A> 
</P>
<DIV class="example">
<PRE class="example">&gt; ks.test(long, "pnorm", mean = mean(long), sd = sqrt(var(long)))

         One-sample Kolmogorov-Smirnov test

data:  long
D = 0.0661, p-value = 0.4284
alternative hypothesis: two.sided
</PRE></DIV>
<P>(Note that the distribution theory is not valid here as we have estimated the 
parameters of the normal distribution from the same sample.) </P>
<HR>
<A name="One_002d-and-two_002dsample-tests"></A> 
<DIV class="header">
<P>Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Examining-the-distribution-of-a-set-of-data" 
rel="prev">Examining the distribution of a set of data</A>, Up: <A accesskey="u" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#Probability-distributions" 
rel="up">Probability distributions</A> &nbsp; [<A title="Table of contents" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" rel="contents">Contents</A>][<A 
title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A 
name="One_002d-and-two_002dsample-tests-1"></A> 
<H3 class="section">8.3 One- and two-sample tests</H3><A name="index-One_002d-and-two_002dsample-tests"></A> 
<P>So far we have compared a single sample to a normal distribution.  A much 
more common operation is to compare aspects of two samples.  Note that in R, all 
“classical” tests including the ones used below are in package 
<STRONG>stats</STRONG> which is normally loaded. </P>
<P>Consider the following sets of data on the latent heat of the fusion of ice 
(<EM>cal/gm</EM>) from Rice (1995, p.490) </P>
<DIV class="example">
<PRE class="example">Method A: 79.98 80.04 80.02 80.04 80.03 80.03 80.04 79.97
          80.05 80.03 80.02 80.00 80.02
Method B: 80.02 79.94 79.98 79.97 79.97 80.03 79.95 79.97
</PRE></DIV>
<P>Boxplots provide a simple graphical comparison of the two samples. </P>
<DIV class="example">
<PRE class="example">A &lt;- scan()
79.98 80.04 80.02 80.04 80.03 80.03 80.04 79.97
80.05 80.03 80.02 80.00 80.02

B &lt;- scan()
80.02 79.94 79.98 79.97 79.97 80.03 79.95 79.97

boxplot(A, B)
</PRE></DIV><A 
name="index-boxplot"></A> <A name="index-Box-plots"></A> 
<P>which indicates that the first group tends to give higher results than the 
second. </P><IMG alt="images/ice" 
src="An%20Introduction%20to%20R_files/ice.png"> 
<P>To test for the equality of the means of the two examples, we can use an 
<EM>unpaired</EM> <EM>t</EM>-test by <A name="index-Student_0027s-t-test"></A> 
<A name="index-t_002etest"></A> </P>
<DIV class="example">
<PRE class="example">&gt; t.test(A, B)

         Welch Two Sample t-test

data:  A and B
t = 3.2499, df = 12.027, p-value = 0.00694
alternative hypothesis: true difference in means is not equal to 0
95 percent confidence interval:
 0.01385526 0.07018320
sample estimates:
mean of x mean of y
 80.02077  79.97875
</PRE></DIV>
<P>which does indicate a significant difference, assuming normality.  By default 
the R function does not assume equality of variances in the two samples (in 
contrast to the similar <SMALL>S-PLUS</SMALL> <CODE>t.test</CODE> function).  We 
can use the F test to test for equality in the variances, provided that the two 
samples are from normal populations. </P>
<DIV class="example">
<PRE class="example">&gt; var.test(A, B)

         F test to compare two variances

data:  A and B
F = 0.5837, num df = 12, denom df =  7, p-value = 0.3938
alternative hypothesis: true ratio of variances is not equal to 1
95 percent confidence interval:
 0.1251097 2.1052687
sample estimates:
ratio of variances
         0.5837405
</PRE></DIV><A 
name="index-var_002etest"></A> 
<P>which shows no evidence of a significant difference, and so we can use the 
classical <EM>t</EM>-test that assumes equality of the variances. </P>
<DIV class="example">
<PRE class="example">&gt; t.test(A, B, var.equal=TRUE)

         Two Sample t-test

data:  A and B
t = 3.4722, df = 19, p-value = 0.002551
alternative hypothesis: true difference in means is not equal to 0
95 percent confidence interval:
 0.01669058 0.06734788
sample estimates:
mean of x mean of y
 80.02077  79.97875
</PRE></DIV>
<P>All these tests assume normality of the two samples.  The two-sample Wilcoxon 
(or Mann-Whitney) test only assumes a common continuous distribution under the 
null hypothesis. </P><A name="index-Wilcoxon-test"></A> <A name="index-wilcox_002etest"></A> 
<DIV class="example">
<PRE class="example">&gt; wilcox.test(A, B)

         Wilcoxon rank sum test with continuity correction

data:  A and B
W = 89, p-value = 0.007497
alternative hypothesis: true location shift is not equal to 0

Warning message:
Cannot compute exact p-value with ties in: wilcox.test(A, B)
</PRE></DIV>
<P>Note the warning: there are several ties in each sample, which suggests
 strongly that these data are from a discrete distribution (probably due to 
rounding). </P>
<P>There are several ways to compare graphically the two samples.  We have
 already seen a pair of boxplots.  The following </P>
<DIV class="example">
<PRE class="example">&gt; plot(ecdf(A), do.points=FALSE, verticals=TRUE, xlim=range(A, B))
&gt; plot(ecdf(B), do.points=FALSE, verticals=TRUE, add=TRUE)
</PRE></DIV>
<P>will show the two empirical CDFs, and <CODE>qqplot</CODE> will perform a Q-Q
 plot of the two samples.  The Kolmogorov-Smirnov test is of the maximal
 vertical distance between the two ecdf’s, assuming a common continuous
 distribution: </P>
<DIV class="example">
<PRE class="example">&gt; ks.test(A, B)

         Two-sample Kolmogorov-Smirnov test

data:  A and B
D = 0.5962, p-value = 0.05919
alternative hypothesis: two-sided

Warning message:
cannot compute correct p-values with ties in: ks.test(A, B)
</PRE></DIV>
<HR>
<A name="Loops-and-conditional-execution"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Writing-your-own-functions" 
rel="next">Writing your own functions</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Probability-distributions" 
rel="prev">Probability distributions</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Top" 
rel="up">Top</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Grouping_002c-loops-and-conditional-execution"></A> 
<H2 class="chapter">9 Grouping, loops and conditional execution</H2><A name="index-Loops-and-conditional-execution"></A> 
<TABLE class="menu" border="0" cellspacing="0" summary="">
  <TBODY>
  <TR>
    <TD align="left" valign="top">• <A accesskey="1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Grouped-expressions">Grouped 
      expressions</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="2" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Control-statements">Control 
      statements</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR></TBODY></TABLE>
<HR>
<A name="Grouped-expressions"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Control-statements" 
rel="next">Control statements</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Loops-and-conditional-execution" 
rel="prev">Loops and conditional execution</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Loops-and-conditional-execution" 
rel="up">Loops and conditional execution</A> &nbsp; [<A title="Table of contents" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" rel="contents">Contents</A>][<A 
title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Grouped-expressions-1"></A> 
<H3 class="section">9.1 Grouped expressions</H3><A name="index-Grouped-expressions"></A> 
<P>R is an expression language in the sense that its only command type is a 
function or expression which returns a result.  Even an assignment is an 
expression whose result is the value assigned, and it may be used wherever any 
expression may be used; in particular multiple assignments are possible. </P>
<P>Commands may be grouped together in braces, <CODE>{<VAR>expr_1</VAR>; 
<VAR>…</VAR>; <VAR>expr_m</VAR>}</CODE>, in which case the value of the group is 
the result of the last expression in the group evaluated.  Since such a group is 
also an expression it may, for example, be itself included in parentheses and 
used a part of an even larger expression, and so on. </P>
<HR>
<A name="Control-statements"></A> 
<DIV class="header">
<P>Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Grouped-expressions" 
rel="prev">Grouped expressions</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Loops-and-conditional-execution" 
rel="up">Loops and conditional execution</A> &nbsp; [<A title="Table of contents" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" rel="contents">Contents</A>][<A 
title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Control-statements-1"></A> 
<H3 class="section">9.2 Control statements</H3><A name="index-Control-statements"></A> 
<TABLE class="menu" border="0" cellspacing="0" summary="">
  <TBODY>
  <TR>
    <TD align="left" valign="top">• <A accesskey="1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Conditional-execution">Conditional 
      execution</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="2" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Repetitive-execution">Repetitive 
      execution</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR></TBODY></TABLE>
<HR>
<A name="Conditional-execution"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Repetitive-execution" 
rel="next">Repetitive execution</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Control-statements" 
rel="prev">Control statements</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Control-statements" 
rel="up">Control statements</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Conditional-execution_003a-if-statements"></A> 
<H4 class="subsection">9.2.1 Conditional execution: <CODE>if</CODE> 
statements</H4><A name="index-if"></A> 
<P>The language has available a conditional construction of the form </P>
<DIV class="example">
<PRE class="example">&gt; if (<VAR>expr_1</VAR>) <VAR>expr_2</VAR> else <VAR>expr_3</VAR>
</PRE></DIV><A 
name="index-if-1"></A> <A name="index-else"></A> 
<P>where <VAR>expr_1</VAR> must evaluate to a single logical value and the
 result of the entire expression is then evident. </P><A 
name="index-_0026_0026"></A> <A name="index-_007c_007c"></A> 
<P>The “short-circuit” operators <CODE>&amp;&amp;</CODE> and <CODE>||</CODE> are 
often used as part of the condition in an <CODE>if</CODE> statement.  Whereas 
<CODE>&amp;</CODE> and <CODE>|</CODE> apply element-wise to vectors, 
<CODE>&amp;&amp;</CODE> and <CODE>||</CODE> apply to vectors of length one, and 
only evaluate their second argument if necessary. </P><A 
name="index-ifelse"></A> 
<P>There is a vectorized version of the <CODE>if</CODE>/<CODE>else</CODE> 
construct, the <CODE>ifelse</CODE> function.  This has the form 
<CODE>ifelse(condition, a, b)</CODE> and returns a vector of the length of its 
longest argument, with elements <CODE>a[i]</CODE> if <CODE>condition[i]</CODE> 
is true, otherwise <CODE>b[i]</CODE>. </P>
<HR>
<A name="Repetitive-execution"></A> 
<DIV class="header">
<P>Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Conditional-execution" 
rel="prev">Conditional execution</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Control-statements" 
rel="up">Control statements</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Repetitive-execution_003a-for-loops_002c-repeat-and-while"></A> 
<H4 class="subsection">9.2.2 Repetitive execution: <CODE>for</CODE> loops, 
<CODE>repeat</CODE> and <CODE>while</CODE></H4><A name="index-for"></A> 
<P>There is also a <CODE>for</CODE> loop construction which has the form </P>
<DIV class="example">
<PRE class="example">&gt; for (<CODE><VAR>name</VAR></CODE> in <VAR>expr_1</VAR>) <VAR>expr_2</VAR>
</PRE></DIV>
<P>where <CODE><VAR>name</VAR></CODE> is the loop variable.  <VAR>expr_1</VAR> 
is a vector expression, (often a sequence like <CODE>1:20</CODE>), and 
<VAR>expr_2</VAR> is often a grouped expression with its sub-expressions written 
in terms of the dummy <EM>name</EM>.  <VAR>expr_2</VAR> is repeatedly evaluated 
as <VAR>name</VAR> ranges through the values in the vector result of 
<VAR>expr_1</VAR>. </P>
<P>As an example, suppose <CODE>ind</CODE> is a vector of class indicators and 
we wish to produce separate plots of <CODE>y</CODE> versus <CODE>x</CODE> within
 classes.  One possibility here is to use <CODE>coplot()</CODE>,<A name="DOCF21" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#FOOT21"><SUP>21</SUP></A>
 which will produce an array of plots corresponding to each level of the factor. 
 Another way to do this, now putting all plots on the one display, is as 
follows: </P>
<DIV class="example">
<PRE class="example">&gt; xc &lt;- split(x, ind)
&gt; yc &lt;- split(y, ind)
&gt; for (i in 1:length(yc)) {
    plot(xc[[i]], yc[[i]])
    abline(lsfit(xc[[i]], yc[[i]]))
  }
</PRE></DIV><A 
name="index-split"></A> 
<P>(Note the function <CODE>split()</CODE> which produces a list of vectors
 obtained by splitting a larger vector according to the classes specified by a 
factor.  This is a useful function, mostly used in connection with boxplots.  
See the <CODE>help</CODE> facility for further details.) </P>
<BLOCKQUOTE>
  <P><STRONG>Warning</STRONG>: <CODE>for()</CODE> loops are used in R code much 
  less often than in compiled languages.  Code that takes a ‘whole object’ view
   is likely to be both clearer and faster in R. </P></BLOCKQUOTE>
<P>Other looping facilities include the </P>
<DIV class="example">
<PRE class="example">&gt; repeat <VAR>expr</VAR>
</PRE></DIV><A name="index-repeat"></A> 
<P>statement and the </P>
<DIV class="example">
<PRE class="example">&gt; while (<VAR>condition</VAR>) <VAR>expr</VAR>
</PRE></DIV><A 
name="index-while"></A> 
<P>statement. </P>
<P>The <CODE>break</CODE> statement can be used to terminate any loop, possibly
 abnormally.  This is the only way to terminate <CODE>repeat</CODE> loops. <A 
name="index-break"></A> </P>
<P>The <CODE>next</CODE> statement can be used to discontinue one particular
 cycle and skip to the “next”. <A name="index-next"></A> </P>
<P>Control statements are most often used in connection with <EM>functions</EM> 
which are discussed in <A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Writing-your-own-functions">Writing 
your own functions</A>, and where more examples will emerge. </P>
<HR>
<A name="Writing-your-own-functions"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Statistical-models-in-R" 
rel="next">Statistical models in R</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Loops-and-conditional-execution" 
rel="prev">Loops and conditional execution</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Top" 
rel="up">Top</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Writing-your-own-functions-1"></A> 
<H2 class="chapter">10 Writing your own functions</H2><A name="index-Writing-functions"></A> 
<P>As we have seen informally along the way, the R language allows the user to 
create objects of mode <EM>function</EM>.  These are true R functions that are 
stored in a special internal form and may be used in further expressions and so 
on.  In the process, the language gains enormously in power, convenience and 
elegance, and learning to write useful functions is one of the main ways to make 
your use of R comfortable and productive. </P>
<P>It should be emphasized that most of the functions supplied as part of the R 
system, such as <CODE>mean()</CODE>, <CODE>var()</CODE>, 
<CODE>postscript()</CODE> and so on, are themselves written in R and thus do not 
differ materially from user written functions. </P>
<P>A function is defined by an assignment of the form </P>
<DIV class="example">
<PRE class="example">&gt; <VAR>name</VAR> &lt;- function(<VAR>arg_1</VAR>, <VAR>arg_2</VAR>, …) <VAR>expression</VAR>
</PRE></DIV><A 
name="index-function"></A> 
<P>The <VAR>expression</VAR> is an R expression, (usually a grouped expression), 
that uses the arguments, <VAR>arg_i</VAR>, to calculate a value. The value of 
the expression is the value returned for the function. </P>
<P>A call to the function then usually takes the form 
<CODE><VAR>name</VAR>(<VAR>expr_1</VAR>, <VAR>expr_2</VAR>, …)</CODE> and may 
occur anywhere a function call is legitimate. </P>
<TABLE class="menu" border="0" cellspacing="0" summary="">
  <TBODY>
  <TR>
    <TD align="left" valign="top">• <A accesskey="1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Simple-examples">Simple 
      examples</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="2" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Defining-new-binary-operators">Defining 
      new binary operators</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="3" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Named-arguments-and-defaults">Named 
      arguments and defaults</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="4" href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-three-dots-argument">The 
      three dots argument</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="5" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Assignment-within-functions">Assignment 
      within functions</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="6" href="http://127.0.0.1:29225/doc/manual/R-intro.html#More-advanced-examples">More 
      advanced examples</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="7" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Scope">Scope</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="8" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Customizing-the-environment">Customizing 
      the environment</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="9" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Object-orientation">Object 
      orientation</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR></TBODY></TABLE>
<HR>
<A name="Simple-examples"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Defining-new-binary-operators" 
rel="next">Defining new binary operators</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Writing-your-own-functions" 
rel="prev">Writing your own functions</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Writing-your-own-functions" 
rel="up">Writing your own functions</A> &nbsp; [<A title="Table of contents" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" rel="contents">Contents</A>][<A 
title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Simple-examples-1"></A> 
<H3 class="section">10.1 Simple examples</H3>
<P>As a first example, consider a function to calculate the two sample 
<EM>t</EM>-statistic, showing “all the steps”.  This is an artificial example, 
of course, since there are other, simpler ways of achieving the same end. </P>
<P>The function is defined as follows: </P>
<DIV class="example">
<PRE class="example">&gt; twosam &lt;- function(y1, y2) {
    n1  &lt;- length(y1); n2  &lt;- length(y2)
    yb1 &lt;- mean(y1);   yb2 &lt;- mean(y2)
    s1  &lt;- var(y1);    s2  &lt;- var(y2)
    s &lt;- ((n1-1)*s1 + (n2-1)*s2)/(n1+n2-2)
    tst &lt;- (yb1 - yb2)/sqrt(s*(1/n1 + 1/n2))
    tst
  }
</PRE></DIV>
<P>With this function defined, you could perform two sample <EM>t</EM>-tests
 using a call such as </P>
<DIV class="example">
<PRE class="example">&gt; tstat &lt;- twosam(data$male, data$female); tstat
</PRE></DIV>
<P>As a second example, consider a function to emulate directly the 
<SMALL>MATLAB</SMALL> backslash command, which returns the coefficients of the
 orthogonal projection of the vector <EM>y</EM> onto the column space of the 
matrix, <EM>X</EM>.  (This is ordinarily called the least squares estimate of 
the regression coefficients.)  This would ordinarily be done with the 
<CODE>qr()</CODE> function; however this is sometimes a bit tricky to use 
directly and it pays to have a simple function such as the following to use it 
safely. </P>
<P>Thus given a <EM>n</EM> by <EM>1</EM> vector <EM>y</EM> and an <EM>n</EM> by 
<EM>p</EM> matrix <EM>X</EM> then <EM>X \ y</EM> is defined as (X’X)^{-}X’y, 
where (X’X)^{-} is a generalized inverse of <EM>X'X</EM>. </P>
<DIV class="example">
<PRE class="example">&gt; bslash &lt;- function(X, y) {
  X &lt;- qr(X)
  qr.coef(X, y)
}
</PRE></DIV>
<P>After this object is created it may be used in statements such as </P>
<DIV class="example">
<PRE class="example">&gt; regcoeff &lt;- bslash(Xmat, yvar)
</PRE></DIV>
<P>and so on. </P>
<P>The classical R function <CODE>lsfit()</CODE> does this job quite well, and
 more<A name="DOCF22" href="http://127.0.0.1:29225/doc/manual/R-intro.html#FOOT22"><SUP>22</SUP></A>. 
 It in turn uses the functions <CODE>qr()</CODE> and <CODE>qr.coef()</CODE> in 
the slightly counterintuitive way above to do this part of the calculation.  
Hence there is probably some value in having just this part isolated in a simple 
to use function if it is going to be in frequent use.  If so, we may wish to 
make it a matrix binary operator for even more convenient use. </P>
<HR>
<A name="Defining-new-binary-operators"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Named-arguments-and-defaults" 
rel="next">Named arguments and defaults</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Simple-examples" 
rel="prev">Simple examples</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Writing-your-own-functions" 
rel="up">Writing your own functions</A> &nbsp; [<A title="Table of contents" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" rel="contents">Contents</A>][<A 
title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Defining-new-binary-operators-1"></A> 
<H3 class="section">10.2 Defining new binary operators</H3><A name="index-Binary-operators"></A> 
<P>Had we given the <CODE>bslash()</CODE> function a different name, namely one 
of the form </P>
<DIV class="example">
<PRE class="example">%<VAR>anything</VAR>%
</PRE></DIV>
<P>it could have been used as a <EM>binary operator</EM> in expressions rather 
than in function form.  Suppose, for example, we choose <CODE>!</CODE> for the 
internal character.  The function definition would then start as </P>
<DIV class="example">
<PRE class="example">&gt; "%!%" &lt;- function(X, y) { … }
</PRE></DIV>
<P>(Note the use of quote marks.)  The function could then be used as <CODE>X 
%!% y</CODE>.  (The backslash symbol itself is not a convenient choice as it 
presents special problems in this context.) </P>
<P>The matrix multiplication operator, <CODE>%*%</CODE>, and the outer product
 matrix operator <CODE>%o%</CODE> are other examples of binary operators defined 
in this way. </P>
<HR>
<A name="Named-arguments-and-defaults"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-three-dots-argument" 
rel="next">The three dots argument</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Defining-new-binary-operators" 
rel="prev">Defining new binary operators</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Writing-your-own-functions" 
rel="up">Writing your own functions</A> &nbsp; [<A title="Table of contents" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" rel="contents">Contents</A>][<A 
title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Named-arguments-and-defaults-1"></A> 
<H3 class="section">10.3 Named arguments and defaults</H3><A name="index-Named-arguments"></A> 
<A name="index-Default-values"></A> 
<P>As first noted in <A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Generating-regular-sequences">Generating 
regular sequences</A>, if arguments to called functions are given in the 
“<CODE><VAR>name</VAR>=<VAR>object</VAR></CODE>” form, they may be given in any 
order.  Furthermore the argument sequence may begin in the unnamed, positional 
form, and specify named arguments after the positional arguments. </P>
<P>Thus if there is a function <CODE>fun1</CODE> defined by </P>
<DIV class="example">
<PRE class="example">&gt; fun1 &lt;- function(data, data.frame, graph, limit) {
    <SPAN class="roman">[function body omitted]</SPAN>
  }
</PRE></DIV>
<P>then the function may be invoked in several ways, for example </P>
<DIV class="example">
<PRE class="example">&gt; ans &lt;- fun1(d, df, TRUE, 20)
&gt; ans &lt;- fun1(d, df, graph=TRUE, limit=20)
&gt; ans &lt;- fun1(data=d, limit=20, graph=TRUE, data.frame=df)
</PRE></DIV>
<P>are all equivalent. </P>
<P>In many cases arguments can be given commonly appropriate default values, in 
which case they may be omitted altogether from the call when the defaults are 
appropriate.  For example, if <CODE>fun1</CODE> were defined as </P>
<DIV class="example">
<PRE class="example">&gt; fun1 &lt;- function(data, data.frame, graph=TRUE, limit=20) { … }
</PRE></DIV>
<P>it could be called as </P>
<DIV class="example">
<PRE class="example">&gt; ans &lt;- fun1(d, df)
</PRE></DIV>
<P>which is now equivalent to the three cases above, or as </P>
<DIV class="example">
<PRE class="example">&gt; ans &lt;- fun1(d, df, limit=10)
</PRE></DIV>
<P>which changes one of the defaults. </P>
<P>It is important to note that defaults may be arbitrary expressions, even
 involving other arguments to the same function; they are not restricted to be 
constants as in our simple example here. </P>
<HR>
<A name="The-three-dots-argument"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Assignment-within-functions" 
rel="next">Assignment within functions</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Named-arguments-and-defaults" 
rel="prev">Named arguments and defaults</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Writing-your-own-functions" 
rel="up">Writing your own functions</A> &nbsp; [<A title="Table of contents" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" rel="contents">Contents</A>][<A 
title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="The-_2026-argument"></A> 
<H3 class="section">10.4 The ‘<SAMP>…</SAMP>’ argument</H3>
<P>Another frequent requirement is to allow one function to pass on argument 
settings to another.  For example many graphics functions use the function 
<CODE>par()</CODE> and functions like <CODE>plot()</CODE> allow the user to pass 
on graphical parameters to <CODE>par()</CODE> to control the graphical output.  
(See <A href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-par_0028_0029-function">The 
par() function</A>, for more details on the <CODE>par()</CODE> function.)  This 
can be done by including an extra argument, literally ‘<SAMP>…</SAMP>’, of the 
function, which may then be passed on.  An outline example is given below. </P>
<DIV class="example">
<PRE class="example">fun1 &lt;- function(data, data.frame, graph=TRUE, limit=20, ...) {
  <SPAN class="roman">[omitted statements]</SPAN>
  if (graph)
    par(pch="*", ...)
  <SPAN class="roman">[more omissions]</SPAN>
}
</PRE></DIV>
<P>Less frequently, a function will need to refer to components of 
‘<SAMP>…</SAMP>’.  The expression <CODE>list(...)</CODE> evaluates all such
 arguments and returns them in a named list, while <CODE>..1</CODE>, 
<CODE>..2</CODE>, etc. evaluate them one at a time, with ‘<SAMP>..n</SAMP>’ 
returning the n’th unmatched argument. </P>
<HR>
<A name="Assignment-within-functions"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#More-advanced-examples" 
rel="next">More advanced examples</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-three-dots-argument" 
rel="prev">The three dots argument</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Writing-your-own-functions" 
rel="up">Writing your own functions</A> &nbsp; [<A title="Table of contents" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" rel="contents">Contents</A>][<A 
title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Assignments-within-functions"></A> 
<H3 class="section">10.5 Assignments within functions</H3>
<P>Note that <EM>any ordinary assignments done within the function are local and 
temporary and are lost after exit from the function</EM>.  Thus the assignment 
<CODE>X &lt;- qr(X)</CODE> does not affect the value of the argument in the 
calling program. </P>
<P>To understand completely the rules governing the scope of R assignments the 
reader needs to be familiar with the notion of an evaluation <EM>frame</EM>.  
This is a somewhat advanced, though hardly difficult, topic and is not covered 
further here. </P>
<P>If global and permanent assignments are intended within a function, then
 either the “superassignment” operator, <CODE>&lt;&lt;-</CODE> or the function 
<CODE>assign()</CODE> can be used.  See the <CODE>help</CODE> document for 
details. <SMALL>S-PLUS</SMALL> users should be aware that <CODE>&lt;&lt;-</CODE> 
has different semantics in R.  These are discussed further in <A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Scope">Scope</A>. 
</P>
<HR>
<A name="More-advanced-examples"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Scope" 
rel="next">Scope</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Assignment-within-functions" 
rel="prev">Assignment within functions</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Writing-your-own-functions" 
rel="up">Writing your own functions</A> &nbsp; [<A title="Table of contents" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" rel="contents">Contents</A>][<A 
title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="More-advanced-examples-1"></A> 
<H3 class="section">10.6 More advanced examples</H3>
<TABLE class="menu" border="0" cellspacing="0" summary="">
  <TBODY>
  <TR>
    <TD align="left" valign="top">• <A accesskey="1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Efficiency-factors-in-block-designs">Efficiency 
      factors in block designs</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="2" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Dropping-all-names-in-a-printed-array">Dropping 
      all names in a printed array</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="3" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Recursive-numerical-integration">Recursive 
      numerical integration</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR></TBODY></TABLE>
<HR>
<A name="Efficiency-factors-in-block-designs"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Dropping-all-names-in-a-printed-array" 
rel="next">Dropping all names in a printed array</A>, Previous: <A accesskey="p" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#More-advanced-examples" 
rel="prev">More advanced examples</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#More-advanced-examples" 
rel="up">More advanced examples</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A 
name="Efficiency-factors-in-block-designs-1"></A> 
<H4 class="subsection">10.6.1 Efficiency factors in block designs</H4>
<P>As a more complete, if a little pedestrian, example of a function, consider 
finding the efficiency factors for a block design.  (Some aspects of this 
problem have already been discussed in <A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Index-matrices">Index 
matrices</A>.) </P>
<P>A block design is defined by two factors, say <CODE>blocks</CODE> 
(<CODE>b</CODE> levels) and <CODE>varieties</CODE> (<CODE>v</CODE> levels).  If 
<EM>R</EM> and <EM>K</EM> are the <EM>v</EM> by <EM>v</EM> and <EM>b</EM> by 
<EM>b</EM> <EM>replications</EM> and <EM>block size</EM> matrices, respectively, 
and <EM>N</EM> is the <EM>b</EM> by <EM>v</EM> incidence matrix, then the
 efficiency factors are defined as the eigenvalues of the matrix E = I_v - 
R^{-1/2}N’K^{-1}NR^{-1/2} = I_v - A’A, where A = K^{-1/2}NR^{-1/2}. One way to 
write the function is given below. </P>
<DIV class="example">
<PRE class="example">&gt; bdeff &lt;- function(blocks, varieties) {
    blocks &lt;- as.factor(blocks)             # <SPAN class="roman">minor safety move</SPAN>
    b &lt;- length(levels(blocks))
    varieties &lt;- as.factor(varieties)       # <SPAN class="roman">minor safety move</SPAN>
    v &lt;- length(levels(varieties))
    K &lt;- as.vector(table(blocks))           # <SPAN class="roman">remove dim attr</SPAN>
    R &lt;- as.vector(table(varieties))        # <SPAN class="roman">remove dim attr</SPAN>
    N &lt;- table(blocks, varieties)
    A &lt;- 1/sqrt(K) * N * rep(1/sqrt(R), rep(b, v))
    sv &lt;- svd(A)
    list(eff=1 - sv$d^2, blockcv=sv$u, varietycv=sv$v)
}
</PRE></DIV>
<P>It is numerically slightly better to work with the singular value
 decomposition on this occasion rather than the eigenvalue routines. </P>
<P>The result of the function is a list giving not only the efficiency factors 
as the first component, but also the block and variety canonical contrasts, 
since sometimes these give additional useful qualitative information. </P>
<HR>
<A name="Dropping-all-names-in-a-printed-array"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Recursive-numerical-integration" 
rel="next">Recursive numerical integration</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Efficiency-factors-in-block-designs" 
rel="prev">Efficiency factors in block designs</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#More-advanced-examples" 
rel="up">More advanced examples</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Dropping-all-names-in-a-printed-array-1"></A> 
<H4 class="subsection">10.6.2 Dropping all names in a printed array</H4>
<P>For printing purposes with large matrices or arrays, it is often useful to 
print them in close block form without the array names or numbers. Removing the 
<CODE>dimnames</CODE> attribute will not achieve this effect, but rather the 
array must be given a <CODE>dimnames</CODE> attribute consisting of empty 
strings.  For example to print a matrix, <CODE>X</CODE> </P>
<DIV class="example">
<PRE class="example">&gt; temp &lt;- X
&gt; dimnames(temp) &lt;- list(rep("", nrow(X)), rep("", ncol(X)))
&gt; temp; rm(temp)
</PRE></DIV>
<P>This can be much more conveniently done using a function, 
<CODE>no.dimnames()</CODE>, shown below, as a “wrap around” to achieve the same 
result.  It also illustrates how some effective and useful user functions can be 
quite short. </P>
<DIV class="example">
<PRE class="example">no.dimnames &lt;- function(a) {
  ## <SPAN class="roman">Remove all dimension names from an array for compact printing.</SPAN>
  d &lt;- list()
  l &lt;- 0
  for(i in dim(a)) {
    d[[l &lt;- l + 1]] &lt;- rep("", i)
  }
  dimnames(a) &lt;- d
  a
}
</PRE></DIV>
<P>With this function defined, an array may be printed in close format using 
</P>
<DIV class="example">
<PRE class="example">&gt; no.dimnames(X)
</PRE></DIV>
<P>This is particularly useful for large integer arrays, where patterns are the 
real interest rather than the values. </P>
<HR>
<A name="Recursive-numerical-integration"></A> 
<DIV class="header">
<P>Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Dropping-all-names-in-a-printed-array" 
rel="prev">Dropping all names in a printed array</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#More-advanced-examples" 
rel="up">More advanced examples</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Recursive-numerical-integration-1"></A> 
<H4 class="subsection">10.6.3 Recursive numerical integration</H4>
<P>Functions may be recursive, and may themselves define functions within
 themselves.  Note, however, that such functions, or indeed variables, are not 
inherited by called functions in higher evaluation frames as they would be if 
they were on the search path. </P>
<P>The example below shows a naive way of performing one-dimensional numerical 
integration.  The integrand is evaluated at the end points of the range and in 
the middle.  If the one-panel trapezium rule answer is close enough to the two 
panel, then the latter is returned as the value. Otherwise the same process is 
recursively applied to each panel.  The result is an adaptive integration 
process that concentrates function evaluations in regions where the integrand is 
farthest from linear. There is, however, a heavy overhead, and the function is 
only competitive with other algorithms when the integrand is both smooth and
 very difficult to evaluate. </P>
<P>The example is also given partly as a little puzzle in R programming. </P>
<DIV class="example">
<PRE class="example">area &lt;- function(f, a, b, eps = 1.0e-06, lim = 10) {
  fun1 &lt;- function(f, a, b, fa, fb, a0, eps, lim, fun) {
    ## <SPAN class="roman">function ‘fun1’ is only visible inside ‘area’</SPAN>
    d &lt;- (a + b)/2
    h &lt;- (b - a)/4
    fd &lt;- f(d)
    a1 &lt;- h * (fa + fd)
    a2 &lt;- h * (fd + fb)
    if(abs(a0 - a1 - a2) &lt; eps || lim == 0)
      return(a1 + a2)
    else {
      return(fun(f, a, d, fa, fd, a1, eps, lim - 1, fun) +
             fun(f, d, b, fd, fb, a2, eps, lim - 1, fun))
    }
  }
  fa &lt;- f(a)
  fb &lt;- f(b)
  a0 &lt;- ((fa + fb) * (b - a))/2
  fun1(f, a, b, fa, fb, a0, eps, lim, fun1)
}
</PRE></DIV>
<TABLE class="menu" border="0" cellspacing="0" summary="">
  <TBODY>
  <TR>
    <TD align="left" valign="top">• <A accesskey="1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Scope">Scope</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="2" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Object-orientation">Object 
      orientation</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR></TBODY></TABLE>
<HR>
<A name="Scope"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Customizing-the-environment" 
rel="next">Customizing the environment</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#More-advanced-examples" 
rel="prev">More advanced examples</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Writing-your-own-functions" 
rel="up">Writing your own functions</A> &nbsp; [<A title="Table of contents" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" rel="contents">Contents</A>][<A 
title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Scope-1"></A> 
<H3 class="section">10.7 Scope</H3><A name="index-Scope"></A> 
<P>The discussion in this section is somewhat more technical than in other parts 
of this document.  However, it details one of the major differences between 
<SMALL>S-PLUS</SMALL> and R. </P>
<P>The symbols which occur in the body of a function can be divided into three 
classes; formal parameters, local variables and free variables. The formal 
parameters of a function are those occurring in the argument list of the 
function.  Their values are determined by the process of <EM>binding</EM> the 
actual function arguments to the formal parameters. Local variables are those 
whose values are determined by the evaluation of expressions in the body of the 
functions.  Variables which are not formal parameters or local variables are 
called free variables.  Free variables become local variables if they are 
assigned to.  Consider the following function definition. </P>
<DIV class="example">
<PRE class="example">f &lt;- function(x) {
  y &lt;- 2*x
  print(x)
  print(y)
  print(z)
}
</PRE></DIV>
<P>In this function, <CODE>x</CODE> is a formal parameter, <CODE>y</CODE> is a 
local variable and <CODE>z</CODE> is a free variable. </P>
<P>In R the free variable bindings are resolved by first looking in the
 environment in which the function was created.  This is called <EM>lexical 
scope</EM>.  First we define a function called <CODE>cube</CODE>. </P>
<DIV class="example">
<PRE class="example">cube &lt;- function(n) {
  sq &lt;- function() n*n
  n*sq()
}
</PRE></DIV>
<P>The variable <CODE>n</CODE> in the function <CODE>sq</CODE> is not an 
argument to that function.  Therefore it is a free variable and the scoping 
rules must be used to ascertain the value that is to be associated with it.  
Under static scope (<SMALL>S-PLUS</SMALL>) the value is that associated with a 
global variable named <CODE>n</CODE>.  Under lexical scope (R) it is the 
parameter to the function <CODE>cube</CODE> since that is the active binding for 
the variable <CODE>n</CODE> at the time the function <CODE>sq</CODE> was 
defined.  The difference between evaluation in R and evaluation in 
<SMALL>S-PLUS</SMALL> is that <SMALL>S-PLUS</SMALL> looks for a global variable 
called <CODE>n</CODE> while R first looks for a variable called <CODE>n</CODE> 
in the environment created when <CODE>cube</CODE> was invoked. </P>
<DIV class="example">
<PRE class="example">## <SPAN class="roman">first evaluation in S</SPAN>
S&gt; cube(2)
Error in sq(): Object "n" not found
Dumped
S&gt; n &lt;- 3
S&gt; cube(2)
[1] 18
## <SPAN class="roman">then the same function evaluated in R</SPAN>
R&gt; cube(2)
[1] 8
</PRE></DIV>
<P>Lexical scope can also be used to give functions <EM>mutable state</EM>. In 
the following example we show how R can be used to mimic a bank account.  A 
functioning bank account needs to have a balance or total, a function for making 
withdrawals, a function for making deposits and a function for stating the 
current balance.  We achieve this by creating the three functions within 
<CODE>account</CODE> and then returning a list containing them.  When 
<CODE>account</CODE> is invoked it takes a numerical argument <CODE>total</CODE> 
and returns a list containing the three functions. Because these functions are 
defined in an environment which contains <CODE>total</CODE>, they will have 
access to its value. </P>
<P>The special assignment operator, <CODE>&lt;&lt;-</CODE>, <A name="index-_003c_003c_002d"></A> 
is used to change the value associated with <CODE>total</CODE>.  This operator
 looks back in enclosing environments for an environment that contains the 
symbol <CODE>total</CODE> and when it finds such an environment it replaces the 
value, in that environment, with the value of right hand side.  If the global or 
top-level environment is reached without finding the symbol <CODE>total</CODE> 
then that variable is created and assigned to there.  For most users 
<CODE>&lt;&lt;-</CODE> creates a global variable and assigns the value of the 
right hand side to it<A name="DOCF23" href="http://127.0.0.1:29225/doc/manual/R-intro.html#FOOT23"><SUP>23</SUP></A>. 
 Only when <CODE>&lt;&lt;-</CODE> has been used in a function that was returned 
as the value of another function will the special behavior described here occur. 
</P>
<DIV class="example">
<PRE class="example">open.account &lt;- function(total) {
  list(
    deposit = function(amount) {
      if(amount &lt;= 0)
        stop("Deposits must be positive!\n")
      total &lt;&lt;- total + amount
      cat(amount, "deposited.  Your balance is", total, "\n\n")
    },
    withdraw = function(amount) {
      if(amount &gt; total)
        stop("You don't have that much money!\n")
      total &lt;&lt;- total - amount
      cat(amount, "withdrawn.  Your balance is", total, "\n\n")
    },
    balance = function() {
      cat("Your balance is", total, "\n\n")
    }
  )
}

ross &lt;- open.account(100)
robert &lt;- open.account(200)

ross$withdraw(30)
ross$balance()
robert$balance()

ross$deposit(50)
ross$balance()
ross$withdraw(500)
</PRE></DIV>
<HR>
<A name="Customizing-the-environment"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Object-orientation" 
rel="next">Object orientation</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Scope" 
rel="prev">Scope</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Writing-your-own-functions" 
rel="up">Writing your own functions</A> &nbsp; [<A title="Table of contents" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" rel="contents">Contents</A>][<A 
title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Customizing-the-environment-1"></A> 
<H3 class="section">10.8 Customizing the environment</H3><A name="index-Customizing-the-environment"></A> 
<P>Users can customize their environment in several different ways.  There is a 
site initialization file and every directory can have its own special 
initialization file.  Finally, the special functions <CODE>.First</CODE> and 
<CODE>.Last</CODE> can be used. </P>
<P>The location of the site initialization file is taken from the value of the 
<CODE>R_PROFILE</CODE> environment variable.  If that variable is unset, the 
file <SAMP>Rprofile.site</SAMP> in the R home subdirectory <SAMP>etc</SAMP> is
 used.  This file should contain the commands that you want to execute every 
time R is started under your system.  A second, personal, profile file named 
<SAMP>.Rprofile</SAMP><A name="DOCF24" href="http://127.0.0.1:29225/doc/manual/R-intro.html#FOOT24"><SUP>24</SUP></A> 
can be placed in any directory.  If R is invoked in that directory then that 
file will be sourced.  This file gives individual users control over their 
workspace and allows for different startup procedures in different working 
directories.  If no <SAMP>.Rprofile</SAMP> file is found in the startup 
directory, then R looks for a <SAMP>.Rprofile</SAMP> file in the user’s home 
directory and uses that (if it exists).  If the environment variable 
<CODE>R_PROFILE_USER</CODE> is set, the file it points to is used instead of the 
<SAMP>.Rprofile</SAMP> files. </P>
<P>Any function named <CODE>.First()</CODE> in either of the two profile files 
or in the <SAMP>.RData</SAMP> image has a special status.  It is automatically
 performed at the beginning of an R session and may be used to initialize the 
environment.  For example, the definition in the example below alters the prompt 
to <CODE>$</CODE> and sets up various other useful things that can then be taken 
for granted in the rest of the session. </P>
<P>Thus, the sequence in which files are executed is, 
<SAMP>Rprofile.site</SAMP>, the user profile, <SAMP>.RData</SAMP> and then 
<CODE>.First()</CODE>.  A definition in later files will mask definitions in 
earlier files. </P>
<DIV class="example">
<PRE class="example">&gt; .First &lt;- function() {
  options(prompt="$ ", continue="+\t")  # <SPAN class="roman"><CODE>$</CODE> is the prompt</SPAN>
  options(digits=5, length=999)         # <SPAN class="roman">custom numbers and printout</SPAN>
  x11()                                 # <SPAN class="roman">for graphics</SPAN>
  par(pch = "+")                        # <SPAN class="roman">plotting character</SPAN>
  source(file.path(Sys.getenv("HOME"), "R", "mystuff.R"))
                                        # <SPAN class="roman">my personal functions</SPAN>
  library(MASS)                         # <SPAN class="roman">attach a package</SPAN>
}
</PRE></DIV><A 
name="index-_002eFirst"></A> 
<P>Similarly a function <CODE>.Last()</CODE>, if defined, is (normally) executed
 at the very end of the session.  An example is given below. </P>
<DIV class="example">
<PRE class="example">&gt; .Last &lt;- function() {
  graphics.off()                        # <SPAN class="roman">a small safety measure.</SPAN>
  cat(paste(date(),"\nAdios\n"))        # <SPAN class="roman">Is it time for lunch?</SPAN>
}
</PRE></DIV><A 
name="index-_002eLast"></A> 
<HR>
<A name="Object-orientation"></A> 
<DIV class="header">
<P>Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Customizing-the-environment" 
rel="prev">Customizing the environment</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Writing-your-own-functions" 
rel="up">Writing your own functions</A> &nbsp; [<A title="Table of contents" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" rel="contents">Contents</A>][<A 
title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Classes_002c-generic-functions-and-object-orientation"></A> 
<H3 class="section">10.9 Classes, generic functions and object 
orientation</H3><A name="index-Classes-1"></A> <A 
name="index-Generic-functions"></A> <A name="index-Object-orientation"></A> 
<P>The class of an object determines how it will be treated by what are known as 
<EM>generic</EM> functions.  Put the other way round, a generic function 
performs a task or action on its arguments <EM>specific to the class of the 
argument itself</EM>.  If the argument lacks any <CODE>class</CODE> attribute, 
or has a class not catered for specifically by the generic function in question, 
there is always a <EM>default action</EM> provided. </P>
<P>An example makes things clearer.  The class mechanism offers the user the 
facility of designing and writing generic functions for special purposes.  Among 
the other generic functions are <CODE>plot()</CODE> for displaying objects 
graphically, <CODE>summary()</CODE> for summarizing analyses of various types, 
and <CODE>anova()</CODE> for comparing statistical models. </P>
<P>The number of generic functions that can treat a class in a specific way can 
be quite large.  For example, the functions that can accommodate in some fashion 
objects of class <CODE>"data.frame"</CODE> include </P>
<DIV class="example">
<PRE class="example">[     [[&lt;-    any    as.matrix
[&lt;-   mean    plot   summary
</PRE></DIV><A 
name="index-methods"></A> 
<P>A currently complete list can be got by using the <CODE>methods()</CODE>
 function: </P>
<DIV class="example">
<PRE class="example">&gt; methods(class="data.frame")
</PRE></DIV>
<P>Conversely the number of classes a generic function can handle can also be 
quite large.  For example the <CODE>plot()</CODE> function has a default method 
and variants for objects of classes <CODE>"data.frame"</CODE>, 
<CODE>"density"</CODE>, <CODE>"factor"</CODE>, and more.  A complete list can be 
got again by using the <CODE>methods()</CODE> function: </P>
<DIV class="example">
<PRE class="example">&gt; methods(plot)
</PRE></DIV>
<P>For many generic functions the function body is quite short, for example </P>
<DIV class="example">
<PRE class="example">&gt; coef
function (object, ...)
UseMethod("coef")
</PRE></DIV>
<P>The presence of <CODE>UseMethod</CODE> indicates this is a generic function.
 To see what methods are available we can use <CODE>methods()</CODE> </P>
<DIV class="example">
<PRE class="example">&gt; methods(coef)
[1] coef.aov*         coef.Arima*       coef.default*     coef.listof*
[5] coef.nls*         coef.summary.nls*

   Non-visible functions are asterisked
</PRE></DIV>
<P>In this example there are six methods, none of which can be seen by typing 
its name.  We can read these by either of </P><A name="index-getAnywhere"></A> 
<A name="index-getS3method"></A> 
<DIV class="example">
<PRE class="example">&gt; getAnywhere("coef.aov")
A single object matching ‘coef.aov’ was found
It was found in the following places
  registered S3 method for coef from namespace stats
  namespace:stats
with value

function (object, ...)
{
    z &lt;- object$coef
    z[!is.na(z)]
}

&gt; getS3method("coef", "aov")
function (object, ...)
{
    z &lt;- object$coef
    z[!is.na(z)]
}
</PRE></DIV>
<P>A function named <CODE><VAR>gen</VAR>.<VAR>cl</VAR></CODE> will be invoked by 
the generic <CODE><VAR>gen</VAR></CODE> for class <CODE><VAR>cl</VAR></CODE>, so 
do not name functions in this style unless they are intended to be methods. </P>
<P>The reader is referred to the <EM>R Language Definition</EM> for a more
 complete discussion of this mechanism. </P>
<HR>
<A name="Statistical-models-in-R"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Graphics" 
rel="next">Graphics</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Writing-your-own-functions" 
rel="prev">Writing your own functions</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Top" 
rel="up">Top</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Statistical-models-in-R-1"></A> 
<H2 class="chapter">11 Statistical models in R</H2><A name="index-Statistical-models"></A> 
<P>This section presumes the reader has some familiarity with statistical
 methodology, in particular with regression analysis and the analysis of
 variance.  Later we make some rather more ambitious presumptions, namely that 
something is known about generalized linear models and nonlinear regression. 
</P>
<P>The requirements for fitting statistical models are sufficiently well defined 
to make it possible to construct general tools that apply in a broad spectrum of 
problems. </P>
<P>R provides an interlocking suite of facilities that make fitting statistical 
models very simple.  As we mention in the introduction, the basic output is 
minimal, and one needs to ask for the details by calling extractor functions. 
</P>
<TABLE class="menu" border="0" cellspacing="0" summary="">
  <TBODY>
  <TR>
    <TD align="left" valign="top">• <A accesskey="1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Formulae-for-statistical-models">Formulae 
      for statistical models</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="2" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Linear-models">Linear 
      models</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="3" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Generic-functions-for-extracting-model-information">Generic 
      functions for extracting model information</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="4" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Analysis-of-variance-and-model-comparison">Analysis 
      of variance and model comparison</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="5" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Updating-fitted-models">Updating 
      fitted models</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="6" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Generalized-linear-models">Generalized 
      linear models</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="7" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Nonlinear-least-squares-and-maximum-likelihood-models">Nonlinear 
      least squares and maximum likelihood models</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="8" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Some-non_002dstandard-models">Some 
      non-standard models</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR></TBODY></TABLE>
<HR>
<A name="Formulae-for-statistical-models"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Linear-models" 
rel="next">Linear models</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Statistical-models-in-R" 
rel="prev">Statistical models in R</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Statistical-models-in-R" 
rel="up">Statistical models in R</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Defining-statistical-models_003b-formulae"></A> 
<H3 class="section">11.1 Defining statistical models; formulae</H3><A name="index-Formulae"></A> 
<P>The template for a statistical model is a linear regression model with
 independent, homoscedastic errors </P>
<DIV class="display">
<PRE class="display">y_i = sum_{j=0}^p beta_j x_{ij} + e_i, &nbsp;&nbsp;&nbsp;&nbsp;i = 1, …, n,
</PRE></DIV>
<P>where the e_i are NID(0, sigma^2). In matrix terms this would be written </P>
<DIV class="display">
<PRE class="display">y = X &nbsp;beta + e
</PRE></DIV>
<P>where the <EM>y</EM> is the response vector, <EM>X</EM> is the <EM>model
 matrix</EM> or <EM>design matrix</EM> and has columns <EM>x_0, x_1, …, 
x_p</EM>, the determining variables.  Very often <EM>x_0</EM> will be a column 
of ones defining an <EM>intercept</EM> term. </P><A name="Examples"></A> 
<H4 class="subsubheading">Examples</H4>
<P>Before giving a formal specification, a few examples may usefully set the 
picture. </P>
<P>Suppose <CODE>y</CODE>, <CODE>x</CODE>, <CODE>x0</CODE>, <CODE>x1</CODE>, 
<CODE>x2</CODE>, … are numeric variables, <CODE>X</CODE> is a matrix and 
<CODE>A</CODE>, <CODE>B</CODE>, <CODE>C</CODE>, … are factors.  The following 
formulae on the left side below specify statistical models as described on the 
right. </P>
<DL compact="compact">
  <DT><CODE>y ~ x</CODE></DT>
  <DT><CODE>y ~ 1 + x</CODE></DT>
  <DD>
  <P>Both imply the same simple linear regression model of <EM>y</EM> on 
  <EM>x</EM>.  The first has an implicit intercept term, and the second an
   explicit one. </P></DD>
  <DT><CODE>y ~ 0 + x</CODE></DT>
  <DT><CODE>y ~ -1 + x</CODE></DT>
  <DT><CODE>y ~ x - 1</CODE></DT>
  <DD>
  <P>Simple linear regression of <EM>y</EM> on <EM>x</EM> through the origin
   (that is, without an intercept term). </P></DD>
  <DT><CODE>log(y) ~ x1 + x2</CODE></DT>
  <DD>
  <P>Multiple regression of the transformed variable, log(y), on <EM>x1</EM> and 
  <EM>x2</EM> (with an implicit intercept term). </P></DD>
  <DT><CODE>y ~ poly(x,2)</CODE></DT>
  <DT><CODE>y ~ 1 + x + I(x^2)</CODE></DT>
  <DD>
  <P>Polynomial regression of <EM>y</EM> on <EM>x</EM> of degree 2.  The first
   form uses orthogonal polynomials, and the second uses explicit powers, as 
  basis. </P></DD>
  <DT><CODE>y ~ X + poly(x,2)</CODE></DT>
  <DD>
  <P>Multiple regression <EM>y</EM> with model matrix consisting of the matrix 
  <EM>X</EM> as well as polynomial terms in <EM>x</EM> to degree 2. </P></DD>
  <DT><CODE>y ~ A</CODE></DT>
  <DD>
  <P>Single classification analysis of variance model of <EM>y</EM>, with
   classes determined by <EM>A</EM>. </P></DD>
  <DT><CODE>y ~ A + x</CODE></DT>
  <DD>
  <P>Single classification analysis of covariance model of <EM>y</EM>, with
   classes determined by <EM>A</EM>, and with covariate <EM>x</EM>. </P></DD>
  <DT><CODE>y ~ A*B</CODE></DT>
  <DT><CODE>y ~ A + B + A:B</CODE></DT>
  <DT><CODE>y ~ B %in% A</CODE></DT>
  <DT><CODE>y ~ A/B</CODE></DT>
  <DD>
  <P>Two factor non-additive model of <EM>y</EM> on <EM>A</EM> and <EM>B</EM>.  
  The first two specify the same crossed classification and the second two
   specify the same nested classification.  In abstract terms all four specify 
  the same model subspace. </P></DD>
  <DT><CODE>y ~ (A + B + C)^2</CODE></DT>
  <DT><CODE>y ~ A*B*C - A:B:C</CODE></DT>
  <DD>
  <P>Three factor experiment but with a model containing main effects and two
   factor interactions only.  Both formulae specify the same model. </P></DD>
  <DT><CODE>y ~ A * x</CODE></DT>
  <DT><CODE>y ~ A/x</CODE></DT>
  <DT><CODE>y ~ A/(1 + x) - 1</CODE></DT>
  <DD>
  <P>Separate simple linear regression models of <EM>y</EM> on <EM>x</EM> within
   the levels of <EM>A</EM>, with different codings.  The last form produces
   explicit estimates of as many different intercepts and slopes as there are 
  levels in <EM>A</EM>. </P></DD>
  <DT><CODE>y ~ A*B + Error(C)</CODE></DT>
  <DD>
  <P>An experiment with two treatment factors, <EM>A</EM> and <EM>B</EM>, and
   error strata determined by factor <EM>C</EM>.  For example a split plot
   experiment, with whole plots (and hence also subplots), determined by factor 
  <EM>C</EM>. </P></DD></DL><A name="index-_007e"></A> 
<P>The operator <CODE>~</CODE> is used to define a <EM>model formula</EM> in R.
 The form, for an ordinary linear model, is </P>
<DIV class="example">
<PRE class="example"><VAR>response</VAR> ~ <VAR>op_1</VAR> <VAR>term_1</VAR> <VAR>op_2</VAR> <VAR>term_2</VAR> <VAR>op_3</VAR> <VAR>term_3</VAR> <VAR>…</VAR>
</PRE></DIV>
<P>where </P>
<DL compact="compact">
  <DT><VAR>response</VAR></DT>
  <DD>
  <P>is a vector or matrix, (or expression evaluating to a vector or matrix)
   defining the response variable(s). </P></DD>
  <DT><VAR>op_i</VAR></DT>
  <DD>
  <P>is an operator, either <CODE>+</CODE> or <CODE>-</CODE>, implying the 
  inclusion or exclusion of a term in the model, (the first is optional). 
  </P></DD>
  <DT><VAR>term_i</VAR></DT>
  <DD>
  <P>is either </P>
  <UL>
    <LI> a vector or matrix expression, or <CODE>1</CODE>, </LI>
    <LI> a factor, or </LI>
    <LI> a <EM>formula expression</EM> consisting of factors, vectors or 
    matrices connected by <EM>formula operators</EM>. </LI></UL>
  <P>In all cases each term defines a collection of columns either to be added 
  to or removed from the model matrix.  A <CODE>1</CODE> stands for an intercept 
  column and is by default included in the model matrix unless explicitly 
  removed. </P></DD></DL>
<P>The <EM>formula operators</EM> are similar in effect to the Wilkinson and
 Rogers notation used by such programs as Glim and Genstat.  One inevitable 
change is that the operator ‘<SAMP><CODE>.</CODE></SAMP>’ becomes 
‘<SAMP><CODE>:</CODE></SAMP>’ since the period is a valid name character in R. 
</P>
<P>The notation is summarized below (based on Chambers &amp; Hastie, 1992,
 p.29): </P>
<DL compact="compact">
  <DT><CODE><VAR>Y</VAR> ~ <VAR>M</VAR></CODE></DT>
  <DD>
  <P><VAR>Y</VAR> is modeled as <VAR>M</VAR>. </P></DD>
  <DT><CODE><VAR>M_1</VAR> + <VAR>M_2</VAR></CODE></DT>
  <DD>
  <P>Include <VAR>M_1</VAR> and <VAR>M_2</VAR>. </P></DD>
  <DT><CODE><VAR>M_1</VAR> - <VAR>M_2</VAR></CODE></DT>
  <DD>
  <P>Include <VAR>M_1</VAR> leaving out terms of <VAR>M_2</VAR>. </P></DD>
  <DT><CODE><VAR>M_1</VAR> : <VAR>M_2</VAR></CODE></DT>
  <DD>
  <P>The tensor product of <VAR>M_1</VAR> and <VAR>M_2</VAR>.  If both terms are
   factors, then the “subclasses” factor. </P></DD>
  <DT><CODE><VAR>M_1</VAR> %in% <VAR>M_2</VAR></CODE></DT>
  <DD>
  <P>Similar to <CODE><VAR>M_1</VAR>:<VAR>M_2</VAR></CODE>, but with a different 
  coding. </P></DD>
  <DT><CODE><VAR>M_1</VAR> * <VAR>M_2</VAR></CODE></DT>
  <DD>
  <P><CODE><VAR>M_1</VAR> + <VAR>M_2</VAR> + 
  <VAR>M_1</VAR>:<VAR>M_2</VAR></CODE>. </P></DD>
  <DT><CODE><VAR>M_1</VAR> / <VAR>M_2</VAR></CODE></DT>
  <DD>
  <P><CODE><VAR>M_1</VAR> + <VAR>M_2</VAR> %in% <VAR>M_1</VAR></CODE>. </P></DD>
  <DT><CODE><VAR>M</VAR>^<VAR>n</VAR></CODE></DT>
  <DD>
  <P>All terms in <VAR>M</VAR> together with “interactions” up to order 
  <VAR>n</VAR> </P></DD>
  <DT><CODE>I(<VAR>M</VAR>)</CODE></DT>
  <DD>
  <P>Insulate <VAR>M</VAR>.  Inside <VAR>M</VAR> all operators have their normal
   arithmetic meaning, and that term appears in the model matrix. </P></DD></DL>
<P>Note that inside the parentheses that usually enclose function arguments all 
operators have their normal arithmetic meaning.  The function <CODE>I()</CODE> 
is an identity function used to allow terms in model formulae to be defined 
using arithmetic operators. </P>
<P>Note particularly that the model formulae specify the <EM>columns of the 
model matrix</EM>, the specification of the parameters being implicit.  This is 
not the case in other contexts, for example in specifying nonlinear models. </P>
<TABLE class="menu" border="0" cellspacing="0" summary="">
  <TBODY>
  <TR>
    <TD align="left" valign="top">• <A accesskey="1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Contrasts">Contrasts</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR></TBODY></TABLE>
<HR>
<A name="Contrasts"></A> 
<DIV class="header">
<P>Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Formulae-for-statistical-models" 
rel="prev">Formulae for statistical models</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Formulae-for-statistical-models" 
rel="up">Formulae for statistical models</A> &nbsp; [<A title="Table of contents" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" rel="contents">Contents</A>][<A 
title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Contrasts-1"></A> 
<H4 class="subsection">11.1.1 Contrasts</H4><A name="index-Contrasts"></A> 
<P>We need at least some idea how the model formulae specify the columns of the 
model matrix.  This is easy if we have continuous variables, as each provides 
one column of the model matrix (and the intercept will provide a column of ones 
if included in the model). </P><A name="index-Factors-1"></A> <A name="index-Ordered-factors-1"></A> 
<P>What about a <EM>k</EM>-level factor <CODE>A</CODE>?  The answer differs for
 unordered and ordered factors.  For <EM>unordered</EM> factors <EM>k - 1</EM> 
columns are generated for the indicators of the second, …, <EM>k</EM>th levels 
of the factor. (Thus the implicit parameterization is to contrast the response 
at each level with that at the first.)  For <EM>ordered</EM> factors the <EM>k - 
1</EM> columns are the orthogonal polynomials on <EM>1, …, k</EM>, omitting the 
constant term. </P>
<P>Although the answer is already complicated, it is not the whole story. First, 
if the intercept is omitted in a model that contains a factor term, the first 
such term is encoded into <EM>k</EM> columns giving the indicators for all the 
levels.  Second, the whole behavior can be changed by the <CODE>options</CODE> 
setting for <CODE>contrasts</CODE>.  The default setting in R is </P>
<DIV class="example">
<PRE class="example">options(contrasts = c("contr.treatment", "contr.poly"))
</PRE></DIV>
<P>The main reason for mentioning this is that R and S have different defaults 
for unordered factors, S using Helmert contrasts.  So if you need to compare 
your results to those of a textbook or paper which used <SMALL>S-PLUS</SMALL>, 
you will need to set </P>
<DIV class="example">
<PRE class="example">options(contrasts = c("contr.helmert", "contr.poly"))
</PRE></DIV>
<P>This is a deliberate difference, as treatment contrasts (R’s default) are 
thought easier for newcomers to interpret. </P>
<P>We have still not finished, as the contrast scheme to be used can be set for 
each term in the model using the functions <CODE>contrasts</CODE> and 
<CODE>C</CODE>. <A name="index-contrasts"></A> <A name="index-C"></A> </P>
<P>We have not yet considered interaction terms: these generate the products of 
the columns introduced for their component terms. </P>
<P>Although the details are complicated, model formulae in R will normally 
generate the models that an expert statistician would expect, provided that 
marginality is preserved.  Fitting, for example, a model with an interaction but 
not the corresponding main effects will in general lead to surprising results, 
and is for experts only. </P>
<HR>
<A name="Linear-models"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Generic-functions-for-extracting-model-information" 
rel="next">Generic functions for extracting model information</A>, Previous: <A 
accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Formulae-for-statistical-models" 
rel="prev">Formulae for statistical models</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Statistical-models-in-R" 
rel="up">Statistical models in R</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Linear-models-1"></A> 
<H3 class="section">11.2 Linear models</H3><A name="index-Linear-models"></A> 
<P>The basic function for fitting ordinary multiple models is <CODE>lm()</CODE>,
 and a streamlined version of the call is as follows: <A name="index-lm"></A> 
</P>
<DIV class="example">
<PRE class="example">&gt; <VAR>fitted.model</VAR> &lt;- lm(<VAR>formula</VAR>, data = <VAR>data.frame</VAR>)
</PRE></DIV>
<P>For example </P>
<DIV class="example">
<PRE class="example">&gt; fm2 &lt;- lm(y ~ x1 + x2, data = production)
</PRE></DIV>
<P>would fit a multiple regression model of <EM>y</EM> on <EM>x1</EM> and 
<EM>x2</EM> (with implicit intercept term). </P>
<P>The important (but technically optional) parameter <CODE>data =
 production</CODE> specifies that any variables needed to construct the model
 should come first from the <CODE>production</CODE> <EM>data frame</EM>. 
<EM>This is the case regardless of whether data frame <CODE>production</CODE> 
has been attached on the search path or not</EM>. </P>
<HR>
<A name="Generic-functions-for-extracting-model-information"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Analysis-of-variance-and-model-comparison" 
rel="next">Analysis of variance and model comparison</A>, Previous: <A 
accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Linear-models" 
rel="prev">Linear models</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Statistical-models-in-R" 
rel="up">Statistical models in R</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Generic-functions-for-extracting-model-information-1"></A> 
<H3 class="section">11.3 Generic functions for extracting model information</H3>
<P>The value of <CODE>lm()</CODE> is a fitted model object; technically a list 
of results of class <CODE>"lm"</CODE>.  Information about the fitted model can
 then be displayed, extracted, plotted and so on by using generic functions that 
orient themselves to objects of class <CODE>"lm"</CODE>.  These include </P>
<DIV class="example">
<PRE class="example">add1    deviance   formula      predict  step
alias   drop1      kappa        print    summary
anova   effects    labels       proj     vcov
coef    family     plot         residuals
</PRE></DIV>
<P>A brief description of the most commonly used ones is given below. </P>
<DL compact="compact">
  <DD><A name="index-anova"></A> </DD>
  <DT><CODE>anova(<VAR>object_1</VAR>, <VAR>object_2</VAR>)</CODE></DT>
  <DD>
  <P>Compare a submodel with an outer model and produce an analysis of variance 
  table. </P><A name="index-coefficients"></A> <A name="index-coef"></A> </DD>
  <DT><CODE>coef(<VAR>object</VAR>)</CODE></DT>
  <DD>
  <P>Extract the regression coefficient (matrix). </P>
  <P>Long form: <CODE>coefficients(<VAR>object</VAR>)</CODE>. </P><A name="index-deviance"></A> 
  </DD>
  <DT><CODE>deviance(<VAR>object</VAR>)</CODE></DT>
  <DD>
  <P>Residual sum of squares, weighted if appropriate. </P><A name="index-formula"></A> 
  </DD>
  <DT><CODE>formula(<VAR>object</VAR>)</CODE></DT>
  <DD>
  <P>Extract the model formula. </P><A name="index-plot"></A> </DD>
  <DT><CODE>plot(<VAR>object</VAR>)</CODE></DT>
  <DD>
  <P>Produce four plots, showing residuals, fitted values and some diagnostics. 
  </P><A name="index-predict"></A> </DD>
  <DT><CODE>predict(<VAR>object</VAR>, 
newdata=<VAR>data.frame</VAR>)</CODE></DT>
  <DD>
  <P>The data frame supplied must have variables specified with the same labels 
  as the original.  The value is a vector or matrix of predicted values 
  corresponding to the determining variable values in <VAR>data.frame</VAR>. 
  </P><A name="index-print"></A> </DD>
  <DT><CODE>print(<VAR>object</VAR>)</CODE></DT>
  <DD>
  <P>Print a concise version of the object.  Most often used implicitly. </P><A 
  name="index-residuals"></A> <A name="index-resid"></A> </DD>
  <DT><CODE>residuals(<VAR>object</VAR>)</CODE></DT>
  <DD>
  <P>Extract the (matrix of) residuals, weighted as appropriate. </P>
  <P>Short form: <CODE>resid(<VAR>object</VAR>)</CODE>. </P><A 
  name="index-step"></A> </DD>
  <DT><CODE>step(<VAR>object</VAR>)</CODE></DT>
  <DD>
  <P>Select a suitable model by adding or dropping terms and preserving
   hierarchies.  The model with the smallest value of AIC (Akaike’s An
   Information Criterion) discovered in the stepwise search is returned. </P><A 
  name="index-summary-1"></A> </DD>
  <DT><CODE>summary(<VAR>object</VAR>)</CODE></DT>
  <DD>
  <P>Print a comprehensive summary of the results of the regression analysis. 
  </P><A name="index-vcov"></A> </DD>
  <DT><CODE>vcov(<VAR>object</VAR>)</CODE></DT>
  <DD>
  <P>Returns the variance-covariance matrix of the main parameters of a fitted 
  model object. </P></DD></DL>
<HR>
<A name="Analysis-of-variance-and-model-comparison"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Updating-fitted-models" 
rel="next">Updating fitted models</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Generic-functions-for-extracting-model-information" 
rel="prev">Generic functions for extracting model information</A>, Up: <A 
accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Statistical-models-in-R" 
rel="up">Statistical models in R</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Analysis-of-variance-and-model-comparison-1"></A> 
<H3 class="section">11.4 Analysis of variance and model comparison</H3><A name="index-Analysis-of-variance"></A> 
<P>The model fitting function <CODE>aov(<VAR>formula</VAR>,
 data=<VAR>data.frame</VAR>)</CODE> <A name="index-aov"></A> operates at the 
simplest level in a very similar way to the function <CODE>lm()</CODE>, and most 
of the generic functions listed in the table in <A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Generic-functions-for-extracting-model-information">Generic 
functions for extracting model information</A> apply. </P>
<P>It should be noted that in addition <CODE>aov()</CODE> allows an analysis of
 models with multiple error strata such as split plot experiments, or balanced 
incomplete block designs with recovery of inter-block information.  The model 
formula </P>
<DIV class="example">
<PRE class="example"><VAR>response</VAR> ~ <VAR>mean.formula</VAR> + Error(<VAR>strata.formula</VAR>)
</PRE></DIV><A 
name="index-Error"></A> 
<P>specifies a multi-stratum experiment with error strata defined by the 
<VAR>strata.formula</VAR>.  In the simplest case, <VAR>strata.formula</VAR> is
 simply a factor, when it defines a two strata experiment, namely between and 
within the levels of the factor. </P>
<P>For example, with all determining variables factors, a model formula such as 
that in: </P>
<DIV class="example">
<PRE class="example">&gt; fm &lt;- aov(yield ~ v + n*p*k + Error(farms/blocks), data=farm.data)
</PRE></DIV>
<P>would typically be used to describe an experiment with mean model <CODE>v + 
n*p*k</CODE> and three error strata, namely “between farms”, “within farms, 
between blocks” and “within blocks”. </P>
<TABLE class="menu" border="0" cellspacing="0" summary="">
  <TBODY>
  <TR>
    <TD align="left" valign="top">• <A accesskey="1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#ANOVA-tables">ANOVA 
      tables</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR></TBODY></TABLE>
<HR>
<A name="ANOVA-tables"></A> 
<DIV class="header">
<P>Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Analysis-of-variance-and-model-comparison" 
rel="prev">Analysis of variance and model comparison</A>, Up: <A accesskey="u" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#Analysis-of-variance-and-model-comparison" 
rel="up">Analysis of variance and model comparison</A> &nbsp; [<A title="Table of contents" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" rel="contents">Contents</A>][<A 
title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="ANOVA-tables-1"></A> 
<H4 class="subsection">11.4.1 ANOVA tables</H4>
<P>Note also that the analysis of variance table (or tables) are for a sequence 
of fitted models.  The sums of squares shown are the decrease in the residual 
sums of squares resulting from an inclusion of <EM>that term</EM> in the model 
at <EM>that place</EM> in the sequence. Hence only for orthogonal experiments 
will the order of inclusion be inconsequential. </P>
<P>For multistratum experiments the procedure is first to project the response 
onto the error strata, again in sequence, and to fit the mean model to each 
projection.  For further details, see Chambers &amp; Hastie (1992). </P>
<P>A more flexible alternative to the default full ANOVA table is to compare two 
or more models directly using the <CODE>anova()</CODE> function. <A name="index-anova-1"></A> 
</P>
<DIV class="example">
<PRE class="example">&gt; anova(<VAR>fitted.model.1</VAR>, <VAR>fitted.model.2</VAR>, …)
</PRE></DIV>
<P>The display is then an ANOVA table showing the differences between the fitted 
models when fitted in sequence.  The fitted models being compared would usually 
be an hierarchical sequence, of course.  This does not give different 
information to the default, but rather makes it easier to comprehend and 
control. </P>
<HR>
<A name="Updating-fitted-models"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Generalized-linear-models" 
rel="next">Generalized linear models</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Analysis-of-variance-and-model-comparison" 
rel="prev">Analysis of variance and model comparison</A>, Up: <A accesskey="u" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#Statistical-models-in-R" 
rel="up">Statistical models in R</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Updating-fitted-models-1"></A> 
<H3 class="section">11.5 Updating fitted models</H3><A name="index-Updating-fitted-models"></A> 
<P>The <CODE>update()</CODE> function is largely a convenience function that
 allows a model to be fitted that differs from one previously fitted usually by 
just a few additional or removed terms.  Its form is <A name="index-update"></A> 
</P>
<DIV class="example">
<PRE class="example">&gt; <VAR>new.model</VAR> &lt;- update(<VAR>old.model</VAR>, <VAR>new.formula</VAR>)
</PRE></DIV>
<P>In the <VAR>new.formula</VAR> the special name consisting of a period, 
‘<SAMP><CODE>.</CODE></SAMP>’, <A name="index-_002e"></A> only, can be used to 
stand for “the corresponding part of the old model formula”.  For example, </P>
<DIV class="example">
<PRE class="example">&gt; fm05 &lt;- lm(y ~ x1 + x2 + x3 + x4 + x5, data = production)
&gt; fm6  &lt;- update(fm05, . ~ . + x6)
&gt; smf6 &lt;- update(fm6, sqrt(.) ~ .)
</PRE></DIV>
<P>would fit a five variate multiple regression with variables (presumably) from 
the data frame <CODE>production</CODE>, fit an additional model including a 
sixth regressor variable, and fit a variant on the model where the response had 
a square root transform applied. </P>
<P>Note especially that if the <CODE>data=</CODE> argument is specified on the
 original call to the model fitting function, this information is passed on
 through the fitted model object to <CODE>update()</CODE> and its allies. </P>
<P>The name ‘<SAMP>.</SAMP>’ can also be used in other contexts, but with 
slightly different meaning.  For example </P>
<DIV class="example">
<PRE class="example">&gt; fmfull &lt;- lm(y ~ . , data = production)
</PRE></DIV>
<P>would fit a model with response <CODE>y</CODE> and regressor variables 
<EM>all other variables in the data frame <CODE>production</CODE></EM>. </P>
<P>Other functions for exploring incremental sequences of models are 
<CODE>add1()</CODE>, <CODE>drop1()</CODE> and <CODE>step()</CODE>. <A name="index-add1"></A> 
<A name="index-drop1"></A> <A name="index-step-1"></A> The names of these give a 
good clue to their purpose, but for full details see the on-line help. </P>
<HR>
<A name="Generalized-linear-models"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Nonlinear-least-squares-and-maximum-likelihood-models" 
rel="next">Nonlinear least squares and maximum likelihood models</A>, Previous: 
<A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Updating-fitted-models" 
rel="prev">Updating fitted models</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Statistical-models-in-R" 
rel="up">Statistical models in R</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Generalized-linear-models-1"></A> 
<H3 class="section">11.6 Generalized linear models</H3><A name="index-Generalized-linear-models"></A> 
<P>Generalized linear modeling is a development of linear models to accommodate 
both non-normal response distributions and transformations to linearity in a 
clean and straightforward way.  A generalized linear model may be described in 
terms of the following sequence of assumptions: </P>
<UL>
  <LI> There is a response, <EM>y</EM>, of interest and stimulus variables x_1, 
  x_2, …, whose values influence the distribution of the response. </LI>
  <LI> The stimulus variables influence the distribution of <EM>y</EM> through 
  <EM>a single linear function, only</EM>.  This linear function is called the 
  <EM>linear predictor</EM>, and is usually written 
  <DIV class="display">
<PRE class="display">eta = beta_1 x_1 + beta_2 x_2 + … + beta_p x_p,
</PRE></DIV>
  <P>hence x_i has no influence on the distribution of <EM>y</EM> if and only if
   beta_i is zero. </P></LI>
  <LI> The distribution of <EM>y</EM> is of the form 
  <DIV class="display">
<PRE class="display">f_Y(y; mu, phi)
  = exp((A/phi) * (y lambda(mu) - gamma(lambda(mu))) + tau(y, phi))
</PRE></DIV>
  <P>where phi is a <EM>scale parameter</EM> (possibly known), and is constant
   for all observations, <EM>A</EM> represents a prior weight, assumed known but 
  possibly varying with the observations, and $\mu$ is the mean of <EM>y</EM>.
   So it is assumed that the distribution of <EM>y</EM> is determined by its
   mean and possibly a scale parameter as well. </P></LI>
  <LI> The mean, mu, is a smooth invertible function of the linear predictor: 
  <DIV class="display">
<PRE class="display">mu = m(eta),    eta = m^{-1}(mu) = ell(mu)
</PRE></DIV>
  <P>and this inverse function, ell(), is called the <EM>link function</EM>. 
  </P></LI></UL>
<P>These assumptions are loose enough to encompass a wide class of models useful 
in statistical practice, but tight enough to allow the development of a unified 
methodology of estimation and inference, at least approximately.  The reader is 
referred to any of the current reference works on the subject for full details, 
such as McCullagh &amp; Nelder (1989) or Dobson (1990). </P>
<TABLE class="menu" border="0" cellspacing="0" summary="">
  <TBODY>
  <TR>
    <TD align="left" valign="top">• <A accesskey="1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Families">Families</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="2" href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-glm_0028_0029-function">The 
      glm() function</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR></TBODY></TABLE>
<HR>
<A name="Families"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-glm_0028_0029-function" 
rel="next">The glm() function</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Generalized-linear-models" 
rel="prev">Generalized linear models</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Generalized-linear-models" 
rel="up">Generalized linear models</A> &nbsp; [<A title="Table of contents" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" rel="contents">Contents</A>][<A 
title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Families-1"></A> 
<H4 class="subsection">11.6.1 Families</H4><A name="index-Families"></A> 
<P>The class of generalized linear models handled by facilities supplied in R 
includes <EM>gaussian</EM>, <EM>binomial</EM>, <EM>poisson</EM>, <EM>inverse 
gaussian</EM> and <EM>gamma</EM> response distributions and also 
<EM>quasi-likelihood</EM> models where the response distribution is not
 explicitly specified.  In the latter case the <EM>variance function</EM> must 
be specified as a function of the mean, but in other cases this function is 
implied by the response distribution. </P>
<P>Each response distribution admits a variety of link functions to connect the 
mean with the linear predictor.  Those automatically available are shown in the 
following table: </P>
<BLOCKQUOTE>
  <TABLE summary="">
    <THEAD>
    <TR>
      <TH width="25%">Family name</TH>
      <TH width="55%">Link functions</TH></TR></THEAD>
    <TBODY>
    <TR>
      <TD width="25%"><CODE>binomial</CODE></TD>
      <TD width="55%"><CODE>logit</CODE>, <CODE>probit</CODE>, 
        <CODE>log</CODE>, <CODE>cloglog</CODE></TD></TR>
    <TR>
      <TD width="25%"><CODE>gaussian</CODE></TD>
      <TD width="55%"><CODE>identity</CODE>, <CODE>log</CODE>, 
        <CODE>inverse</CODE></TD></TR>
    <TR>
      <TD width="25%"><CODE>Gamma</CODE></TD>
      <TD width="55%"><CODE>identity</CODE>, <CODE>inverse</CODE>, 
        <CODE>log</CODE></TD></TR>
    <TR>
      <TD width="25%"><CODE>inverse.gaussian</CODE></TD>
      <TD width="55%"><CODE>1/mu^2</CODE>, <CODE>identity</CODE>, 
        <CODE>inverse</CODE>, <CODE>log</CODE></TD></TR>
    <TR>
      <TD width="25%"><CODE>poisson</CODE></TD>
      <TD width="55%"><CODE>identity</CODE>, <CODE>log</CODE>, 
        <CODE>sqrt</CODE></TD></TR>
    <TR>
      <TD width="25%"><CODE>quasi</CODE></TD>
      <TD width="55%"><CODE>logit</CODE>, <CODE>probit</CODE>, 
        <CODE>cloglog</CODE>, <CODE>identity</CODE>, <CODE>inverse</CODE>, 
        <CODE>log</CODE>, <CODE>1/mu^2</CODE>, 
  <CODE>sqrt</CODE></TD></TR></TBODY></TABLE></BLOCKQUOTE>
<P>The combination of a response distribution, a link function and various other 
pieces of information that are needed to carry out the modeling exercise is 
called the <EM>family</EM> of the generalized linear model. </P>
<HR>
<A name="The-glm_0028_0029-function"></A> 
<DIV class="header">
<P>Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Families" 
rel="prev">Families</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Generalized-linear-models" 
rel="up">Generalized linear models</A> &nbsp; [<A title="Table of contents" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" rel="contents">Contents</A>][<A 
title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="The-glm_0028_0029-function-1"></A> 
<H4 class="subsection">11.6.2 The <CODE>glm()</CODE> function</H4><A name="index-glm"></A> 
<P>Since the distribution of the response depends on the stimulus variables
 through a single linear function <EM>only</EM>, the same mechanism as was used 
for linear models can still be used to specify the linear part of a generalized 
model.  The family has to be specified in a different way. </P>
<P>The R function to fit a generalized linear model is <CODE>glm()</CODE> which 
uses the form </P>
<DIV class="example">
<PRE class="example">&gt; <VAR>fitted.model</VAR> &lt;- glm(<VAR>formula</VAR>, family=<VAR>family.generator</VAR>, data=<VAR>data.frame</VAR>)
</PRE></DIV>
<P>The only new feature is the <VAR>family.generator</VAR>, which is the
 instrument by which the family is described.  It is the name of a function that 
generates a list of functions and expressions that together define and control 
the model and estimation process.  Although this may seem a little complicated 
at first sight, its use is quite simple. </P>
<P>The names of the standard, supplied family generators are given under “Family 
Name” in the table in <A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Families">Families</A>. 
 Where there is a choice of links, the name of the link may also be supplied 
with the family name, in parentheses as a parameter.  In the case of the 
<CODE>quasi</CODE> family, the variance function may also be specified in this 
way. </P>
<P>Some examples make the process clear. </P><A name="The-gaussian-family"></A> 
<H4 class="subsubheading">The <CODE>gaussian</CODE> family</H4>
<P>A call such as </P>
<DIV class="example">
<PRE class="example">&gt; fm &lt;- glm(y ~ x1 + x2, family = gaussian, data = sales)
</PRE></DIV>
<P>achieves the same result as </P>
<DIV class="example">
<PRE class="example">&gt; fm &lt;- lm(y ~ x1+x2, data=sales)
</PRE></DIV>
<P>but much less efficiently.  Note how the gaussian family is not automatically 
provided with a choice of links, so no parameter is allowed.  If a problem 
requires a gaussian family with a nonstandard link, this can usually be achieved 
through the <CODE>quasi</CODE> family, as we shall see later. </P><A name="The-binomial-family"></A> 
<H4 class="subsubheading">The <CODE>binomial</CODE> family</H4>
<P>Consider a small, artificial example, from Silvey (1970). </P>
<P>On the Aegean island of Kalythos the male inhabitants suffer from a
 congenital eye disease, the effects of which become more marked with increasing 
age.  Samples of islander males of various ages were tested for blindness and 
the results recorded.  The data is shown below: </P>
<TABLE summary="">
  <TBODY>
  <TR>
    <TD>Age:</TD>
    <TD>20</TD>
    <TD>35</TD>
    <TD>45</TD>
    <TD>55</TD>
    <TD>70</TD></TR>
  <TR>
    <TD>No. tested:</TD>
    <TD>50</TD>
    <TD>50</TD>
    <TD>50</TD>
    <TD>50</TD>
    <TD>50</TD></TR>
  <TR>
    <TD>No. blind:</TD>
    <TD>&nbsp;6<!-- /@w --></TD>
    <TD>17</TD>
    <TD>26</TD>
    <TD>37</TD>
    <TD>44</TD></TR></TBODY></TABLE>
<P>The problem we consider is to fit both logistic and probit models to this 
data, and to estimate for each model the LD50, that is the age at which the 
chance of blindness for a male inhabitant is 50%. </P>
<P>If <EM>y</EM> is the number of blind at age <EM>x</EM> and <EM>n</EM> the
 number tested, both models have the form y ~ B(n, F(beta_0 + beta_1 x)) where 
for the probit case, F(z) = Phi(z) is the standard normal distribution function, 
and in the logit case (the default), F(z) = e^z/(1+e^z). In both cases the LD50 
is LD50 = - beta_0/beta_1 that is, the point at which the argument of the 
distribution function is zero. </P>
<P>The first step is to set the data up as a data frame </P>
<DIV class="example">
<PRE class="example">&gt; kalythos &lt;- data.frame(x = c(20,35,45,55,70), n = rep(50,5),
                         y = c(6,17,26,37,44))
</PRE></DIV>
<P>To fit a binomial model using <CODE>glm()</CODE> there are three 
possibilities for the response: </P>
<UL>
  <LI> If the response is a <EM>vector</EM> it is assumed to hold 
  <EM>binary</EM> data, and so must be a <EM>0/1</EM> vector. </LI>
  <LI> If the response is a <EM>two-column matrix</EM> it is assumed that the
   first column holds the number of successes for the trial and the second holds 
  the number of failures. </LI>
  <LI> If the response is a <EM>factor</EM>, its first level is taken as failure
   (0) and all other levels as ‘success’ (1). </LI></UL>
<P>Here we need the second of these conventions, so we add a matrix to our data 
frame: </P>
<DIV class="example">
<PRE class="example">&gt; kalythos$Ymat &lt;- cbind(kalythos$y, kalythos$n - kalythos$y)
</PRE></DIV>
<P>To fit the models we use </P>
<DIV class="example">
<PRE class="example">&gt; fmp &lt;- glm(Ymat ~ x, family = binomial(link=probit), data = kalythos)
&gt; fml &lt;- glm(Ymat ~ x, family = binomial, data = kalythos)
</PRE></DIV>
<P>Since the logit link is the default the parameter may be omitted on the
 second call.  To see the results of each fit we could use </P>
<DIV class="example">
<PRE class="example">&gt; summary(fmp)
&gt; summary(fml)
</PRE></DIV>
<P>Both models fit (all too) well.  To find the LD50 estimate we can use a
 simple function: </P>
<DIV class="example">
<PRE class="example">&gt; ld50 &lt;- function(b) -b[1]/b[2]
&gt; ldp &lt;- ld50(coef(fmp)); ldl &lt;- ld50(coef(fml)); c(ldp, ldl)
</PRE></DIV>
<P>The actual estimates from this data are 43.663 years and 43.601 years
 respectively. </P><A name="Poisson-models"></A> 
<H4 class="subsubheading">Poisson models</H4>
<P>With the Poisson family the default link is the <CODE>log</CODE>, and in
 practice the major use of this family is to fit surrogate Poisson log-linear 
models to frequency data, whose actual distribution is often multinomial.  This 
is a large and important subject we will not discuss further here.  It even 
forms a major part of the use of non-gaussian generalized models overall. </P>
<P>Occasionally genuinely Poisson data arises in practice and in the past it was 
often analyzed as gaussian data after either a log or a square-root 
transformation.  As a graceful alternative to the latter, a Poisson generalized 
linear model may be fitted as in the following example: </P>
<DIV class="example">
<PRE class="example">&gt; fmod &lt;- glm(y ~ A + B + x, family = poisson(link=sqrt),
              data = worm.counts)
</PRE></DIV><A 
name="Quasi_002dlikelihood-models"></A> 
<H4 class="subsubheading">Quasi-likelihood models</H4>
<P>For all families the variance of the response will depend on the mean and 
will have the scale parameter as a multiplier.  The form of dependence of the 
variance on the mean is a characteristic of the response distribution; for 
example for the poisson distribution Var(y) = mu. </P>
<P>For quasi-likelihood estimation and inference the precise response
 distribution is not specified, but rather only a link function and the form of 
the variance function as it depends on the mean.  Since quasi-likelihood 
estimation uses formally identical techniques to those for the gaussian 
distribution, this family provides a way of fitting gaussian models with 
non-standard link functions or variance functions, incidentally. </P>
<P>For example, consider fitting the non-linear regression y = theta_1 z_1 / 
(z_2 - theta_2) + e which may be written alternatively as y = 1 / (beta_1 x_1 + 
beta_2 x_2) + e where x_1 = z_2/z_1, x_2 = -1/z_1, beta_1 = 1/theta_1, and 
beta_2 = theta_2/theta_1. Supposing a suitable data frame to be set up we could 
fit this non-linear regression as </P>
<DIV class="example">
<PRE class="example">&gt; nlfit &lt;- glm(y ~ x1 + x2 - 1,
               family = quasi(link=inverse, variance=constant),
               data = biochem)
</PRE></DIV>
<P>The reader is referred to the manual and the help document for further
 information, as needed. </P>
<HR>
<A name="Nonlinear-least-squares-and-maximum-likelihood-models"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Some-non_002dstandard-models" 
rel="next">Some non-standard models</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Generalized-linear-models" 
rel="prev">Generalized linear models</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Statistical-models-in-R" 
rel="up">Statistical models in R</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Nonlinear-least-squares-and-maximum-likelihood-models-1"></A> 
<H3 class="section">11.7 Nonlinear least squares and maximum likelihood 
models</H3><A name="index-Nonlinear-least-squares"></A> 
<P>Certain forms of nonlinear model can be fitted by Generalized Linear Models 
(<CODE>glm()</CODE>).  But in the majority of cases we have to approach the 
nonlinear curve fitting problem as one of nonlinear optimization. R’s nonlinear 
optimization routines are <CODE>optim()</CODE>, <CODE>nlm()</CODE> and 
<CODE>nlminb()</CODE>, <A name="index-nlm"></A> <A name="index-optim"></A> <A 
name="index-nlminb"></A> which provide the functionality (and more) of 
<SMALL>S-PLUS</SMALL>’s <CODE>ms()</CODE> and <CODE>nlminb()</CODE>.  We seek 
the parameter values that minimize some index of lack-of-fit, and they do this 
by trying out various parameter values iteratively.  Unlike linear regression 
for example, there is no guarantee that the procedure will converge on 
satisfactory estimates. All the methods require initial guesses about what 
parameter values to try, and convergence may depend critically upon the quality 
of the starting values. </P>
<TABLE class="menu" border="0" cellspacing="0" summary="">
  <TBODY>
  <TR>
    <TD align="left" valign="top">• <A accesskey="1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Least-squares">Least 
      squares</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="2" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Maximum-likelihood">Maximum 
      likelihood</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR></TBODY></TABLE>
<HR>
<A name="Least-squares"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Maximum-likelihood" 
rel="next">Maximum likelihood</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Nonlinear-least-squares-and-maximum-likelihood-models" 
rel="prev">Nonlinear least squares and maximum likelihood models</A>, Up: <A 
accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Nonlinear-least-squares-and-maximum-likelihood-models" 
rel="up">Nonlinear least squares and maximum likelihood models</A> &nbsp; [<A 
title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Least-squares-1"></A> 
<H4 class="subsection">11.7.1 Least squares</H4>
<P>One way to fit a nonlinear model is by minimizing the sum of the squared
 errors (SSE) or residuals.  This method makes sense if the observed errors 
could have plausibly arisen from a normal distribution. </P>
<P>Here is an example from Bates &amp; Watts (1988), page 51.  The data are: 
</P>
<DIV class="example">
<PRE class="example">&gt; x &lt;- c(0.02, 0.02, 0.06, 0.06, 0.11, 0.11, 0.22, 0.22, 0.56, 0.56,
         1.10, 1.10)
&gt; y &lt;- c(76, 47, 97, 107, 123, 139, 159, 152, 191, 201, 207, 200)
</PRE></DIV>
<P>The fit criterion to be minimized is: </P>
<DIV class="example">
<PRE class="example">&gt; fn &lt;- function(p) sum((y - (p[1] * x)/(p[2] + x))^2)
</PRE></DIV>
<P>In order to do the fit we need initial estimates of the parameters.  One way 
to find sensible starting values is to plot the data, guess some parameter 
values, and superimpose the model curve using those values. </P>
<DIV class="example">
<PRE class="example">&gt; plot(x, y)
&gt; xfit &lt;- seq(.02, 1.1, .05)
&gt; yfit &lt;- 200 * xfit/(0.1 + xfit)
&gt; lines(spline(xfit, yfit))
</PRE></DIV>
<P>We could do better, but these starting values of 200 and 0.1 seem adequate.  
Now do the fit: </P>
<DIV class="example">
<PRE class="example">&gt; out &lt;- nlm(fn, p = c(200, 0.1), hessian = TRUE)
</PRE></DIV><A 
name="index-nlm-1"></A> 
<P>After the fitting, <CODE>out$minimum</CODE> is the SSE, and 
<CODE>out$estimate</CODE> are the least squares estimates of the parameters. To 
obtain the approximate standard errors (SE) of the estimates we do: </P>
<DIV class="example">
<PRE class="example">&gt; sqrt(diag(2*out$minimum/(length(y) - 2) * solve(out$hessian)))
</PRE></DIV>
<P>The <CODE>2</CODE> which is subtracted in the line above represents the 
number of parameters.  A 95% confidence interval would be the parameter estimate 
+/- 1.96 SE.  We can superimpose the least squares fit on a new plot: </P>
<DIV class="example">
<PRE class="example">&gt; plot(x, y)
&gt; xfit &lt;- seq(.02, 1.1, .05)
&gt; yfit &lt;- 212.68384222 * xfit/(0.06412146 + xfit)
&gt; lines(spline(xfit, yfit))
</PRE></DIV>
<P>The standard package <STRONG>stats</STRONG> provides much more extensive 
facilities for fitting non-linear models by least squares.  The model we have 
just fitted is the Michaelis-Menten model, so we can use </P>
<DIV class="example">
<PRE class="example">&gt; df &lt;- data.frame(x=x, y=y)
&gt; fit &lt;- nls(y ~ SSmicmen(x, Vm, K), df)
&gt; fit
Nonlinear regression model
  model:  y ~ SSmicmen(x, Vm, K)
   data:  df
          Vm            K
212.68370711   0.06412123
 residual sum-of-squares:  1195.449
&gt; summary(fit)

Formula: y ~ SSmicmen(x, Vm, K)

Parameters:
    Estimate Std. Error t value Pr(&gt;|t|)
Vm 2.127e+02  6.947e+00  30.615 3.24e-11
K  6.412e-02  8.281e-03   7.743 1.57e-05

Residual standard error: 10.93 on 10 degrees of freedom

Correlation of Parameter Estimates:
      Vm
K 0.7651
</PRE></DIV>
<HR>
<A name="Maximum-likelihood"></A> 
<DIV class="header">
<P>Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Least-squares" 
rel="prev">Least squares</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Nonlinear-least-squares-and-maximum-likelihood-models" 
rel="up">Nonlinear least squares and maximum likelihood models</A> &nbsp; [<A 
title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Maximum-likelihood-1"></A> 
<H4 class="subsection">11.7.2 Maximum likelihood</H4><A name="index-Maximum-likelihood"></A> 
<P>Maximum likelihood is a method of nonlinear model fitting that applies even 
if the errors are not normal.  The method finds the parameter values which 
maximize the log likelihood, or equivalently which minimize the negative 
log-likelihood.  Here is an example from Dobson (1990), pp. 108–111.  This 
example fits a logistic model to dose-response data, which clearly could also be 
fit by <CODE>glm()</CODE>.  The data are: </P>
<DIV class="example">
<PRE class="example">&gt; x &lt;- c(1.6907, 1.7242, 1.7552, 1.7842, 1.8113,
         1.8369, 1.8610, 1.8839)
&gt; y &lt;- c( 6, 13, 18, 28, 52, 53, 61, 60)
&gt; n &lt;- c(59, 60, 62, 56, 63, 59, 62, 60)
</PRE></DIV>
<P>The negative log-likelihood to minimize is: </P>
<DIV class="example">
<PRE class="example">&gt; fn &lt;- function(p)
   sum( - (y*(p[1]+p[2]*x) - n*log(1+exp(p[1]+p[2]*x))
           + log(choose(n, y)) ))
</PRE></DIV>
<P>We pick sensible starting values and do the fit: </P>
<DIV class="example">
<PRE class="example">&gt; out &lt;- nlm(fn, p = c(-50,20), hessian = TRUE)
</PRE></DIV><A 
name="index-nlm-2"></A> 
<P>After the fitting, <CODE>out$minimum</CODE> is the negative log-likelihood,
 and <CODE>out$estimate</CODE> are the maximum likelihood estimates of the
 parameters.  To obtain the approximate SEs of the estimates we do: </P>
<DIV class="example">
<PRE class="example">&gt; sqrt(diag(solve(out$hessian)))
</PRE></DIV>
<P>A 95% confidence interval would be the parameter estimate +/- 1.96 SE. </P>
<HR>
<A name="Some-non_002dstandard-models"></A> 
<DIV class="header">
<P>Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Nonlinear-least-squares-and-maximum-likelihood-models" 
rel="prev">Nonlinear least squares and maximum likelihood models</A>, Up: <A 
accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Statistical-models-in-R" 
rel="up">Statistical models in R</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Some-non_002dstandard-models-1"></A> 
<H3 class="section">11.8 Some non-standard models</H3>
<P>We conclude this chapter with just a brief mention of some of the other
 facilities available in R for special regression and data analysis problems. 
</P>
<UL>
  <LI><A name="index-Mixed-models"></A> <STRONG>Mixed models.</STRONG>  The 
  recommended <A 
  href="http://cran.r-project.org/package=nlme"><STRONG>nlme</STRONG></A> 
  package provides functions <CODE>lme()</CODE> and <CODE>nlme()</CODE> <A name="index-lme"></A> 
  <A name="index-nlme"></A> for linear and non-linear mixed-effects models, that 
  is linear and non-linear regressions in which some of the coefficients 
  correspond to random effects.  These functions make heavy use of formulae to 
  specify the models. </LI>
  <LI><A name="index-Local-approximating-regressions"></A> <STRONG>Local 
  approximating regressions.</STRONG>  The <CODE>loess()</CODE> <A name="index-loess"></A>
   function fits a nonparametric regression by using a locally weighted
   regression.  Such regressions are useful for highlighting a trend in messy 
  data or for data reduction to give some insight into a large data set. 
  <P>Function <CODE>loess</CODE> is in the standard package 
  <STRONG>stats</STRONG>, together with code for projection pursuit regression. 
  <A name="index-loess-1"></A> </P></LI>
  <LI><A name="index-Robust-regression"></A> <STRONG>Robust regression.</STRONG> 
  There are several functions available for fitting regression models in a way 
  resistant to the influence of extreme outliers in the data.  Function 
  <CODE>lqs</CODE> <A name="index-lqs"></A> in the recommended package <A href="http://cran.r-project.org/package=MASS"><STRONG>MASS</STRONG></A> 
  provides state-of-art algorithms for highly-resistant fits.  Less resistant 
  but statistically more efficient methods are available in packages, for 
  example function <CODE>rlm</CODE> <A name="index-rlm"></A> in package <A href="http://cran.r-project.org/package=MASS"><STRONG>MASS</STRONG></A>. 
  </LI>
  <LI><A name="index-Additive-models"></A> <STRONG>Additive models.</STRONG> 
  This technique aims to construct a regression function from smooth additive 
  functions of the determining variables, usually one for each determining 
  variable.  Functions <CODE>avas</CODE> and <CODE>ace</CODE> <A name="index-avas"></A> 
  <A name="index-ace"></A> in package <A href="http://cran.r-project.org/package=acepack"><STRONG>acepack</STRONG></A> 
  and functions <CODE>bruto</CODE> and <CODE>mars</CODE> <A 
  name="index-bruto"></A> <A name="index-mars"></A> in package <A href="http://cran.r-project.org/package=mda"><STRONG>mda</STRONG></A> 
  provide some examples of these techniques in user-contributed packages to R.  
  An extension is <STRONG>Generalized Additive Models</STRONG>, implemented in 
  user-contributed packages <A 
  href="http://cran.r-project.org/package=gam"><STRONG>gam</STRONG></A> and <A 
  href="http://cran.r-project.org/package=mgcv"><STRONG>mgcv</STRONG></A>. </LI>
  <LI><A name="index-Tree_002dbased-models"></A> <STRONG>Tree-based 
  models.</STRONG> Rather than seek an explicit global linear model for 
  prediction or interpretation, tree-based models seek to bifurcate the data, 
  recursively, at critical points of the determining variables in order to 
  partition the data ultimately into groups that are as homogeneous as possible 
  within, and as heterogeneous as possible between.  The results often lead to 
  insights that other data analysis methods tend not to yield. 
  <P>Models are again specified in the ordinary linear model form.  The model
   fitting function is <CODE>tree()</CODE>, <A name="index-tree"></A> but many 
  other generic functions such as <CODE>plot()</CODE> and <CODE>text()</CODE>
   are well adapted to displaying the results of a tree-based model fit in a 
  graphical way. </P>
  <P>Tree models are available in R <EM>via</EM> the user-contributed packages 
  <A href="http://cran.r-project.org/package=rpart"><STRONG>rpart</STRONG></A> 
  and <A 
  href="http://cran.r-project.org/package=tree"><STRONG>tree</STRONG></A>. 
  </P></LI></UL>
<HR>
<A name="Graphics"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Packages" 
rel="next">Packages</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Statistical-models-in-R" 
rel="prev">Statistical models in R</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Top" 
rel="up">Top</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Graphical-procedures"></A> 
<H2 class="chapter">12 Graphical procedures</H2>
<P>Graphical facilities are an important and extremely versatile component of 
the R environment.  It is possible to use the facilities to display a wide 
variety of statistical graphs and also to build entirely new types of graph. 
</P>
<P>The graphics facilities can be used in both interactive and batch modes, but 
in most cases, interactive use is more productive.  Interactive use is also easy 
because at startup time R initiates a graphics <EM>device driver</EM> which 
opens a special <EM>graphics window</EM> for the display of interactive 
graphics.  Although this is done automatically, it may useful to know that the 
command used is <CODE>X11()</CODE> under UNIX, <CODE>windows()</CODE> under 
Windows and <CODE>quartz()</CODE> under OS X.  A new device can always be opened 
by <CODE>dev.new()</CODE>. </P>
<P>Once the device driver is running, R plotting commands can be used to produce 
a variety of graphical displays and to create entirely new kinds of display. 
</P>
<P>Plotting commands are divided into three basic groups: </P>
<UL>
  <LI><STRONG>High-level</STRONG> plotting functions create a new plot on the 
  graphics device, possibly with axes, labels, titles and so on. </LI>
  <LI><STRONG>Low-level</STRONG> plotting functions add more information to an
   existing plot, such as extra points, lines and labels. </LI>
  <LI><STRONG>Interactive</STRONG> graphics functions allow you interactively 
  add information to, or extract information from, an existing plot, using a
   pointing device such as a mouse. </LI></UL>
<P>In addition, R maintains a list of <EM>graphical parameters</EM> which can be 
manipulated to customize your plots. </P>
<P>This manual only describes what are known as ‘base’ graphics.  A separate 
graphics sub-system in package <STRONG>grid</STRONG> coexists with base – it is 
more powerful but harder to use.  There is a recommended package <A href="http://cran.r-project.org/package=lattice"><STRONG>lattice</STRONG></A> 
which builds on <STRONG>grid</STRONG> and provides ways to produce multi-panel 
plots akin to those in the <EM>Trellis</EM> system in S. </P>
<TABLE class="menu" border="0" cellspacing="0" summary="">
  <TBODY>
  <TR>
    <TD align="left" valign="top">• <A accesskey="1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#High_002dlevel-plotting-commands">High-level 
      plotting commands</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="2" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Low_002dlevel-plotting-commands">Low-level 
      plotting commands</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="3" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Interacting-with-graphics">Interacting 
      with graphics</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="4" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Using-graphics-parameters">Using 
      graphics parameters</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="5" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Graphics-parameters">Graphics 
      parameters</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="6" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Device-drivers">Device 
      drivers</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="7" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Dynamic-graphics">Dynamic 
      graphics</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR></TBODY></TABLE>
<HR>
<A name="High_002dlevel-plotting-commands"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Low_002dlevel-plotting-commands" 
rel="next">Low-level plotting commands</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Graphics" 
rel="prev">Graphics</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Graphics" 
rel="up">Graphics</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A 
name="High_002dlevel-plotting-commands-1"></A> 
<H3 class="section">12.1 High-level plotting commands</H3>
<P>High-level plotting functions are designed to generate a complete plot of the 
data passed as arguments to the function.  Where appropriate, axes, labels and 
titles are automatically generated (unless you request otherwise.) High-level 
plotting commands always start a new plot, erasing the current plot if 
necessary. </P>
<TABLE class="menu" border="0" cellspacing="0" summary="">
  <TBODY>
  <TR>
    <TD align="left" valign="top">• <A accesskey="1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-plot_0028_0029-function">The 
      plot() function</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="2" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Displaying-multivariate-data">Displaying 
      multivariate data</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="3" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Display-graphics">Display 
      graphics</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="4" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Arguments-to-high_002dlevel-plotting-functions">Arguments 
      to high-level plotting functions</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR></TBODY></TABLE>
<HR>
<A name="The-plot_0028_0029-function"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Displaying-multivariate-data" 
rel="next">Displaying multivariate data</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#High_002dlevel-plotting-commands" 
rel="prev">High-level plotting commands</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#High_002dlevel-plotting-commands" 
rel="up">High-level plotting commands</A> &nbsp; [<A title="Table of contents" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" rel="contents">Contents</A>][<A 
title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="The-plot_0028_0029-function-1"></A> 
<H4 class="subsection">12.1.1 The <CODE>plot()</CODE> function</H4><A name="index-plot-1"></A> 
<P>One of the most frequently used plotting functions in R is the 
<CODE>plot()</CODE> function.  This is a <EM>generic</EM> function: the type of
 plot produced is dependent on the type or <EM>class</EM> of the first argument. 
</P>
<DL compact="compact">
  <DT><CODE>plot(<VAR>x</VAR>, <VAR>y</VAR>)</CODE></DT>
  <DT><CODE>plot(<VAR>xy</VAR>)</CODE></DT>
  <DD>
  <P>If <VAR>x</VAR> and <VAR>y</VAR> are vectors, <CODE>plot(<VAR>x</VAR>, 
  <VAR>y</VAR>)</CODE> produces a scatterplot of <VAR>y</VAR> against 
  <VAR>x</VAR>.  The same effect can be produced by supplying one argument 
  (second form) as either a list containing two elements <VAR>x</VAR> and 
  <VAR>y</VAR> or a two-column matrix. </P></DD>
  <DT><CODE>plot(<VAR>x</VAR>)</CODE></DT>
  <DD>
  <P>If <VAR>x</VAR> is a time series, this produces a time-series plot. If 
  <VAR>x</VAR> is a numeric vector, it produces a plot of the values in the
   vector against their index in the vector.  If <VAR>x</VAR> is a complex
   vector, it produces a plot of imaginary versus real parts of the vector
   elements. </P></DD>
  <DT><CODE>plot(<VAR>f</VAR>)</CODE></DT>
  <DT><CODE>plot(<VAR>f</VAR>, <VAR>y</VAR>)</CODE></DT>
  <DD>
  <P><VAR>f</VAR> is a factor object, <VAR>y</VAR> is a numeric vector.  The 
  first form generates a bar plot of <VAR>f</VAR>; the second form produces 
  boxplots of <VAR>y</VAR> for each level of <VAR>f</VAR>. </P></DD>
  <DT><CODE>plot(<VAR>df</VAR>)</CODE></DT>
  <DT><CODE>plot(~ <VAR>expr</VAR>)</CODE></DT>
  <DT><CODE>plot(<VAR>y</VAR> ~ <VAR>expr</VAR>)</CODE></DT>
  <DD>
  <P><VAR>df</VAR> is a data frame, <VAR>y</VAR> is any object, <VAR>expr</VAR> 
  is a list of object names separated by ‘<CODE>+</CODE>’ (e.g., <CODE>a + b + 
  c</CODE>).  The first two forms produce distributional plots of the variables 
  in a data frame (first form) or of a number of named objects (second form).  
  The third form plots <VAR>y</VAR> against every object named in 
  <VAR>expr</VAR>. </P></DD></DL>
<HR>
<A name="Displaying-multivariate-data"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Display-graphics" 
rel="next">Display graphics</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-plot_0028_0029-function" 
rel="prev">The plot() function</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#High_002dlevel-plotting-commands" 
rel="up">High-level plotting commands</A> &nbsp; [<A title="Table of contents" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" rel="contents">Contents</A>][<A 
title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Displaying-multivariate-data-1"></A> 
<H4 class="subsection">12.1.2 Displaying multivariate data</H4>
<P>R provides two very useful functions for representing multivariate data.  If 
<CODE>X</CODE> is a numeric matrix or data frame, the command </P>
<DIV class="example">
<PRE class="example">&gt; pairs(X)
</PRE></DIV><A name="index-pairs"></A> 
<P>produces a pairwise scatterplot matrix of the variables defined by the
 columns of <CODE>X</CODE>, that is, every column of <CODE>X</CODE> is plotted
 against every other column of <CODE>X</CODE> and the resulting <EM>n(n-1)</EM>
 plots are arranged in a matrix with plot scales constant over the rows and 
columns of the matrix. </P>
<P>When three or four variables are involved a <EM>coplot</EM> may be more
 enlightening.  If <CODE>a</CODE> and <CODE>b</CODE> are numeric vectors and 
<CODE>c</CODE> is a numeric vector or factor object (all of the same length), 
then the command </P>
<DIV class="example">
<PRE class="example">&gt; coplot(a ~ b | c)
</PRE></DIV><A 
name="index-coplot"></A> 
<P>produces a number of scatterplots of <CODE>a</CODE> against <CODE>b</CODE> 
for given values of <CODE>c</CODE>.  If <CODE>c</CODE> is a factor, this simply 
means that <CODE>a</CODE> is plotted against <CODE>b</CODE> for every level of 
<CODE>c</CODE>.  When <CODE>c</CODE> is numeric, it is divided into a number of 
<EM>conditioning intervals</EM> and for each interval <CODE>a</CODE> is plotted 
against <CODE>b</CODE> for values of <CODE>c</CODE> within the interval.  The 
number and position of intervals can be controlled with 
<CODE>given.values=</CODE> argument to <CODE>coplot()</CODE>—the function 
<CODE>co.intervals()</CODE> is useful for selecting intervals.  You can also use 
two <EM>given</EM> variables with a command like </P>
<DIV class="example">
<PRE class="example">&gt; coplot(a ~ b | c + d)
</PRE></DIV>
<P>which produces scatterplots of <CODE>a</CODE> against <CODE>b</CODE> for 
every joint conditioning interval of <CODE>c</CODE> and <CODE>d</CODE>. </P>
<P>The <CODE>coplot()</CODE> and <CODE>pairs()</CODE> function both take an 
argument <CODE>panel=</CODE> which can be used to customize the type of plot 
which appears in each panel.  The default is <CODE>points()</CODE> to produce a
 scatterplot but by supplying some other low-level graphics function of two 
vectors <CODE>x</CODE> and <CODE>y</CODE> as the value of <CODE>panel=</CODE> 
you can produce any type of plot you wish.  An example panel function useful for
 coplots is <CODE>panel.smooth()</CODE>. </P>
<HR>
<A name="Display-graphics"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Arguments-to-high_002dlevel-plotting-functions" 
rel="next">Arguments to high-level plotting functions</A>, Previous: <A 
accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Displaying-multivariate-data" 
rel="prev">Displaying multivariate data</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#High_002dlevel-plotting-commands" 
rel="up">High-level plotting commands</A> &nbsp; [<A title="Table of contents" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" rel="contents">Contents</A>][<A 
title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Display-graphics-1"></A> 
<H4 class="subsection">12.1.3 Display graphics</H4>
<P>Other high-level graphics functions produce different types of plots. Some 
examples are: </P>
<DL compact="compact">
  <DT><CODE>qqnorm(x)</CODE></DT>
  <DT><CODE>qqline(x)</CODE></DT>
  <DT><CODE>qqplot(x, y)</CODE></DT>
  <DD><A name="index-qqnorm-1"></A> <A name="index-qqline-1"></A> <A name="index-qqplot"></A> 
  <P>Distribution-comparison plots.  The first form plots the numeric vector 
  <CODE>x</CODE> against the expected Normal order scores (a normal scores plot)
   and the second adds a straight line to such a plot by drawing a line through 
  the distribution and data quartiles.  The third form plots the quantiles of 
  <CODE>x</CODE> against those of <CODE>y</CODE> to compare their respective 
  distributions. </P></DD>
  <DT><CODE>hist(x)</CODE></DT>
  <DT><CODE>hist(x, nclass=<VAR>n</VAR>)</CODE></DT>
  <DT><CODE>hist(x, breaks=<VAR>b</VAR>, …)</CODE></DT>
  <DD><A name="index-hist-1"></A> 
  <P>Produces a histogram of the numeric vector <CODE>x</CODE>.  A sensible 
  number of classes is usually chosen, but a recommendation can be given with 
  the <CODE>nclass=</CODE> argument.  Alternatively, the breakpoints can be
   specified exactly with the <CODE>breaks=</CODE> argument.  If the 
  <CODE>probability=TRUE</CODE> argument is given, the bars represent relative
   frequencies divided by bin width instead of counts. </P></DD>
  <DT><CODE>dotchart(x, …)</CODE></DT>
  <DD><A name="index-dotchart"></A> 
  <P>Constructs a dotchart of the data in <CODE>x</CODE>.  In a dotchart the 
  <EM>y</EM>-axis gives a labelling of the data in <CODE>x</CODE> and the 
  <EM>x</EM>-axis gives its value.  For example it allows easy visual selection 
  of all data entries with values lying in specified ranges. </P></DD>
  <DT><CODE>image(x, y, z, …)</CODE></DT>
  <DT><CODE>contour(x, y, z, …)</CODE></DT>
  <DT><CODE>persp(x, y, z, …)</CODE></DT>
  <DD><A name="index-image"></A> <A name="index-contour"></A> <A name="index-persp"></A> 
  <P>Plots of three variables.  The <CODE>image</CODE> plot draws a grid of 
  rectangles using different colours to represent the value of <CODE>z</CODE>, 
  the <CODE>contour</CODE> plot draws contour lines to represent the value of 
  <CODE>z</CODE>, and the <CODE>persp</CODE> plot draws a 3D surface. 
</P></DD></DL>
<HR>
<A name="Arguments-to-high_002dlevel-plotting-functions"></A> 
<DIV class="header">
<P>Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Display-graphics" 
rel="prev">Display graphics</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#High_002dlevel-plotting-commands" 
rel="up">High-level plotting commands</A> &nbsp; [<A title="Table of contents" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" rel="contents">Contents</A>][<A 
title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Arguments-to-high_002dlevel-plotting-functions-1"></A> 
<H4 class="subsection">12.1.4 Arguments to high-level plotting functions</H4>
<P>There are a number of arguments which may be passed to high-level graphics 
functions, as follows: </P>
<DL compact="compact">
  <DT><CODE>add=TRUE</CODE></DT>
  <DD>
  <P>Forces the function to act as a low-level graphics function, superimposing 
  the plot on the current plot (some functions only). </P></DD>
  <DT><CODE>axes=FALSE</CODE></DT>
  <DD>
  <P>Suppresses generation of axes—useful for adding your own custom axes with 
  the <CODE>axis()</CODE> function.  The default, <CODE>axes=TRUE</CODE>, means
   include axes. </P></DD>
  <DT><CODE>log="x"</CODE></DT>
  <DT><CODE>log="y"</CODE></DT>
  <DT><CODE>log="xy"</CODE></DT>
  <DD>
  <P>Causes the <EM>x</EM>, <EM>y</EM> or both axes to be logarithmic.  This 
  will work for many, but not all, types of plot. </P></DD>
  <DT><CODE>type=</CODE></DT>
  <DD>
  <P>The <CODE>type=</CODE> argument controls the type of plot produced, as
   follows: </P>
  <DL compact="compact">
    <DT><CODE>type="p"</CODE></DT>
    <DD>
    <P>Plot individual points (the default) </P></DD>
    <DT><CODE>type="l"</CODE></DT>
    <DD>
    <P>Plot lines </P></DD>
    <DT><CODE>type="b"</CODE></DT>
    <DD>
    <P>Plot points connected by lines (<EM>both</EM>) </P></DD>
    <DT><CODE>type="o"</CODE></DT>
    <DD>
    <P>Plot points overlaid by lines </P></DD>
    <DT><CODE>type="h"</CODE></DT>
    <DD>
    <P>Plot vertical lines from points to the zero axis (<EM>high-density</EM>) 
    </P></DD>
    <DT><CODE>type="s"</CODE></DT>
    <DT><CODE>type="S"</CODE></DT>
    <DD>
    <P>Step-function plots.  In the first form, the top of the vertical defines
     the point; in the second, the bottom. </P></DD>
    <DT><CODE>type="n"</CODE></DT>
    <DD>
    <P>No plotting at all.  However axes are still drawn (by default) and the
     coordinate system is set up according to the data.  Ideal for creating
     plots with subsequent low-level graphics functions. </P></DD></DL></DD>
  <DT><CODE>xlab=<VAR>string</VAR></CODE></DT>
  <DT><CODE>ylab=<VAR>string</VAR></CODE></DT>
  <DD>
  <P>Axis labels for the <EM>x</EM> and <EM>y</EM> axes.  Use these arguments to
   change the default labels, usually the names of the objects used in the call 
  to the high-level plotting function. </P></DD>
  <DT><CODE>main=<VAR>string</VAR></CODE></DT>
  <DD>
  <P>Figure title, placed at the top of the plot in a large font. </P></DD>
  <DT><CODE>sub=<VAR>string</VAR></CODE></DT>
  <DD>
  <P>Sub-title, placed just below the <EM>x</EM>-axis in a smaller font. 
  </P></DD></DL>
<HR>
<A name="Low_002dlevel-plotting-commands"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Interacting-with-graphics" 
rel="next">Interacting with graphics</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#High_002dlevel-plotting-commands" 
rel="prev">High-level plotting commands</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Graphics" 
rel="up">Graphics</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Low_002dlevel-plotting-commands-1"></A> 
<H3 class="section">12.2 Low-level plotting commands</H3>
<P>Sometimes the high-level plotting functions don’t produce exactly the kind of 
plot you desire.  In this case, low-level plotting commands can be used to add 
extra information (such as points, lines or text) to the current plot. </P>
<P>Some of the more useful low-level plotting functions are: </P>
<DL compact="compact">
  <DT><CODE>points(x, y)</CODE></DT>
  <DT><CODE>lines(x, y)</CODE></DT>
  <DD><A name="index-points"></A> <A name="index-lines"></A> 
  <P>Adds points or connected lines to the current plot.  <CODE>plot()</CODE>’s 
  <CODE>type=</CODE> argument can also be passed to these functions (and
   defaults to <CODE>"p"</CODE> for <CODE>points()</CODE> and <CODE>"l"</CODE> 
  for <CODE>lines()</CODE>.) </P></DD>
  <DT><CODE>text(x, y, labels, …)</CODE></DT>
  <DD><A name="index-text"></A> 
  <P>Add text to a plot at points given by <CODE>x, y</CODE>.  Normally 
  <CODE>labels</CODE> is an integer or character vector in which case 
  <CODE>labels[i]</CODE> is plotted at point <CODE>(x[i], y[i])</CODE>.  The 
  default is <CODE>1:length(x)</CODE>. </P>
  <P><STRONG>Note</STRONG>: This function is often used in the sequence </P>
  <DIV class="example">
<PRE class="example">&gt; plot(x, y, type="n"); text(x, y, names)
</PRE></DIV>
  <P>The graphics parameter <CODE>type="n"</CODE> suppresses the points but sets 
  up the axes, and the <CODE>text()</CODE> function supplies special characters, 
  as specified by the character vector <CODE>names</CODE> for the points. 
  </P></DD>
  <DT><CODE>abline(a, b)</CODE></DT>
  <DT><CODE>abline(h=<VAR>y</VAR>)</CODE></DT>
  <DT><CODE>abline(v=<VAR>x</VAR>)</CODE></DT>
  <DT><CODE>abline(<VAR>lm.obj</VAR>)</CODE></DT>
  <DD><A name="index-abline"></A> 
  <P>Adds a line of slope <CODE>b</CODE> and intercept <CODE>a</CODE> to the 
  current plot.  <CODE>h=<VAR>y</VAR></CODE> may be used to specify 
  <EM>y</EM>-coordinates for the heights of horizontal lines to go across a 
  plot, and <CODE>v=<VAR>x</VAR></CODE> similarly for the <EM>x</EM>-coordinates 
  for vertical lines.  Also <VAR>lm.obj</VAR> may be list with a 
  <CODE>coefficients</CODE> component of length 2 (such as the result of 
  model-fitting functions,) which are taken as an intercept and slope, in that 
  order. </P></DD>
  <DT><CODE>polygon(x, y, …)</CODE></DT>
  <DD><A name="index-polygon"></A> 
  <P>Draws a polygon defined by the ordered vertices in (<CODE>x</CODE>, 
  <CODE>y</CODE>) and (optionally) shade it in with hatch lines, or fill it if 
  the graphics device allows the filling of figures. </P></DD>
  <DT><CODE>legend(x, y, legend, …)</CODE></DT>
  <DD><A name="index-legend"></A> 
  <P>Adds a legend to the current plot at the specified position.  Plotting
   characters, line styles, colors etc., are identified with the labels in the 
  character vector <CODE>legend</CODE>.  At least one other argument 
  <VAR>v</VAR> (a vector the same length as <CODE>legend</CODE>) with the 
  corresponding values of the plotting unit must also be given, as follows: </P>
  <DL compact="compact">
    <DT><CODE>legend( , fill=<VAR>v</VAR>)</CODE></DT>
    <DD>
    <P>Colors for filled boxes </P></DD>
    <DT><CODE>legend( , col=<VAR>v</VAR>)</CODE></DT>
    <DD>
    <P>Colors in which points or lines will be drawn </P></DD>
    <DT><CODE>legend( , lty=<VAR>v</VAR>)</CODE></DT>
    <DD>
    <P>Line styles </P></DD>
    <DT><CODE>legend( , lwd=<VAR>v</VAR>)</CODE></DT>
    <DD>
    <P>Line widths </P></DD>
    <DT><CODE>legend( , pch=<VAR>v</VAR>)</CODE></DT>
    <DD>
    <P>Plotting characters (character vector) </P></DD></DL></DD>
  <DT><CODE>title(main, sub)</CODE></DT>
  <DD><A name="index-title"></A> 
  <P>Adds a title <CODE>main</CODE> to the top of the current plot in a large 
  font and (optionally) a sub-title <CODE>sub</CODE> at the bottom in a smaller 
  font. </P></DD>
  <DT><CODE>axis(side, …)</CODE></DT>
  <DD><A name="index-axis"></A> 
  <P>Adds an axis to the current plot on the side given by the first argument (1 
  to 4, counting clockwise from the bottom.)  Other arguments control the 
  positioning of the axis within or beside the plot, and tick positions and 
  labels.  Useful for adding custom axes after calling <CODE>plot()</CODE> with 
  the <CODE>axes=FALSE</CODE> argument. </P></DD></DL>
<P>Low-level plotting functions usually require some positioning information 
(e.g., <EM>x</EM> and <EM>y</EM> coordinates) to determine where to place the 
new plot elements.  Coordinates are given in terms of <EM>user coordinates</EM> 
which are defined by the previous high-level graphics command and are chosen 
based on the supplied data. </P>
<P>Where <CODE>x</CODE> and <CODE>y</CODE> arguments are required, it is also
 sufficient to supply a single argument being a list with elements named 
<CODE>x</CODE> and <CODE>y</CODE>.  Similarly a matrix with two columns is also
 valid input.  In this way functions such as <CODE>locator()</CODE> (see below)
 may be used to specify positions on a plot interactively. </P>
<TABLE class="menu" border="0" cellspacing="0" summary="">
  <TBODY>
  <TR>
    <TD align="left" valign="top">• <A accesskey="1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Mathematical-annotation">Mathematical 
      annotation</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="2" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Hershey-vector-fonts">Hershey 
      vector fonts</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR></TBODY></TABLE>
<HR>
<A name="Mathematical-annotation"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Hershey-vector-fonts" 
rel="next">Hershey vector fonts</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Low_002dlevel-plotting-commands" 
rel="prev">Low-level plotting commands</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Low_002dlevel-plotting-commands" 
rel="up">Low-level plotting commands</A> &nbsp; [<A title="Table of contents" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" rel="contents">Contents</A>][<A 
title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Mathematical-annotation-1"></A> 
<H4 class="subsection">12.2.1 Mathematical annotation</H4>
<P>In some cases, it is useful to add mathematical symbols and formulae to a
 plot.  This can be achieved in R by specifying an <EM>expression</EM> rather
 than a character string in any one of <CODE>text</CODE>, <CODE>mtext</CODE>, 
<CODE>axis</CODE>, or <CODE>title</CODE>.   For example, the following code 
draws the formula for the Binomial probability function: </P>
<DIV class="example">
<PRE class="example">&gt; text(x, y, expression(paste(bgroup("(", atop(n, x), ")"), p^x, q^{n-x})))
</PRE></DIV>
<P>More information, including a full listing of the features available can
 obtained from within R using the commands: </P>
<DIV class="example">
<PRE class="example">&gt; help(plotmath)
&gt; example(plotmath)
&gt; demo(plotmath)
</PRE></DIV>
<HR>
<A name="Hershey-vector-fonts"></A> 
<DIV class="header">
<P>Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Mathematical-annotation" 
rel="prev">Mathematical annotation</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Low_002dlevel-plotting-commands" 
rel="up">Low-level plotting commands</A> &nbsp; [<A title="Table of contents" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" rel="contents">Contents</A>][<A 
title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Hershey-vector-fonts-1"></A> 
<H4 class="subsection">12.2.2 Hershey vector fonts</H4>
<P>It is possible to specify Hershey vector fonts for rendering text when using
 the <CODE>text</CODE> and <CODE>contour</CODE> functions.  There are three 
reasons for using the Hershey fonts: </P>
<UL>
  <LI> Hershey fonts can produce better output, especially on a computer screen, 
  for rotated and/or small text. </LI>
  <LI> Hershey fonts provide certain symbols that may not be available in the 
  standard fonts.  In particular, there are zodiac signs, cartographic symbols 
  and astronomical symbols. </LI>
  <LI> Hershey fonts provide cyrillic and japanese (Kana and Kanji) characters. 
  </LI></UL>
<P>More information, including tables of Hershey characters can be obtained from
 within R using the commands: </P>
<DIV class="example">
<PRE class="example">&gt; help(Hershey)
&gt; demo(Hershey)
&gt; help(Japanese)
&gt; demo(Japanese)
</PRE></DIV>
<HR>
<A name="Interacting-with-graphics"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Using-graphics-parameters" 
rel="next">Using graphics parameters</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Low_002dlevel-plotting-commands" 
rel="prev">Low-level plotting commands</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Graphics" 
rel="up">Graphics</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Interacting-with-graphics-1"></A> 
<H3 class="section">12.3 Interacting with graphics</H3>
<P>R also provides functions which allow users to extract or add information to 
a plot using a mouse.  The simplest of these is the <CODE>locator()</CODE> 
function: </P>
<DL compact="compact">
  <DT><CODE>locator(n, type)</CODE></DT>
  <DD><A name="index-locator"></A> 
  <P>Waits for the user to select locations on the current plot using the left 
  mouse button.  This continues until <CODE>n</CODE> (default 512) points have 
  been selected, or another mouse button is pressed.  The <CODE>type</CODE> 
  argument allows for plotting at the selected points and has the same effect as 
  for high-level graphics commands; the default is no plotting.  
  <CODE>locator()</CODE> returns the locations of the points selected as a list 
  with two components <CODE>x</CODE> and <CODE>y</CODE>. </P></DD></DL>
<P><CODE>locator()</CODE> is usually called with no arguments.  It is
 particularly useful for interactively selecting positions for graphic elements 
such as legends or labels when it is difficult to calculate in advance where the 
graphic should be placed.  For example, to place some informative text near an 
outlying point, the command </P>
<DIV class="example">
<PRE class="example">&gt; text(locator(1), "Outlier", adj=0)
</PRE></DIV>
<P>may be useful.  (<CODE>locator()</CODE> will be ignored if the current 
device, such as <CODE>postscript</CODE> does not support interactive pointing.) 
</P>
<DL compact="compact">
  <DT><CODE>identify(x, y, labels)</CODE></DT>
  <DD><A name="index-identify"></A> 
  <P>Allow the user to highlight any of the points defined by <CODE>x</CODE> and 
  <CODE>y</CODE> (using the left mouse button) by plotting the corresponding
   component of <CODE>labels</CODE> nearby (or the index number of the point if 
  <CODE>labels</CODE> is absent).  Returns the indices of the selected points
   when another button is pressed. </P></DD></DL>
<P>Sometimes we want to identify particular <EM>points</EM> on a plot, rather
 than their positions.  For example, we may wish the user to select some
 observation of interest from a graphical display and then manipulate that 
observation in some way.  Given a number of <EM>(x, y)</EM> coordinates in two 
numeric vectors <CODE>x</CODE> and <CODE>y</CODE>, we could use the 
<CODE>identify()</CODE> function as follows: </P>
<DIV class="example">
<PRE class="example">&gt; plot(x, y)
&gt; identify(x, y)
</PRE></DIV>
<P>The <CODE>identify()</CODE> functions performs no plotting itself, but simply
 allows the user to move the mouse pointer and click the left mouse button near 
a point.  If there is a point near the mouse pointer it will be marked with its 
index number (that is, its position in the <CODE>x</CODE>/<CODE>y</CODE> 
vectors) plotted nearby.  Alternatively, you could use some informative string 
(such as a case name) as a highlight by using the <CODE>labels</CODE> argument 
to <CODE>identify()</CODE>, or disable marking altogether with the <CODE>plot = 
FALSE</CODE> argument.  When the process is terminated (see above), 
<CODE>identify()</CODE> returns the indices of the selected points; you can use 
these indices to extract the selected points from the original vectors 
<CODE>x</CODE> and <CODE>y</CODE>. </P>
<HR>
<A name="Using-graphics-parameters"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Graphics-parameters" 
rel="next">Graphics parameters</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Interacting-with-graphics" 
rel="prev">Interacting with graphics</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Graphics" 
rel="up">Graphics</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Using-graphics-parameters-1"></A> 
<H3 class="section">12.4 Using graphics parameters</H3>
<P>When creating graphics, particularly for presentation or publication
 purposes, R’s defaults do not always produce exactly that which is required.  
You can, however, customize almost every aspect of the display using 
<EM>graphics parameters</EM>.  R maintains a list of a large number of graphics 
parameters which control things such as line style, colors, figure arrangement 
and text justification among many others.  Every graphics parameter has a name 
(such as ‘<CODE>col</CODE>’, which controls colors,) and a value (a color 
number, for example.) </P>
<P>A separate list of graphics parameters is maintained for each active device, 
and each device has a default set of parameters when initialized.  Graphics 
parameters can be set in two ways: either permanently, affecting all graphics 
functions which access the current device; or temporarily, affecting only a 
single graphics function call. </P>
<TABLE class="menu" border="0" cellspacing="0" summary="">
  <TBODY>
  <TR>
    <TD align="left" valign="top">• <A accesskey="1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-par_0028_0029-function">The 
      par() function</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="2" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Arguments-to-graphics-functions">Arguments 
      to graphics functions</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR></TBODY></TABLE>
<HR>
<A name="The-par_0028_0029-function"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Arguments-to-graphics-functions" 
rel="next">Arguments to graphics functions</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Using-graphics-parameters" 
rel="prev">Using graphics parameters</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Using-graphics-parameters" 
rel="up">Using graphics parameters</A> &nbsp; [<A title="Table of contents" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" rel="contents">Contents</A>][<A 
title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Permanent-changes_003a-The-par_0028_0029-function"></A> 
<H4 class="subsection">12.4.1 Permanent changes: The <CODE>par()</CODE> 
function</H4><A name="index-par"></A> <A name="index-Graphics-parameters"></A> 
<P>The <CODE>par()</CODE> function is used to access and modify the list of
 graphics parameters for the current graphics device. </P>
<DL compact="compact">
  <DT><CODE>par()</CODE></DT>
  <DD>
  <P>Without arguments, returns a list of all graphics parameters and their
   values for the current device. </P></DD>
  <DT><CODE>par(c("col", "lty"))</CODE></DT>
  <DD>
  <P>With a character vector argument, returns only the named graphics
   parameters (again, as a list.) </P></DD>
  <DT><CODE>par(col=4, lty=2)</CODE></DT>
  <DD>
  <P>With named arguments (or a single list argument), sets the values of the 
  named graphics parameters, and returns the original values of the parameters 
  as a list. </P></DD></DL>
<P>Setting graphics parameters with the <CODE>par()</CODE> function changes the
 value of the parameters <EM>permanently</EM>, in the sense that all future
 calls to graphics functions (on the current device) will be affected by the new 
value.  You can think of setting graphics parameters in this way as setting 
“default” values for the parameters, which will be used by all graphics 
functions unless an alternative value is given. </P>
<P>Note that calls to <CODE>par()</CODE> <EM>always</EM> affect the global 
values of graphics parameters, even when <CODE>par()</CODE> is called from 
within a function.  This is often undesirable behavior—usually we want to set
 some graphics parameters, do some plotting, and then restore the original 
values so as not to affect the user’s R session.  You can restore the initial 
values by saving the result of <CODE>par()</CODE> when making changes, and 
restoring the initial values when plotting is complete. </P>
<DIV class="example">
<PRE class="example">&gt; oldpar &lt;- par(col=4, lty=2)
  <SPAN class="roman">… plotting commands …</SPAN>
&gt; par(oldpar)
</PRE></DIV>
<P>To save and restore <EM>all</EM> settable<A name="DOCF25" href="http://127.0.0.1:29225/doc/manual/R-intro.html#FOOT25"><SUP>25</SUP></A> 
graphical parameters use </P>
<DIV class="example">
<PRE class="example">&gt; oldpar &lt;- par(no.readonly=TRUE)
  <SPAN class="roman">… plotting commands …</SPAN>
&gt; par(oldpar)
</PRE></DIV>
<HR>
<A name="Arguments-to-graphics-functions"></A> 
<DIV class="header">
<P>Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-par_0028_0029-function" 
rel="prev">The par() function</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Using-graphics-parameters" 
rel="up">Using graphics parameters</A> &nbsp; [<A title="Table of contents" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" rel="contents">Contents</A>][<A 
title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Temporary-changes_003a-Arguments-to-graphics-functions"></A> 
<H4 class="subsection">12.4.2 Temporary changes: Arguments to graphics 
functions</H4>
<P>Graphics parameters may also be passed to (almost) any graphics function as 
named arguments.  This has the same effect as passing the arguments to the 
<CODE>par()</CODE> function, except that the changes only last for the duration 
of the function call.  For example: </P>
<DIV class="example">
<PRE class="example">&gt; plot(x, y, pch="+")
</PRE></DIV>
<P>produces a scatterplot using a plus sign as the plotting character, without 
changing the default plotting character for future plots. </P>
<P>Unfortunately, this is not implemented entirely consistently and it is
 sometimes necessary to set and reset graphics parameters using 
<CODE>par()</CODE>. </P>
<HR>
<A name="Graphics-parameters"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Device-drivers" 
rel="next">Device drivers</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Using-graphics-parameters" 
rel="prev">Using graphics parameters</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Graphics" 
rel="up">Graphics</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Graphics-parameters-list"></A> 
<H3 class="section">12.5 Graphics parameters list</H3>
<P>The following sections detail many of the commonly-used graphical parameters. 
 The R help documentation for the <CODE>par()</CODE> function provides a more 
concise summary; this is provided as a somewhat more detailed alternative. </P>
<P>Graphics parameters will be presented in the following form: </P>
<DL compact="compact">
  <DT><CODE><VAR>name</VAR>=<VAR>value</VAR></CODE></DT>
  <DD>
  <P>A description of the parameter’s effect.  <VAR>name</VAR> is the name of 
  the parameter, that is, the argument name to use in calls to 
  <CODE>par()</CODE> or a graphics function.  <VAR>value</VAR> is a typical 
  value you might use when setting the parameter. </P></DD></DL>
<P>Note that <CODE>axes</CODE> is <STRONG>not</STRONG> a graphics parameter but 
an argument to a few <CODE>plot</CODE> methods: see <CODE>xaxt</CODE> and 
<CODE>yaxt</CODE>. </P>
<TABLE class="menu" border="0" cellspacing="0" summary="">
  <TBODY>
  <TR>
    <TD align="left" valign="top">• <A accesskey="1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Graphical-elements">Graphical 
      elements</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="2" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Axes-and-tick-marks">Axes 
      and tick marks</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="3" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Figure-margins">Figure 
      margins</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="4" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Multiple-figure-environment">Multiple 
      figure environment</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR></TBODY></TABLE>
<HR>
<A name="Graphical-elements"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Axes-and-tick-marks" 
rel="next">Axes and tick marks</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Graphics-parameters" 
rel="prev">Graphics parameters</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Graphics-parameters" 
rel="up">Graphics parameters</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Graphical-elements-1"></A> 
<H4 class="subsection">12.5.1 Graphical elements</H4>
<P>R plots are made up of points, lines, text and polygons (filled regions.) 
Graphical parameters exist which control how these <EM>graphical elements</EM> 
are drawn, as follows: </P>
<DL compact="compact">
  <DT><CODE>pch="+"</CODE></DT>
  <DD>
  <P>Character to be used for plotting points.  The default varies with graphics 
  drivers, but it is usually a circle. Plotted points tend to appear slightly 
  above or below the appropriate position unless you use <CODE>"."</CODE> as the 
  plotting character, which produces centered points. </P></DD>
  <DT><CODE>pch=4</CODE></DT>
  <DD>
  <P>When <CODE>pch</CODE> is given as an integer between 0 and 25 inclusive, a
   specialized plotting symbol is produced.  To see what the symbols are, use 
  the command </P>
  <DIV class="example">
<PRE class="example">&gt; legend(locator(1), as.character(0:25), pch = 0:25)
</PRE></DIV>
  <P>Those from 21 to 25 may appear to duplicate earlier symbols, but can be
   coloured in different ways: see the help on <CODE>points</CODE> and its
   examples. </P>
  <P>In addition, <CODE>pch</CODE> can be a character or a number in the range 
  <CODE>32:255</CODE> representing a character in the current font. </P></DD>
  <DT><CODE>lty=2</CODE></DT>
  <DD>
  <P>Line types.  Alternative line styles are not supported on all graphics
   devices (and vary on those that do) but line type 1 is always a solid line, 
  line type 0 is always invisible, and line types 2 and onwards are dotted or 
  dashed lines, or some combination of both. </P></DD>
  <DT><CODE>lwd=2</CODE></DT>
  <DD>
  <P>Line widths.  Desired width of lines, in multiples of the “standard” line 
  width.  Affects axis lines as well as lines drawn with <CODE>lines()</CODE>, 
  etc.  Not all devices support this, and some have restrictions on the widths 
  that can be used. </P></DD>
  <DT><CODE>col=2</CODE></DT>
  <DD>
  <P>Colors to be used for points, lines, text, filled regions and images. A 
  number from the current palette (see <CODE>?palette</CODE>) or a named colour. 
  </P></DD>
  <DT><CODE>col.axis</CODE></DT>
  <DT><CODE>col.lab</CODE></DT>
  <DT><CODE>col.main</CODE></DT>
  <DT><CODE>col.sub</CODE></DT>
  <DD>
  <P>The color to be used for axis annotation, <EM>x</EM> and <EM>y</EM> labels,
   main and sub-titles, respectively. </P></DD>
  <DT><CODE>font=2</CODE></DT>
  <DD>
  <P>An integer which specifies which font to use for text.  If possible, device 
  drivers arrange so that <CODE>1</CODE> corresponds to plain text, 
  <CODE>2</CODE> to bold face, <CODE>3</CODE> to italic, <CODE>4</CODE> to bold 
  italic and <CODE>5</CODE> to a symbol font (which include Greek letters). 
  </P></DD>
  <DT><CODE>font.axis</CODE></DT>
  <DT><CODE>font.lab</CODE></DT>
  <DT><CODE>font.main</CODE></DT>
  <DT><CODE>font.sub</CODE></DT>
  <DD>
  <P>The font to be used for axis annotation, <EM>x</EM> and <EM>y</EM> labels,
   main and sub-titles, respectively. </P></DD>
  <DT><CODE>adj=-0.1</CODE></DT>
  <DD>
  <P>Justification of text relative to the plotting position.  <CODE>0</CODE> 
  means left justify, <CODE>1</CODE> means right justify and <CODE>0.5</CODE> 
  means to center horizontally about the plotting position.  The actual value is
   the proportion of text that appears to the left of the plotting position, so 
  a value of <CODE>-0.1</CODE> leaves a gap of 10% of the text width between the 
  text and the plotting position. </P></DD>
  <DT><CODE>cex=1.5</CODE></DT>
  <DD>
  <P>Character expansion.  The value is the desired size of text characters
   (including plotting characters) relative to the default text size. </P></DD>
  <DT><CODE>cex.axis</CODE></DT>
  <DT><CODE>cex.lab</CODE></DT>
  <DT><CODE>cex.main</CODE></DT>
  <DT><CODE>cex.sub</CODE></DT>
  <DD>
  <P>The character expansion to be used for axis annotation, <EM>x</EM> and 
  <EM>y</EM> labels, main and sub-titles, respectively. </P></DD></DL>
<HR>
<A name="Axes-and-tick-marks"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Figure-margins" 
rel="next">Figure margins</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Graphical-elements" 
rel="prev">Graphical elements</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Graphics-parameters" 
rel="up">Graphics parameters</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Axes-and-tick-marks-1"></A> 
<H4 class="subsection">12.5.2 Axes and tick marks</H4>
<P>Many of R’s high-level plots have axes, and you can construct axes yourself 
with the low-level <CODE>axis()</CODE> graphics function.  Axes have three main 
components: the <EM>axis line</EM> (line style controlled by the 
<CODE>lty</CODE> graphics parameter), the <EM>tick marks</EM> (which mark off 
unit divisions along the axis line) and the <EM>tick labels</EM> (which mark the
 units.) These components can be customized with the following graphics
 parameters. </P>
<DL compact="compact">
  <DT><CODE>lab=c(5, 7, 12)</CODE></DT>
  <DD>
  <P>The first two numbers are the desired number of tick intervals on the 
  <EM>x</EM> and <EM>y</EM> axes respectively.  The third number is the desired 
  length of axis labels, in characters (including the decimal point.)  Choosing 
  a too-small value for this parameter may result in all tick labels being 
  rounded to the same number! </P></DD>
  <DT><CODE>las=1</CODE></DT>
  <DD>
  <P>Orientation of axis labels.  <CODE>0</CODE> means always parallel to axis, 
  <CODE>1</CODE> means always horizontal, and <CODE>2</CODE> means always
   perpendicular to the axis. </P></DD>
  <DT><CODE>mgp=c(3, 1, 0)</CODE></DT>
  <DD>
  <P>Positions of axis components.  The first component is the distance from the 
  axis label to the axis position, in text lines.  The second component is the 
  distance to the tick labels, and the final component is the distance from the 
  axis position to the axis line (usually zero). Positive numbers measure 
  outside the plot region, negative numbers inside. </P></DD>
  <DT><CODE>tck=0.01</CODE></DT>
  <DD>
  <P>Length of tick marks, as a fraction of the size of the plotting region.
   When <CODE>tck</CODE> is small (less than 0.5) the tick marks on the 
  <EM>x</EM> and <EM>y</EM> axes are forced to be the same size.  A value of 1 
  gives grid lines.  Negative values give tick marks outside the plotting
   region.  Use <CODE>tck=0.01</CODE> and <CODE>mgp=c(1,-1.5,0)</CODE> for 
  internal tick marks. </P></DD>
  <DT><CODE>xaxs="r"</CODE></DT>
  <DT><CODE>yaxs="i"</CODE></DT>
  <DD>
  <P>Axis styles for the <EM>x</EM> and <EM>y</EM> axes, respectively.   With
   styles <CODE>"i"</CODE> (internal) and <CODE>"r"</CODE> (the default) tick 
  marks always fall within the range of the data, however style <CODE>"r"</CODE>
   leaves a small amount of space at the edges.  (S has other styles not 
  implemented in R.) </P></DD></DL>
<HR>
<A name="Figure-margins"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Multiple-figure-environment" 
rel="next">Multiple figure environment</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Axes-and-tick-marks" 
rel="prev">Axes and tick marks</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Graphics-parameters" 
rel="up">Graphics parameters</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Figure-margins-1"></A> 
<H4 class="subsection">12.5.3 Figure margins</H4>
<P>A single plot in R is known as a <CODE>figure</CODE> and comprises a <EM>plot 
region</EM> surrounded by margins (possibly containing axis labels, titles, 
etc.) and (usually) bounded by the axes themselves. </P>
<P>A typical figure is </P><IMG alt="images/fig11" src="An%20Introduction%20to%20R_files/fig11.png"> 
<P>Graphics parameters controlling figure layout include: </P>
<DL compact="compact">
  <DT><CODE>mai=c(1, 0.5, 0.5, 0)</CODE></DT>
  <DD>
  <P>Widths of the bottom, left, top and right margins, respectively, measured 
  in inches. </P></DD>
  <DT><CODE>mar=c(4, 2, 2, 1)</CODE></DT>
  <DD>
  <P>Similar to <CODE>mai</CODE>, except the measurement unit is text lines. 
  </P></DD></DL>
<P><CODE>mar</CODE> and <CODE>mai</CODE> are equivalent in the sense that 
setting one changes the value of the other.  The default values chosen for this
 parameter are often too large; the right-hand margin is rarely needed, and 
neither is the top margin if no title is being used.  The bottom and left 
margins must be large enough to accommodate the axis and tick labels.  
Furthermore, the default is chosen without regard to the size of the device 
surface: for example, using the <CODE>postscript()</CODE> driver with the 
<CODE>height=4</CODE> argument will result in a plot which is about 50% margin 
unless <CODE>mar</CODE> or <CODE>mai</CODE> are set explicitly.  When multiple 
figures are in use (see below) the margins are reduced, however this may not be 
enough when many figures share the same page. </P>
<HR>
<A name="Multiple-figure-environment"></A> 
<DIV class="header">
<P>Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Figure-margins" 
rel="prev">Figure margins</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Graphics-parameters" 
rel="up">Graphics parameters</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Multiple-figure-environment-1"></A> 
<H4 class="subsection">12.5.4 Multiple figure environment</H4>
<P>R allows you to create an <EM>n</EM> by <EM>m</EM> array of figures on a
 single page.  Each figure has its own margins, and the array of figures is 
optionally surrounded by an <EM>outer margin</EM>, as shown in the following 
figure. </P><IMG alt="images/fig12" src="An%20Introduction%20to%20R_files/fig12.png"> 
<P>The graphical parameters relating to multiple figures are as follows: </P>
<DL compact="compact">
  <DT><CODE>mfcol=c(3, 2)</CODE></DT>
  <DT><CODE>mfrow=c(2, 4)</CODE></DT>
  <DD>
  <P>Set the size of a multiple figure array.  The first value is the number of
   rows; the second is the number of columns.  The only difference between these 
  two parameters is that setting <CODE>mfcol</CODE> causes figures to be filled 
  by column; <CODE>mfrow</CODE> fills by rows. </P>
  <P>The layout in the Figure could have been created by setting 
  <CODE>mfrow=c(3,2)</CODE>; the figure shows the page after four plots have
   been drawn. </P>
  <P>Setting either of these can reduce the base size of symbols and text
   (controlled by <CODE>par("cex")</CODE> and the pointsize of the device).  In 
  a layout with exactly two rows and columns the base size is reduced by a
   factor of 0.83: if there are three or more of either rows or columns, the 
  reduction factor is 0.66. </P></DD>
  <DT><CODE>mfg=c(2, 2, 3, 2)</CODE></DT>
  <DD>
  <P>Position of the current figure in a multiple figure environment.  The first
   two numbers are the row and column of the current figure; the last two are 
  the number of rows and columns in the multiple figure array.  Set this 
  parameter to jump between figures in the array.  You can even use different 
  values for the last two numbers than the <EM>true</EM> values for 
  unequally-sized figures on the same page. </P></DD>
  <DT><CODE>fig=c(4, 9, 1, 4)/10</CODE></DT>
  <DD>
  <P>Position of the current figure on the page.  Values are the positions of
   the left, right, bottom and top edges respectively, as a percentage of the 
  page measured from the bottom left corner.  The example value would be for a 
  figure in the bottom right of the page.  Set this parameter for arbitrary 
  positioning of figures within a page.  If you want to add a figure to a 
  current page, use <CODE>new=TRUE</CODE> as well (unlike S). </P></DD>
  <DT><CODE>oma=c(2, 0, 3, 0)</CODE></DT>
  <DT><CODE>omi=c(0, 0, 0.8, 0)</CODE></DT>
  <DD>
  <P>Size of outer margins.  Like <CODE>mar</CODE> and <CODE>mai</CODE>, the 
  first measures in text lines and the second in inches, starting with the
   bottom margin and working clockwise. </P></DD></DL>
<P>Outer margins are particularly useful for page-wise titles, etc.  Text can be 
added to the outer margins with the <CODE>mtext()</CODE> function with argument 
<CODE>outer=TRUE</CODE>.  There are no outer margins by default, however, so you 
must create them explicitly using <CODE>oma</CODE> or <CODE>omi</CODE>. </P>
<P>More complicated arrangements of multiple figures can be produced by the 
<CODE>split.screen()</CODE> and <CODE>layout()</CODE> functions, as well as by 
the <STRONG>grid</STRONG> and <A href="http://cran.r-project.org/package=lattice"><STRONG>lattice</STRONG></A> 
packages. </P>
<HR>
<A name="Device-drivers"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Dynamic-graphics" 
rel="next">Dynamic graphics</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Graphics-parameters" 
rel="prev">Graphics parameters</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Graphics" 
rel="up">Graphics</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Device-drivers-1"></A> 
<H3 class="section">12.6 Device drivers</H3><A name="index-Graphics-device-drivers"></A> 
<P>R can generate graphics (of varying levels of quality) on almost any type of 
display or printing device.  Before this can begin, however, R needs to be 
informed what type of device it is dealing with.  This is done by starting a 
<EM>device driver</EM>.  The purpose of a device driver is to convert graphical 
instructions from R (“draw a line,” for example) into a form that the particular 
device can understand. </P>
<P>Device drivers are started by calling a device driver function.  There is one 
such function for every device driver: type <CODE>help(Devices)</CODE> for a 
list of them all.  For example, issuing the command </P>
<DIV class="example">
<PRE class="example">&gt; postscript()
</PRE></DIV>
<P>causes all future graphics output to be sent to the printer in PostScript 
format.  Some commonly-used device drivers are: </P>
<DL compact="compact">
  <DT><CODE>X11()</CODE></DT>
  <DD><A name="index-X11"></A> 
  <P>For use with the X11 window system on Unix-alikes </P></DD>
  <DT><CODE>windows()</CODE></DT>
  <DD><A name="index-windows"></A> 
  <P>For use on Windows </P></DD>
  <DT><CODE>quartz()</CODE></DT>
  <DD><A name="index-quartz"></A> 
  <P>For use on OS X </P></DD>
  <DT><CODE>postscript()</CODE></DT>
  <DD><A name="index-postscript"></A> 
  <P>For printing on PostScript printers, or creating PostScript graphics files. 
  </P></DD>
  <DT><CODE>pdf()</CODE></DT>
  <DD><A name="index-pdf"></A> 
  <P>Produces a PDF file, which can also be included into PDF files. </P></DD>
  <DT><CODE>png()</CODE></DT>
  <DD><A name="index-png"></A> 
  <P>Produces a bitmap PNG file. (Not always available: see its help page.) 
  </P></DD>
  <DT><CODE>jpeg()</CODE></DT>
  <DD><A name="index-jpeg"></A> 
  <P>Produces a bitmap JPEG file, best used for <CODE>image</CODE> plots. (Not 
  always available: see its help page.) </P></DD></DL>
<P>When you have finished with a device, be sure to terminate the device driver 
by issuing the command </P>
<DIV class="example">
<PRE class="example">&gt; dev.off()
</PRE></DIV>
<P>This ensures that the device finishes cleanly; for example in the case of 
hardcopy devices this ensures that every page is completed and has been sent to 
the printer.  (This will happen automatically at the normal end of a session.) 
</P>
<TABLE class="menu" border="0" cellspacing="0" summary="">
  <TBODY>
  <TR>
    <TD align="left" valign="top">• <A accesskey="1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#PostScript-diagrams-for-typeset-documents">PostScript 
      diagrams for typeset documents</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="2" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Multiple-graphics-devices">Multiple 
      graphics devices</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR></TBODY></TABLE>
<HR>
<A name="PostScript-diagrams-for-typeset-documents"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Multiple-graphics-devices" 
rel="next">Multiple graphics devices</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Device-drivers" 
rel="prev">Device drivers</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Device-drivers" 
rel="up">Device drivers</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="PostScript-diagrams-for-typeset-documents-1"></A> 
<H4 class="subsection">12.6.1 PostScript diagrams for typeset documents</H4>
<P>By passing the <CODE>file</CODE> argument to the <CODE>postscript()</CODE> 
device driver function, you may store the graphics in PostScript format in a
 file of your choice.  The plot will be in landscape orientation unless the 
<CODE>horizontal=FALSE</CODE> argument is given, and you can control the size of 
the graphic with the <CODE>width</CODE> and <CODE>height</CODE> arguments (the 
plot will be scaled as appropriate to fit these dimensions.) For example, the 
command </P>
<DIV class="example">
<PRE class="example">&gt; postscript("file.ps", horizontal=FALSE, height=5, pointsize=10)
</PRE></DIV>
<P>will produce a file containing PostScript code for a figure five inches high, 
perhaps for inclusion in a document.  It is important to note that if the file 
named in the command already exists, it will be overwritten. This is the case 
even if the file was only created earlier in the same R session. </P>
<P>Many usages of PostScript output will be to incorporate the figure in another 
document.  This works best when <EM>encapsulated</EM> PostScript is produced: R 
always produces conformant output, but only marks the output as such when the 
<CODE>onefile=FALSE</CODE> argument is supplied.  This unusual notation stems 
from S-compatibility: it really means that the output will be a single page 
(which is part of the EPSF specification).  Thus to produce a plot for inclusion 
use something like </P>
<DIV class="example">
<PRE class="example">&gt; postscript("plot1.eps", horizontal=FALSE, onefile=FALSE,
             height=8, width=6, pointsize=10)
</PRE></DIV>
<HR>
<A name="Multiple-graphics-devices"></A> 
<DIV class="header">
<P>Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#PostScript-diagrams-for-typeset-documents" 
rel="prev">PostScript diagrams for typeset documents</A>, Up: <A accesskey="u" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#Device-drivers" 
rel="up">Device drivers</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Multiple-graphics-devices-1"></A> 
<H4 class="subsection">12.6.2 Multiple graphics devices</H4>
<P>In advanced use of R it is often useful to have several graphics devices in 
use at the same time.  Of course only one graphics device can accept graphics 
commands at any one time, and this is known as the <EM>current device</EM>.  
When multiple devices are open, they form a numbered sequence with names giving 
the kind of device at any position. </P>
<P>The main commands used for operating with multiple devices, and their
 meanings are as follows: </P>
<DL compact="compact">
  <DT><CODE>X11()</CODE></DT>
  <DD>
  <P>[UNIX] </P></DD>
  <DT><CODE>windows()</CODE></DT>
  <DT><CODE>win.printer()</CODE></DT>
  <DT><CODE>win.metafile()</CODE></DT>
  <DD>
  <P>[Windows] </P></DD>
  <DT><CODE>quartz()</CODE></DT>
  <DD>
  <P>[OS X] </P></DD>
  <DT><CODE>postscript()</CODE></DT>
  <DT><CODE>pdf()</CODE></DT>
  <DT><CODE>png()</CODE></DT>
  <DT><CODE>jpeg()</CODE></DT>
  <DT><CODE>tiff()</CODE></DT>
  <DT><CODE>bitmap()</CODE></DT>
  <DT><CODE>…</CODE></DT>
  <DD>
  <P>Each new call to a device driver function opens a new graphics device, thus 
  extending by one the device list.  This device becomes the current device, to 
  which graphics output will be sent. </P></DD>
  <DT><CODE>dev.list()</CODE></DT>
  <DD><A name="index-dev_002elist"></A> 
  <P>Returns the number and name of all active devices.  The device at position 
  1 on the list is always the <EM>null device</EM> which does not accept 
  graphics commands at all. </P></DD>
  <DT><CODE>dev.next()</CODE></DT>
  <DT><CODE>dev.prev()</CODE></DT>
  <DD><A name="index-dev_002enext"></A> <A name="index-dev_002eprev"></A> 
  <P>Returns the number and name of the graphics device next to, or previous to 
  the current device, respectively. </P></DD>
  <DT><CODE>dev.set(which=<VAR>k</VAR>)</CODE></DT>
  <DD><A name="index-dev_002eset"></A> 
  <P>Can be used to change the current graphics device to the one at position 
  <VAR>k</VAR> of the device list.  Returns the number and label of the device. 
  </P></DD>
  <DT><CODE>dev.off(<VAR>k</VAR>)</CODE></DT>
  <DD><A name="index-dev_002eoff"></A> 
  <P>Terminate the graphics device at point <VAR>k</VAR> of the device list.  
  For some devices, such as <CODE>postscript</CODE> devices, this will either 
  print the file immediately or correctly complete the file for later printing,
   depending on how the device was initiated. </P></DD>
  <DT><CODE>dev.copy(device, …, which=<VAR>k</VAR>)</CODE></DT>
  <DT><CODE>dev.print(device, …, which=<VAR>k</VAR>)</CODE></DT>
  <DD>
  <P>Make a copy of the device <VAR>k</VAR>.  Here <CODE>device</CODE> is a 
  device function, such as <CODE>postscript</CODE>, with extra arguments, if 
  needed, specified by ‘<SAMP>…</SAMP>’.  <CODE>dev.print</CODE> is similar, but 
  the copied device is immediately closed, so that end actions, such as printing 
  hardcopies, are immediately performed. </P></DD>
  <DT><CODE>graphics.off()</CODE></DT>
  <DD>
  <P>Terminate all graphics devices on the list, except the null device. 
  </P></DD></DL>
<HR>
<A name="Dynamic-graphics"></A> 
<DIV class="header">
<P>Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Device-drivers" 
rel="prev">Device drivers</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Graphics" 
rel="up">Graphics</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Dynamic-graphics-1"></A> 
<H3 class="section">12.7 Dynamic graphics</H3><A 
name="index-Dynamic-graphics"></A> 
<P>R does not have builtin capabilities for dynamic or interactive graphics, 
e.g.&nbsp;rotating point clouds or to “brushing” (interactively highlighting) 
points. However, extensive dynamic graphics facilities are available in the 
system GGobi by Swayne, Cook and Buja available from </P>
<BLOCKQUOTE>
  <P><A href="http://www.ggobi.org/">http://www.ggobi.org/</A> </P></BLOCKQUOTE>
<P>and these can be accessed from R via the package <A href="http://cran.r-project.org/package=rggobi"><STRONG>rggobi</STRONG></A>, 
described at <A 
href="http://www.ggobi.org/rggobi">http://www.ggobi.org/rggobi</A>. </P>
<P>Also, package <A 
href="http://cran.r-project.org/package=rgl"><STRONG>rgl</STRONG></A> provides 
ways to interact with 3D plots, for example of surfaces. </P>
<HR>
<A name="Packages"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#OS-facilities" 
rel="next">OS facilities</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Graphics" 
rel="prev">Graphics</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Top" 
rel="up">Top</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Packages-1"></A> 
<H2 class="chapter">13 Packages</H2><A name="index-Packages-1"></A> 
<P>All R functions and datasets are stored in <EM>packages</EM>.  Only when a 
package is loaded are its contents available.  This is done both for efficiency 
(the full list would take more memory and would take longer to search than a 
subset), and to aid package developers, who are protected from name clashes with 
other code.  The process of developing packages is described in <A href="http://127.0.0.1:29225/doc/manual/R-exts.html#Creating-R-packages">Creating 
R packages</A> in <CITE>Writing R Extensions</CITE>.  Here, we will describe 
them from a user’s point of view. </P>
<P>To see which packages are installed at your site, issue the command </P>
<DIV class="example">
<PRE class="example">&gt; library()
</PRE></DIV>
<P>with no arguments.  To load a particular package (e.g., the <A href="http://cran.r-project.org/package=boot"><STRONG>boot</STRONG></A>
 package containing functions from Davison &amp; Hinkley (1997)), use a command 
like </P>
<DIV class="example">
<PRE class="example">&gt; library(boot)
</PRE></DIV>
<P>Users connected to the Internet can use the <CODE>install.packages()</CODE>
 and <CODE>update.packages()</CODE> functions (available through the 
<CODE>Packages</CODE> menu in the Windows and OS X GUIs, see <A href="http://127.0.0.1:29225/doc/manual/R-admin.html#Installing-packages">Installing
 packages</A> in <CITE>R Installation and Administration</CITE>) to install and 
update packages. </P>
<P>To see which packages are currently loaded, use </P>
<DIV class="example">
<PRE class="example">&gt; search()
</PRE></DIV>
<P>to display the search list.  Some packages may be loaded but not available on 
the search list (see <A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Namespaces">Namespaces</A>): 
these will be included in the list given by </P>
<DIV class="example">
<PRE class="example">&gt; loadedNamespaces()
</PRE></DIV>
<P>To see a list of all available help topics in an installed package, use </P>
<DIV class="example">
<PRE class="example">&gt; help.start()
</PRE></DIV>
<P>to start the <ACRONYM>HTML</ACRONYM> help system, and then navigate to the 
package listing in the <CODE>Reference</CODE> section. </P>
<TABLE class="menu" border="0" cellspacing="0" summary="">
  <TBODY>
  <TR>
    <TD align="left" valign="top">• <A accesskey="1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Standard-packages">Standard 
      packages</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="2" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Contributed-packages-and-CRAN">Contributed 
      packages and CRAN</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="3" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Namespaces">Namespaces</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR></TBODY></TABLE>
<HR>
<A name="Standard-packages"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Contributed-packages-and-CRAN" 
rel="next">Contributed packages and CRAN</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Packages" 
rel="prev">Packages</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Packages" 
rel="up">Packages</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Standard-packages-1"></A> 
<H3 class="section">13.1 Standard packages</H3>
<P>The standard (or <EM>base</EM>) packages are considered part of the R source 
code.  They contain the basic functions that allow R to work, and the datasets 
and standard statistical and graphical functions that are described in this 
manual.  They should be automatically available in any R installation.  See <A 
href="http://127.0.0.1:29225/doc/manual/R-FAQ.html#Which-add_002don-packages-exist-for-R_003f">R
 packages</A> in <CITE>R FAQ</CITE>, for a complete list. </P>
<HR>
<A name="Contributed-packages-and-CRAN"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Namespaces" 
rel="next">Namespaces</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Standard-packages" 
rel="prev">Standard packages</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Packages" 
rel="up">Packages</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Contributed-packages-and-CRAN-1"></A> 
<H3 class="section">13.2 Contributed packages and <ACRONYM>CRAN</ACRONYM></H3><A 
name="index-CRAN"></A> 
<P>There are thousands of contributed packages for R, written by many different 
authors.  Some of these packages implement specialized statistical methods, 
others give access to data or hardware, and others are designed to complement 
textbooks.  Some (the <EM>recommended</EM> packages) are distributed with every 
binary distribution of R.  Most are available for download from 
<ACRONYM>CRAN</ACRONYM> (<A 
href="https://cran.r-project.org/">https://CRAN.R-project.org/</A> and its 
mirrors) and other repositories such as Bioconductor (<A href="https://www.bioconductor.org/">https://www.bioconductor.org/</A>)
 and Omegahat (<A href="http://www.omegahat.org/">http://www.omegahat.org/</A>). 
 The <EM>R FAQ</EM> contains a list of CRAN packages current at the time of 
release, but the collection of available packages changes very frequently. </P>
<HR>
<A name="Namespaces"></A> 
<DIV class="header">
<P>Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Contributed-packages-and-CRAN" 
rel="prev">Contributed packages and CRAN</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Packages" 
rel="up">Packages</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Namespaces-1"></A> 
<H3 class="section">13.3 Namespaces</H3><A name="index-Namespace"></A> <A name="index-_003a_003a"></A> 
<A name="index-_003a_003a_003a"></A> 
<P>All packages have <EM>namespaces</EM>, and have since R 2.14.0. Namespaces do 
three things: they allow the package writer to hide functions and data that are 
meant only for internal use, they prevent functions from breaking when a user 
(or other package writer) picks a name that clashes with one in the package, and 
they provide a way to refer to an object within a particular package. </P>
<P>For example, <CODE>t()</CODE> is the transpose function in R, but users might 
define their own function named <CODE>t</CODE>.  Namespaces prevent the user’s 
definition from taking precedence, and breaking every function that tries to 
transpose a matrix. </P>
<P>There are two operators that work with namespaces.  The double-colon operator 
<CODE>::</CODE> selects definitions from a particular namespace. In the example 
above, the transpose function will always be available as <CODE>base::t</CODE>, 
because it is defined in the <CODE>base</CODE> package. Only functions that are 
exported from the package can be retrieved in this way. </P>
<P>The triple-colon operator <CODE>:::</CODE> may be seen in a few places in R
 code: it acts like the double-colon operator but also allows access to hidden 
objects.  Users are more likely to use the <CODE>getAnywhere()</CODE> function, 
which searches multiple packages. </P>
<P>Packages are often inter-dependent, and loading one may cause others to be 
automatically loaded.  The colon operators described above will also cause 
automatic loading of the associated package.  When packages with namespaces are 
loaded automatically they are not added to the search list. </P>
<HR>
<A name="OS-facilities"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#A-sample-session" 
rel="next">A sample session</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Packages" 
rel="prev">Packages</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Top" 
rel="up">Top</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="OS-facilities-1"></A> 
<H2 class="chapter">14 OS facilities</H2>
<P>R has quite extensive facilities to access the OS under which it is running: 
this allows it to be used as a scripting language and that ability is much used 
by R itself, for example to install packages. </P>
<P>Because R’s own scripts need to work across all platforms, considerable 
effort has gone into make the scripting facilities as platform-independent as is 
feasible. </P>
<TABLE class="menu" border="0" cellspacing="0" summary="">
  <TBODY>
  <TR>
    <TD align="left" valign="top">• <A accesskey="1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Files-and-directories">Files 
      and directories</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="2" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Filepaths">Filepaths</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="3" href="http://127.0.0.1:29225/doc/manual/R-intro.html#System-commands">System 
      commands</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="4" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Compression-and-Archives">Compression 
      and Archives</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR></TBODY></TABLE>
<HR>
<A name="Files-and-directories"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Filepaths" 
rel="next">Filepaths</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#OS-facilities" 
rel="prev">OS facilities</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#OS-facilities" 
rel="up">OS facilities</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Files-and-directories-1"></A> 
<H3 class="section">14.1 Files and directories</H3>
<P>There are many functions to manipulate files and directories. Here are
 pointers to some of the more commonly used ones. </P>
<P>To create an (empty) file or directory, use <CODE>file.create</CODE> or 
<CODE>create.dir</CODE>.  (These are the analogues of the POSIX utilities 
<CODE>touch</CODE> and <CODE>mkdir</CODE>.)  For temporary files and directories 
in the R session directory see <CODE>tempfile</CODE>. </P>
<P>Files can be removed by either <CODE>file.remove</CODE> or 
<CODE>unlink</CODE>: the latter can remove directory trees. </P>
<P>For directory listings use <CODE>list.files</CODE> (also available as 
<CODE>dir</CODE>) or <CODE>list.dirs</CODE>. These can select files using a 
regular expression: to select by wildcards use <CODE>Sys.glob</CODE>. </P>
<P>Many types of information on a filepath (including for example if it is a 
file or directory) can be found by <CODE>file.info</CODE>. </P>
<P>There are several ways to find out if a file ‘exists’ (and file can exist on 
the filesystem and not be visible to the current user). There are functions 
<CODE>file.exists</CODE>, <CODE>file.access</CODE> and <CODE>file_test</CODE> 
with various versions of this test: <CODE>file_test</CODE> is a version of the 
POSIX <CODE>test</CODE> command for those familiar with shell scripting. </P>
<P>Function <CODE>file.copy</CODE> is the R analogue of the POSIX command 
<CODE>cp</CODE>. </P>
<P>Choosing files can be done interactively by <CODE>file.choose</CODE>: the
 Windows port has the more versatile functions <CODE>choose.files</CODE> and 
<CODE>choose.dir</CODE> and there are similar functions in the 
<STRONG>tcltk</STRONG> package: <CODE>tk_choose.files</CODE> and 
<CODE>tk_choose.dir</CODE>. </P>
<P>Functions <CODE>file.show</CODE> and <CODE>file.edit</CODE> will display and 
edit one or more files in a way appropriate to the R port, using the facilities 
of a console (such as RGui on Windows or R.app on OS X) if one is in use. </P>
<P>There is some support for <EM>links</EM> in the filesystem: see functions 
<CODE>file.link</CODE> and <CODE>Sys.readlink</CODE>. </P>
<HR>
<A name="Filepaths"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#System-commands" 
rel="next">System commands</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Files-and-directories" 
rel="prev">Files and directories</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#OS-facilities" 
rel="up">OS facilities</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Filepaths-1"></A> 
<H3 class="section">14.2 Filepaths</H3>
<P>With a few exceptions, R relies on the underlying OS functions to manipulate 
filepaths.  Some aspects of this are allowed to depend on the OS, and do, even 
down to the version of the OS.  There are POSIX standards for how OSes should 
interpret filepaths and many R users assume POSIX compliance: but Windows does 
not claim to be compliant and other OSes may be less than completely compliant. 
</P>
<P>The following are some issues which have been encountered with filepaths. 
</P>
<UL>
  <LI> POSIX filesystems are case-sensitive, so <SAMP>foo.png</SAMP> and 
  <SAMP>Foo.PNG</SAMP> are different files.  However, the defaults on Windows
   and OS X are to be case-insensitive, and FAT filesystems (commonly used on 
  removable storage) are not normally case-sensitive (and all filepaths may be 
  mapped to lower case). </LI>
  <LI> Almost all the Windows’ OS services support the use of slash or backslash 
  as the filepath separator, and R converts the known exceptions to the form 
  required by Windows. </LI>
  <LI> The behaviour of filepaths with a trailing slash is OS-dependent.  Such
   paths are not valid on Windows and should not be expected to work. POSIX-2008 
  requires such paths to match only directories, but earlier versions allowed 
  them to also match files.  So they are best avoided. </LI>
  <LI> Multiple slashes in filepaths such as <SAMP>/abc//def</SAMP> are valid on
   POSIX filesystems and treated as if there was only one slash.  They are 
  <EM>usually</EM> accepted by Windows’ OS functions.  However, leading double 
  slashes may have a different meaning. </LI>
  <LI> Windows’ UNC filepaths (such as <SAMP>\\server\dir1\dir2\file</SAMP> and 
  <SAMP>\\?\UNC\server\dir1\dir2\file</SAMP>) are not supported, but they may
   work in some R functions.  POSIX filesystems are allowed to treat a leading 
  double slash specially. </LI>
  <LI> Windows allows filepaths containing drives and relative to the current
   directory on a drive, e.g. <SAMP>d:foo/bar</SAMP> refers to 
  <SAMP>d:/a/b/c/foo/bar</SAMP> if the current directory <EM>on drive 
  <SAMP>d:</SAMP></EM> is <SAMP>/a/b/c</SAMP>.  It is intended that these work, 
  but the use of absolute paths is safer. </LI></UL>
<P>Functions <CODE>basename</CODE> and <CODE>dirname</CODE> select parts of a 
file path: the recommended way to assemble a file path from components is 
<CODE>file.path</CODE>.  Function <CODE>pathexpand</CODE> does ‘tilde 
expansion’, substituting values for home directories (the current user’s, and
 perhaps those of other users). </P>
<P>On filesystems with links, a single file can be referred to by many
 filepaths.  Function <CODE>normalizePath</CODE> will find a canonical filepath. 
</P>
<P>Windows has the concepts of short (‘8.3’) and long file names: 
<CODE>normalizePath</CODE> will return an absolute path using long file names
 and <CODE>shortPathName</CODE> will return a version using short names.  The
 latter does not contain spaces and uses backslash as the separator, so is 
sometimes useful for exporting names from R. </P>
<P>File <EM>permissions</EM> are a related topic.  R has support for the POSIX 
concepts of read/write/execute permission for owner/group/all but this may be 
only partially supported on the filesystem (so for example on Windows only 
read-only files (for the account running the R session) are recognized.  Access 
Control Lists (ACLs) are employed on several filesystems, but do not have an 
agreed standard and R has no facilities to control them.  Use 
<CODE>Sys.chmod</CODE> to change permissions. </P>
<HR>
<A name="System-commands"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Compression-and-Archives" 
rel="next">Compression and Archives</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Filepaths" 
rel="prev">Filepaths</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#OS-facilities" 
rel="up">OS facilities</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="System-commands-1"></A> 
<H3 class="section">14.3 System commands</H3>
<P>Functions <CODE>system</CODE> and <CODE>system2</CODE> are used to invoke a 
system command and optionally collect its output.  <CODE>system2</CODE> is a 
little more general but its main advantage is that it is easier to write
 cross-platform code using it. </P>
<P><CODE>system</CODE> behaves differently on Windows from other OSes (because
 the API C call of that name does).  Elsewhere it invokes a shell to run the 
command: the Windows port of R has a function <CODE>shell</CODE> to do that. 
</P>
<P>To find out if the OS includes a command, use <CODE>Sys.which</CODE>, which
 attempts to do this in a cross-platform way (unfortunately it is not a standard 
OS service). </P>
<P>Function <CODE>shQuote</CODE> will quote filepaths as needed for commands in
 the current OS. </P>
<HR>
<A name="Compression-and-Archives"></A> 
<DIV class="header">
<P>Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#System-commands" 
rel="prev">System commands</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#OS-facilities" 
rel="up">OS facilities</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Compression-and-Archives-1"></A> 
<H3 class="section">14.4 Compression and Archives</H3>
<P>Recent versions of R have extensive facilities to read and write compressed 
files, often transparently.  Reading of files in R is to a vey large extent done 
by <EM>connections</EM>, and the <CODE>file</CODE> function which is used to 
open a connection to a file (or a URL) and is able to identify the compression 
used from the ‘magic’ header of the file. </P>
<P>The type of compression which has been supported for longest is 
<CODE>gzip</CODE> compression, and that remains a good general compromise. Files 
compressed by the earlier Unix <CODE>compress</CODE> utility can also be read, 
but these are becoming rare.  Two other forms of compression, those of the 
<CODE>bzip2</CODE> and <CODE>xz</CODE> utilities are also available.  These 
generally achieve higher rates of compression (depending on the file, much 
higher) at the expense of slower decompression and much slower compression. </P>
<P>There is some confusion between <CODE>xz</CODE> and <CODE>lzma</CODE>
 compression (see <A 
href="https://en.wikipedia.org/wiki/Xz">https://en.wikipedia.org/wiki/Xz</A> and 
<A 
href="https://en.wikipedia.org/wiki/LZMA">https://en.wikipedia.org/wiki/LZMA</A>): 
R can read files compressed by most versions of either. </P>
<P>File archives are single files which contain a collection of files, the most 
common ones being ‘tarballs’ and zip files as used to distribute R packages.  R 
can list and unpack both (see functions <CODE>untar</CODE> and 
<CODE>unzip</CODE>) and create both (for <CODE>zip</CODE> with the help of an
 external program). </P>
<HR>
<A name="A-sample-session"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Invoking-R" 
rel="next">Invoking R</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#OS-facilities" 
rel="prev">OS facilities</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Top" 
rel="up">Top</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="A-sample-session-1"></A> 
<H2 class="appendix">Appendix A A sample session</H2>
<P>The following session is intended to introduce to you some features of the R 
environment by using them.  Many features of the system will be unfamiliar and 
puzzling at first, but this puzzlement will soon disappear. </P>
<DL compact="compact">
  <DT><CODE>Start R appropriately for your platform (see <A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Invoking-R">Invoking 
  R</A>).</CODE></DT>
  <DD>
  <P>The R program begins, with a banner. </P>
  <P>(Within R code, the prompt on the left hand side will not be shown to avoid 
  confusion.) </P></DD>
  <DT><CODE>help.start()</CODE></DT>
  <DD>
  <P>Start the <ACRONYM>HTML</ACRONYM> interface to on-line help (using a web 
  browser available at your machine).  You should briefly explore the features 
  of this facility with the mouse. </P>
  <P>Iconify the help window and move on to the next part. </P></DD>
  <DT><CODE>x &lt;- rnorm(50)</CODE></DT>
  <DT><CODE>y &lt;- rnorm(x)</CODE></DT>
  <DD>
  <P>Generate two pseudo-random normal vectors of <EM>x</EM>- and 
  <EM>y</EM>-coordinates. </P></DD>
  <DT><CODE>plot(x, y)</CODE></DT>
  <DD>
  <P>Plot the points in the plane.  A graphics window will appear automatically. 
  </P></DD>
  <DT><CODE>ls()</CODE></DT>
  <DD>
  <P>See which R objects are now in the R workspace. </P></DD>
  <DT><CODE>rm(x, y)</CODE></DT>
  <DD>
  <P>Remove objects no longer needed. (Clean up). </P></DD>
  <DT><CODE>x &lt;- 1:20</CODE></DT>
  <DD>
  <P>Make <EM>x = (1, 2, …, 20)</EM>. </P></DD>
  <DT><CODE>w &lt;- 1 + sqrt(x)/2</CODE></DT>
  <DD>
  <P>A ‘weight’ vector of standard deviations. </P></DD>
  <DT><CODE>dummy &lt;- data.frame(x=x, y= x + rnorm(x)*w)</CODE></DT>
  <DT><CODE>dummy</CODE></DT>
  <DD>
  <P>Make a <EM>data frame</EM> of two columns, <EM>x</EM> and <EM>y</EM>, and 
  look at it. </P></DD>
  <DT><CODE>fm &lt;- lm(y ~ x, data=dummy)</CODE></DT>
  <DT><CODE>summary(fm)</CODE></DT>
  <DD>
  <P>Fit a simple linear regression and look at the analysis.  With 
  <CODE>y</CODE> to the left of the tilde, we are modelling <EM>y</EM> dependent 
  on <EM>x</EM>. </P></DD>
  <DT><CODE>fm1 &lt;- lm(y ~ x, data=dummy, weight=1/w^2)</CODE></DT>
  <DT><CODE>summary(fm1)</CODE></DT>
  <DD>
  <P>Since we know the standard deviations, we can do a weighted regression. 
  </P></DD>
  <DT><CODE>attach(dummy)</CODE></DT>
  <DD>
  <P>Make the columns in the data frame visible as variables. </P></DD>
  <DT><CODE>lrf &lt;- lowess(x, y)</CODE></DT>
  <DD>
  <P>Make a nonparametric local regression function. </P></DD>
  <DT><CODE>plot(x, y)</CODE></DT>
  <DD>
  <P>Standard point plot. </P></DD>
  <DT><CODE>lines(x, lrf$y)</CODE></DT>
  <DD>
  <P>Add in the local regression. </P></DD>
  <DT><CODE>abline(0, 1, lty=3)</CODE></DT>
  <DD>
  <P>The true regression line: (intercept 0, slope 1). </P></DD>
  <DT><CODE>abline(coef(fm))</CODE></DT>
  <DD>
  <P>Unweighted regression line. </P></DD>
  <DT><CODE>abline(coef(fm1), col = "red")</CODE></DT>
  <DD>
  <P>Weighted regression line. </P></DD>
  <DT><CODE>detach()</CODE></DT>
  <DD>
  <P>Remove data frame from the search path. </P></DD>
  <DT><CODE>plot(fitted(fm), resid(fm),</CODE></DT>
  <DT><CODE>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xlab="Fitted&nbsp;values"<!-- /@w -->,</CODE></DT>
  <DT><CODE>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ylab="Residuals"<!-- /@w -->,</CODE></DT>
  <DT><CODE>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;main="Residuals&nbsp;vs&nbsp;Fitted")<!-- /@w --></CODE></DT>
  <DD>
  <P>A standard regression diagnostic plot to check for heteroscedasticity. Can 
  you see it? </P></DD>
  <DT><CODE>qqnorm(resid(fm), main="Residuals Rankit Plot")</CODE></DT>
  <DD>
  <P>A normal scores plot to check for skewness, kurtosis and outliers.  (Not
   very useful here.) </P></DD>
  <DT><CODE>rm(fm, fm1, lrf, x, dummy)</CODE></DT>
  <DD>
  <P>Clean up again. </P></DD></DL>
<P>The next section will look at data from the classical experiment of Michelson 
to measure the speed of light.  This dataset is available in the 
<CODE>morley</CODE> object, but we will read it to illustrate the 
<CODE>read.table</CODE> function. </P>
<DL compact="compact">
  <DT><CODE>filepath &lt;- system.file("data", "morley.tab" , 
  package="datasets")</CODE></DT>
  <DT><CODE>filepath</CODE></DT>
  <DD>
  <P>Get the path to the data file. </P></DD>
  <DT><CODE>file.show(filepath)</CODE></DT>
  <DD>
  <P>Optional.  Look at the file. </P></DD>
  <DT><CODE>mm &lt;- read.table(filepath)</CODE></DT>
  <DT><CODE>mm</CODE></DT>
  <DD>
  <P>Read in the Michelson data as a data frame, and look at it. There are five 
  experiments (column <CODE>Expt</CODE>) and each has 20 runs (column 
  <CODE>Run</CODE>) and <CODE>sl</CODE> is the recorded speed of light, suitably 
  coded. </P></DD>
  <DT><CODE>mm$Expt &lt;- factor(mm$Expt)</CODE></DT>
  <DT><CODE>mm$Run &lt;- factor(mm$Run)</CODE></DT>
  <DD>
  <P>Change <CODE>Expt</CODE> and <CODE>Run</CODE> into factors. </P></DD>
  <DT><CODE>attach(mm)</CODE></DT>
  <DD>
  <P>Make the data frame visible at position 3 (the default). </P></DD>
  <DT><CODE>plot(Expt, Speed, main="Speed of Light Data", xlab="Experiment 
  No.")</CODE></DT>
  <DD>
  <P>Compare the five experiments with simple boxplots. </P></DD>
  <DT><CODE>fm &lt;- aov(Speed ~ Run + Expt, data=mm)</CODE></DT>
  <DT><CODE>summary(fm)</CODE></DT>
  <DD>
  <P>Analyze as a randomized block, with ‘runs’ and ‘experiments’ as factors. 
  </P></DD>
  <DT><CODE>fm0 &lt;- update(fm, . ~ . - Run)</CODE></DT>
  <DT><CODE>anova(fm0, fm)</CODE></DT>
  <DD>
  <P>Fit the sub-model omitting ‘runs’, and compare using a formal analysis of 
  variance. </P></DD>
  <DT><CODE>detach()</CODE></DT>
  <DT><CODE>rm(fm, fm0)</CODE></DT>
  <DD>
  <P>Clean up before moving on. </P></DD></DL>
<P>We now look at some more graphical features: contour and image plots. </P>
<DL compact="compact">
  <DT><CODE>x &lt;- seq(-pi, pi, len=50)</CODE></DT>
  <DT><CODE>y &lt;- x</CODE></DT>
  <DD>
  <P><EM>x</EM> is a vector of 50 equally spaced values in the interval [-pi\, 
  pi]. <EM>y</EM> is the same. </P></DD>
  <DT><CODE>f &lt;- outer(x, y, function(x, y) cos(y)/(1 + x^2))</CODE></DT>
  <DD>
  <P><EM>f</EM> is a square matrix, with rows and columns indexed by <EM>x</EM>
   and <EM>y</EM> respectively, of values of the function cos(y)/(1 + x^2). 
  </P></DD>
  <DT><CODE>oldpar &lt;- par(no.readonly = TRUE)</CODE></DT>
  <DT><CODE>par(pty="s")</CODE></DT>
  <DD>
  <P>Save the plotting parameters and set the plotting region to “square”. 
  </P></DD>
  <DT><CODE>contour(x, y, f)</CODE></DT>
  <DT><CODE>contour(x, y, f, nlevels=15, add=TRUE)</CODE></DT>
  <DD>
  <P>Make a contour map of <EM>f</EM>; add in more lines for more detail. 
  </P></DD>
  <DT><CODE>fa &lt;- (f-t(f))/2</CODE></DT>
  <DD>
  <P><CODE>fa</CODE> is the “asymmetric part” of <EM>f</EM>.  (<CODE>t()</CODE> 
  is transpose). </P></DD>
  <DT><CODE>contour(x, y, fa, nlevels=15)</CODE></DT>
  <DD>
  <P>Make a contour plot, … </P></DD>
  <DT><CODE>par(oldpar)</CODE></DT>
  <DD>
  <P>… and restore the old graphics parameters. </P></DD>
  <DT><CODE>image(x, y, f)</CODE></DT>
  <DT><CODE>image(x, y, fa)</CODE></DT>
  <DD>
  <P>Make some high density image plots, (of which you can get hardcopies if you 
  wish), … </P></DD>
  <DT><CODE>objects(); rm(x, y, f, fa)</CODE></DT>
  <DD>
  <P>… and clean up before moving on. </P></DD></DL>
<P>R can do complex arithmetic, also. </P>
<DL compact="compact">
  <DT><CODE>th &lt;- seq(-pi, pi, len=100)</CODE></DT>
  <DT><CODE>z &lt;- exp(1i*th)</CODE></DT>
  <DD>
  <P><CODE>1i</CODE> is used for the complex number <EM>i</EM>. </P></DD>
  <DT><CODE>par(pty="s")</CODE></DT>
  <DT><CODE>plot(z, type="l")</CODE></DT>
  <DD>
  <P>Plotting complex arguments means plot imaginary versus real parts.  This
   should be a circle. </P></DD>
  <DT><CODE>w &lt;- rnorm(100) + rnorm(100)*1i</CODE></DT>
  <DD>
  <P>Suppose we want to sample points within the unit circle.  One method would 
  be to take complex numbers with standard normal real and imaginary parts … 
  </P></DD>
  <DT><CODE>w &lt;- ifelse(Mod(w) &gt; 1, 1/w, w)</CODE></DT>
  <DD>
  <P>… and to map any outside the circle onto their reciprocal. </P></DD>
  <DT><CODE>plot(w, xlim=c(-1,1), ylim=c(-1,1), pch="+",xlab="x", 
  ylab="y")</CODE></DT>
  <DT><CODE>lines(z)</CODE></DT>
  <DD>
  <P>All points are inside the unit circle, but the distribution is not uniform. 
  </P></DD>
  <DT><CODE>w &lt;- sqrt(runif(100))*exp(2*pi*runif(100)*1i)</CODE></DT>
  <DT><CODE>plot(w, xlim=c(-1,1), ylim=c(-1,1), pch="+", xlab="x", 
  ylab="y")</CODE></DT>
  <DT><CODE>lines(z)</CODE></DT>
  <DD>
  <P>The second method uses the uniform distribution.  The points should now
   look more evenly spaced over the disc. </P></DD>
  <DT><CODE>rm(th, w, z)</CODE></DT>
  <DD>
  <P>Clean up again. </P></DD>
  <DT><CODE>q()</CODE></DT>
  <DD>
  <P>Quit the R program.  You will be asked if you want to save the R workspace, 
  and for an exploratory session like this, you probably do not want to save it. 
  </P></DD></DL>
<HR>
<A name="Invoking-R"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-command_002dline-editor" 
rel="next">The command-line editor</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#A-sample-session" 
rel="prev">A sample session</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Top" 
rel="up">Top</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Invoking-R-1"></A> 
<H2 class="appendix">Appendix B Invoking R</H2>
<P>Users of R on Windows or OS X should read the OS-specific section first, but 
command-line use is also supported. </P>
<TABLE class="menu" border="0" cellspacing="0" summary="">
  <TBODY>
  <TR>
    <TD align="left" valign="top">• <A accesskey="1" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Invoking-R-from-the-command-line">Invoking 
      R from the command line</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="2" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Invoking-R-under-Windows">Invoking 
      R under Windows</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="3" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Invoking-R-under-OS-X">Invoking 
      R under OS X</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR>
  <TR>
    <TD align="left" valign="top">• <A accesskey="4" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Scripting-with-R">Scripting 
      with R</A>:</TD>
    <TD>&nbsp;&nbsp;</TD>
    <TD align="left" valign="top"></TD></TR></TBODY></TABLE>
<HR>
<A name="Invoking-R-from-the-command-line"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Invoking-R-under-Windows" 
rel="next">Invoking R under Windows</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Invoking-R" 
rel="prev">Invoking R</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Invoking-R" 
rel="up">Invoking R</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A 
name="Invoking-R-from-the-command-line-1"></A> 
<H3 class="appendixsec">B.1 Invoking R from the command line</H3>
<P>When working at a command line on UNIX or Windows, the command 
‘<SAMP>R</SAMP>’ can be used both for starting the main R program in the form 
</P>
<DIV class="display">
<PRE class="display"><CODE>R</CODE> [<VAR>options</VAR>] [<CODE>&lt;</CODE><VAR>infile</VAR>] [<CODE>&gt;</CODE><VAR>outfile</VAR>],
</PRE></DIV>
<P>or, via the <CODE>R CMD</CODE> interface, as a wrapper to various R tools
 (e.g., for processing files in R documentation format or manipulating add-on 
packages) which are not intended to be called “directly”. </P>
<P>At the Windows command-line, <CODE>Rterm.exe</CODE> is preferred to 
<CODE>R</CODE>. </P>
<P>You need to ensure that either the environment variable <CODE>TMPDIR</CODE> 
is unset or it points to a valid place to create temporary files and
 directories. </P>
<P>Most options control what happens at the beginning and at the end of an R 
session.  The startup mechanism is as follows (see also the on-line help for 
topic ‘<SAMP>Startup</SAMP>’ for more information, and the section below for 
some Windows-specific details). </P>
<UL>
  <LI> Unless <SAMP>--no-environ</SAMP> was given, R searches for user and site
   files to process for setting environment variables.  The name of the site 
  file is the one pointed to by the environment variable <CODE>R_ENVIRON</CODE>; 
  if this is unset, <SAMP><VAR>R_HOME</VAR>/etc/Renviron.site</SAMP> is used (if 
  it exists).  The user file is the one pointed to by the environment variable 
  <CODE>R_ENVIRON_USER</CODE> if this is set; otherwise, files 
  <SAMP>.Renviron</SAMP> in the current or in the user’s home directory (in that 
  order) are searched for.  These files should contain lines of the form 
  ‘<SAMP><VAR>name</VAR>=<VAR>value</VAR></SAMP>’.  (See 
  <CODE>help("Startup")</CODE> for a precise description.)  Variables you might 
  want to set include <CODE>R_PAPERSIZE</CODE> (the default paper size), 
  <CODE>R_PRINTCMD</CODE> (the default print command) and <CODE>R_LIBS</CODE> 
  (specifies the list of R library trees searched for add-on packages). </LI>
  <LI> Then R searches for the site-wide startup profile unless the command line 
  option <SAMP>--no-site-file</SAMP> was given.  The name of this file is taken 
  from the value of the <CODE>R_PROFILE</CODE> environment variable.  If that 
  variable is unset, the default 
  <SAMP><VAR>R_HOME</VAR>/etc/Rprofile.site</SAMP> is used if this exists. </LI>
  <LI> Then, unless <SAMP>--no-init-file</SAMP> was given, R searches for a user
   profile and sources it.  The name of this file is taken from the environment 
  variable <CODE>R_PROFILE_USER</CODE>; if unset, a file called 
  <SAMP>.Rprofile</SAMP> in the current directory or in the user’s home
   directory (in that order) is searched for. </LI>
  <LI> It also loads a saved workspace from file <SAMP>.RData</SAMP> in the 
  current directory if there is one (unless <SAMP>--no-restore</SAMP> or 
  <SAMP>--no-restore-data</SAMP> was specified). </LI>
  <LI> Finally, if a function <CODE>.First()</CODE> exists, it is executed.  
  This function (as well as <CODE>.Last()</CODE> which is executed at the end of 
  the R session) can be defined in the appropriate startup profiles, or reside 
  in <SAMP>.RData</SAMP>. </LI></UL>
<P>In addition, there are options for controlling the memory available to the R 
process (see the on-line help for topic ‘<SAMP>Memory</SAMP>’ for more
 information).  Users will not normally need to use these unless they are trying 
to limit the amount of memory used by R. </P>
<P>R accepts the following command-line options. </P>
<DL compact="compact">
  <DT><SAMP>--help</SAMP></DT>
  <DT><SAMP>-h</SAMP></DT>
  <DD>
  <P>Print short help message to standard output and exit successfully. 
</P></DD>
  <DT><SAMP>--version</SAMP></DT>
  <DD>
  <P>Print version information to standard output and exit successfully. 
  </P></DD>
  <DT><SAMP>--encoding=<VAR>enc</VAR></SAMP></DT>
  <DD>
  <P>Specify the encoding to be assumed for input from the console or 
  <CODE>stdin</CODE>.  This needs to be an encoding known to <CODE>iconv</CODE>: 
  see its help page.  (<CODE>--encoding <VAR>enc</VAR></CODE> is also accepted.) 
   The input is re-encoded to the locale R is running in and needs to be
   representable in the latter’s encoding (so e.g.&nbsp;you cannot re-encode
   Greek text in a French locale unless that locale uses the UTF-8 encoding). 
  </P></DD>
  <DT><SAMP>RHOME</SAMP></DT>
  <DD>
  <P>Print the path to the R “home directory” to standard output and exit 
  successfully.  Apart from the front-end shell script and the man page, R 
  installation puts everything (executables, packages, etc.) into this 
  directory. </P></DD>
  <DT><SAMP>--save</SAMP></DT>
  <DT><SAMP>--no-save</SAMP></DT>
  <DD>
  <P>Control whether data sets should be saved or not at the end of the R
   session.  If neither is given in an interactive session, the user is asked 
  for the desired behavior when ending the session with <KBD>q()</KBD>; in 
  non-interactive use one of these must be specified or implied by some other 
  option (see below). </P></DD>
  <DT><SAMP>--no-environ</SAMP></DT>
  <DD>
  <P>Do not read any user file to set environment variables. </P></DD>
  <DT><SAMP>--no-site-file</SAMP></DT>
  <DD>
  <P>Do not read the site-wide profile at startup. </P></DD>
  <DT><SAMP>--no-init-file</SAMP></DT>
  <DD>
  <P>Do not read the user’s profile at startup. </P></DD>
  <DT><SAMP>--restore</SAMP></DT>
  <DT><SAMP>--no-restore</SAMP></DT>
  <DT><SAMP>--no-restore-data</SAMP></DT>
  <DD>
  <P>Control whether saved images (file <SAMP>.RData</SAMP> in the directory 
  where R was started) should be restored at startup or not.  The default is to 
  restore. (<SAMP>--no-restore</SAMP> implies all the specific 
  <SAMP>--no-restore-*</SAMP> options.) </P></DD>
  <DT><SAMP>--no-restore-history</SAMP></DT>
  <DD>
  <P>Control whether the history file (normally file <SAMP>.Rhistory</SAMP> in 
  the directory where R was started, but can be set by the environment variable 
  <CODE>R_HISTFILE</CODE>) should be restored at startup or not.  The default is 
  to restore. </P></DD>
  <DT><SAMP>--no-Rconsole</SAMP></DT>
  <DD>
  <P>(Windows only) Prevent loading the <SAMP>Rconsole</SAMP> file at startup. 
  </P></DD>
  <DT><SAMP>--vanilla</SAMP></DT>
  <DD>
  <P>Combine <SAMP>--no-save</SAMP>, <SAMP>--no-environ</SAMP>, 
  <SAMP>--no-site-file</SAMP>, <SAMP>--no-init-file</SAMP> and 
  <SAMP>--no-restore</SAMP>.  Under Windows, this also includes 
  <SAMP>--no-Rconsole</SAMP>. </P></DD>
  <DT><SAMP>-f <VAR>file</VAR></SAMP></DT>
  <DT><SAMP>--file=<VAR>file</VAR></SAMP></DT>
  <DD>
  <P>(not <CODE>Rgui.exe</CODE>) Take input from <VAR>file</VAR>: 
  ‘<SAMP>-</SAMP>’ means <CODE>stdin</CODE>.  Implies <SAMP>--no-save</SAMP> 
  unless <SAMP>--save</SAMP> has been set.  On a Unix-alike, shell 
  metacharacters should be avoided in <VAR>file</VAR> (but spaces are allowed). 
  </P></DD>
  <DT><SAMP>-e <VAR>expression</VAR></SAMP></DT>
  <DD>
  <P>(not <CODE>Rgui.exe</CODE>) Use <VAR>expression</VAR> as an input line.  
  One or more <SAMP>-e</SAMP> options can be used, but not together with 
  <SAMP>-f</SAMP> or <SAMP>--file</SAMP>.  Implies <SAMP>--no-save</SAMP> unless 
  <SAMP>--save</SAMP> has been set.  (There is a limit of 10,000 bytes on the 
  total length of expressions used in this way.  Expressions containing spaces 
  or shell metacharacters will need to be quoted.) </P></DD>
  <DT><SAMP>--no-readline</SAMP></DT>
  <DD>
  <P>(UNIX only) Turn off command-line editing via <STRONG>readline</STRONG>.  
  This is useful when running R from within Emacs using the 
  <ACRONYM>ESS</ACRONYM> (“Emacs Speaks Statistics”) package.  See <A href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-command_002dline-editor">The 
  command-line editor</A>, for more information.  Command-line editing is 
  enabled for default interactive use (see <SAMP>--interactive</SAMP>).  This 
  option also affects tilde-expansion: see the help for 
  <CODE>path.expand</CODE>. </P></DD>
  <DT><SAMP>--min-vsize=<VAR>N</VAR></SAMP></DT>
  <DT><SAMP>--min-nsize=<VAR>N</VAR></SAMP></DT>
  <DD>
  <P>For expert use only: set the initial trigger sizes for garbage collection 
  of vector heap (in bytes) and <EM>cons cells</EM> (number) respectively.  
  Suffix ‘<SAMP>M</SAMP>’ specifies megabytes or millions of cells respectively. 
   The defaults are 6Mb and 350k respectively and can also be set by environment 
  variables <CODE>R_NSIZE</CODE> and <CODE>R_VSIZE</CODE>. </P></DD>
  <DT><SAMP>--max-ppsize=<VAR>N</VAR></SAMP></DT>
  <DD>
  <P>Specify the maximum size of the pointer protection stack as <VAR>N</VAR>
   locations.  This defaults to 10000, but can be increased to allow large and 
  complicated calculations to be done.  Currently the maximum value accepted is 
  100000. </P></DD>
  <DT><SAMP>--max-mem-size=<VAR>N</VAR></SAMP></DT>
  <DD>
  <P>(Windows only) Specify a limit for the amount of memory to be used both for 
  R objects and working areas.  This is set by default to the smaller of the 
  amount of physical RAM in the machine and for 32-bit R, 1.5Gb<A name="DOCF26" 
  href="http://127.0.0.1:29225/doc/manual/R-intro.html#FOOT26"><SUP>26</SUP></A>, 
  and must be between 32Mb and the maximum allowed on that version of Windows. 
  </P></DD>
  <DT><SAMP>--quiet</SAMP></DT>
  <DT><SAMP>--silent</SAMP></DT>
  <DT><SAMP>-q</SAMP></DT>
  <DD>
  <P>Do not print out the initial copyright and welcome messages. </P></DD>
  <DT><SAMP>--slave</SAMP></DT>
  <DD>
  <P>Make R run as quietly as possible.  This option is intended to support 
  programs which use R to compute results for them.  It implies 
  <SAMP>--quiet</SAMP> and <SAMP>--no-save</SAMP>. </P></DD>
  <DT><SAMP>--interactive</SAMP></DT>
  <DD>
  <P>(UNIX only) Assert that R really is being run interactively even if input 
  has been redirected: use if input is from a FIFO or pipe and fed from an 
  interactive program.  (The default is to deduce that R is being run 
  interactively if and only if <SAMP>stdin</SAMP> is connected to a terminal or 
  <CODE>pty</CODE>.)  Using <SAMP>-e</SAMP>, <SAMP>-f</SAMP> or 
  <SAMP>--file</SAMP> asserts non-interactive use even if 
  <SAMP>--interactive</SAMP> is given. </P>
  <P>Note that this does not turn on command-line editing. </P></DD>
  <DT><SAMP>--ess</SAMP></DT>
  <DD>
  <P>(Windows only) Set <CODE>Rterm</CODE> up for use by 
  <CODE>R-inferior-mode</CODE> in <ACRONYM>ESS</ACRONYM>, including asserting 
  interactive use (without the command-line editor) and no buffering of 
  <SAMP>stdout</SAMP>. </P></DD>
  <DT><SAMP>--verbose</SAMP></DT>
  <DD>
  <P>Print more information about progress, and in particular set R’s option 
  <CODE>verbose</CODE> to <CODE>TRUE</CODE>.  R code uses this option to control 
  the printing of diagnostic messages. </P></DD>
  <DT><SAMP>--debugger=<VAR>name</VAR></SAMP></DT>
  <DT><SAMP>-d <VAR>name</VAR></SAMP></DT>
  <DD>
  <P>(UNIX only) Run R through debugger <VAR>name</VAR>.  For most debuggers
   (the exceptions are <CODE>valgrind</CODE> and recent versions of 
  <CODE>gdb</CODE>), further command line options are disregarded, and should
   instead be given when starting the R executable from inside the debugger. 
  </P></DD>
  <DT><SAMP>--gui=<VAR>type</VAR></SAMP></DT>
  <DT><SAMP>-g <VAR>type</VAR></SAMP></DT>
  <DD>
  <P>(UNIX only) Use <VAR>type</VAR> as graphical user interface (note that this
   also includes interactive graphics).  Currently, possible values for 
  <VAR>type</VAR> are ‘<SAMP>X11</SAMP>’ (the default) and, provided that 
  ‘<SAMP>Tcl/Tk</SAMP>’ support is available, ‘<SAMP>Tk</SAMP>’. (For 
  back-compatibility, ‘<SAMP>x11</SAMP>’ and ‘<SAMP>tk</SAMP>’ are accepted.) 
  </P></DD>
  <DT><SAMP>--arch=<VAR>name</VAR></SAMP></DT>
  <DD>
  <P>(UNIX only) Run the specified sub-architecture. </P></DD>
  <DT><SAMP>--args</SAMP></DT>
  <DD>
  <P>This flag does nothing except cause the rest of the command line to be
   skipped: this can be useful to retrieve values from it with 
  <CODE>commandArgs(TRUE)</CODE>. </P></DD></DL>
<P>Note that input and output can be redirected in the usual way (using 
‘<SAMP>&lt;</SAMP>’ and ‘<SAMP>&gt;</SAMP>’), but the line length limit of 4095 
bytes still applies.  Warning and error messages are sent to the error channel
 (<CODE>stderr</CODE>). </P>
<P>The command <CODE>R CMD</CODE> allows the invocation of various tools which
 are useful in conjunction with R, but not intended to be called “directly”.  
The general form is </P>
<DIV class="example">
<PRE class="example">R CMD <VAR>command</VAR> <VAR>args</VAR>
</PRE></DIV>
<P>where <VAR>command</VAR> is the name of the tool and <VAR>args</VAR> the 
arguments passed on to it. </P>
<P>Currently, the following tools are available. </P>
<DL compact="compact">
  <DT><CODE>BATCH</CODE></DT>
  <DD>
  <P>Run R in batch mode.  Runs <CODE>R --restore --save</CODE> with possibly
   further options (see <CODE>?BATCH</CODE>). </P></DD>
  <DT><CODE>COMPILE</CODE></DT>
  <DD>
  <P>(UNIX only) Compile C, C++, Fortran … files for use with R. </P></DD>
  <DT><CODE>SHLIB</CODE></DT>
  <DD>
  <P>Build shared library for dynamic loading. </P></DD>
  <DT><CODE>INSTALL</CODE></DT>
  <DD>
  <P>Install add-on packages. </P></DD>
  <DT><CODE>REMOVE</CODE></DT>
  <DD>
  <P>Remove add-on packages. </P></DD>
  <DT><CODE>build</CODE></DT>
  <DD>
  <P>Build (that is, package) add-on packages. </P></DD>
  <DT><CODE>check</CODE></DT>
  <DD>
  <P>Check add-on packages. </P></DD>
  <DT><CODE>LINK</CODE></DT>
  <DD>
  <P>(UNIX only) Front-end for creating executable programs. </P></DD>
  <DT><CODE>Rprof</CODE></DT>
  <DD>
  <P>Post-process R profiling files. </P></DD>
  <DT><CODE>Rdconv</CODE></DT>
  <DT><CODE>Rd2txt</CODE></DT>
  <DD>
  <P>Convert Rd format to various other formats, including 
  <ACRONYM>HTML</ACRONYM>, LaTeX, plain text, and extracting the examples.  
  <CODE>Rd2txt</CODE> can be used as shorthand for <CODE>Rd2conv -t txt</CODE>. 
  </P></DD>
  <DT><CODE>Rd2pdf</CODE></DT>
  <DD>
  <P>Convert Rd format to PDF. </P></DD>
  <DT><CODE>Stangle</CODE></DT>
  <DD>
  <P>Extract S/R code from Sweave or other vignette documentation </P></DD>
  <DT><CODE>Sweave</CODE></DT>
  <DD>
  <P>Process Sweave or other vignette documentation </P></DD>
  <DT><CODE>Rdiff</CODE></DT>
  <DD>
  <P>Diff R output ignoring headers etc </P></DD>
  <DT><CODE>config</CODE></DT>
  <DD>
  <P>Obtain configuration information </P></DD>
  <DT><CODE>javareconf</CODE></DT>
  <DD>
  <P>(Unix only) Update the Java configuration variables </P></DD>
  <DT><CODE>rtags</CODE></DT>
  <DD>
  <P>(Unix only) Create Emacs-style tag files from C, R, and Rd files </P></DD>
  <DT><CODE>open</CODE></DT>
  <DD>
  <P>(Windows only) Open a file via Windows’ file associations </P></DD>
  <DT><CODE>texify</CODE></DT>
  <DD>
  <P>(Windows only) Process (La)TeX files with R’s style files </P></DD></DL>
<P>Use </P>
<DIV class="example">
<PRE class="example">R CMD <VAR>command</VAR> --help
</PRE></DIV>
<P>to obtain usage information for each of the tools accessible via the <CODE>R 
CMD</CODE> interface. </P>
<P>In addition, you can use options <SAMP>--arch=</SAMP>, 
<SAMP>--no-environ</SAMP>, <SAMP>--no-init-file</SAMP>, 
<SAMP>--no-site-file</SAMP> and <SAMP>--vanilla</SAMP> between <CODE>R</CODE> 
and <CODE>CMD</CODE>: these affect any R processes run by the tools.  (Here 
<SAMP>--vanilla</SAMP> is equivalent to <SAMP>--no-environ --no-site-file 
--no-init-file</SAMP>.) However, note that <CODE>R CMD</CODE> does not of itself 
use any R startup files (in particular, neither user nor site 
<SAMP>Renviron</SAMP> files), and all of the R processes run by these tools 
(except <CODE>BATCH</CODE>) use <SAMP>--no-restore</SAMP>.  Most use 
<SAMP>--vanilla</SAMP> and so invoke no R startup files: the current exceptions 
are <CODE>INSTALL</CODE>, <CODE>REMOVE</CODE>, <CODE>Sweave</CODE> and 
<CODE>SHLIB</CODE> (which uses <SAMP>--no-site-file --no-init-file</SAMP>). </P>
<DIV class="example">
<PRE class="example">R CMD <VAR>cmd</VAR> <VAR>args</VAR>
</PRE></DIV>
<P>for any other executable <CODE><VAR>cmd</VAR></CODE> on the path or given by 
an absolute filepath: this is useful to have the same environment as R or the 
specific commands run under, for example to run <CODE>ldd</CODE> or 
<CODE>pdflatex</CODE>.  Under Windows <VAR>cmd</VAR> can be an executable or a
 batch file, or if it has extension <CODE>.sh</CODE> or <CODE>.pl</CODE> the
 appropriate interpreter (if available) is called to run it. </P>
<HR>
<A name="Invoking-R-under-Windows"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Invoking-R-under-OS-X" 
rel="next">Invoking R under OS X</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Invoking-R-from-the-command-line" 
rel="prev">Invoking R from the command line</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Invoking-R" 
rel="up">Invoking R</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Invoking-R-under-Windows-1"></A> 
<H3 class="appendixsec">B.2 Invoking R under Windows</H3>
<P>There are two ways to run R under Windows.  Within a terminal window
 (e.g.&nbsp;<CODE>cmd.exe</CODE> or a more capable shell), the methods described 
in the previous section may be used, invoking by <CODE>R.exe</CODE> or more
 directly by <CODE>Rterm.exe</CODE>.  For interactive use, there is a
 console-based GUI (<CODE>Rgui.exe</CODE>). </P>
<P>The startup procedure under Windows is very similar to that under UNIX, but 
references to the ‘home directory’ need to be clarified, as this is not always 
defined on Windows.  If the environment variable <CODE>R_USER</CODE> is defined, 
that gives the home directory.  Next, if the environment variable 
<CODE>HOME</CODE> is defined, that gives the home directory.  After those two 
user-controllable settings, R tries to find system defined home directories.  It 
first tries to use the Windows "personal" directory (typically 
<CODE>C:\Documents and Settings\username\My Documents</CODE> in Windows XP).  If 
that fails, and environment variables <CODE>HOMEDRIVE</CODE> and 
<CODE>HOMEPATH</CODE> are defined (and they normally are) these define the home 
directory.  Failing all those, the home directory is taken to be the starting 
directory. </P>
<P>You need to ensure that either the environment variables <CODE>TMPDIR</CODE>, 
<CODE>TMP</CODE> and <CODE>TEMP</CODE> are either unset or one of them points to 
a valid place to create temporary files and directories. </P>
<P>Environment variables can be supplied as 
‘<SAMP><VAR>name</VAR>=<VAR>value</VAR></SAMP>’ pairs on the command line. </P>
<P>If there is an argument ending <SAMP>.RData</SAMP> (in any case) it is
 interpreted as the path to the workspace to be restored: it implies 
<SAMP>--restore</SAMP> and sets the working directory to the parent of the named 
file.  (This mechanism is used for drag-and-drop and file association with 
<CODE>RGui.exe</CODE>, but also works for <CODE>Rterm.exe</CODE>. If the named 
file does not exist it sets the working directory if the parent directory 
exists.) </P>
<P>The following additional command-line options are available when invoking 
<CODE>RGui.exe</CODE>. </P>
<DL compact="compact">
  <DT><SAMP>--mdi</SAMP></DT>
  <DT><SAMP>--sdi</SAMP></DT>
  <DT><SAMP>--no-mdi</SAMP></DT>
  <DD>
  <P>Control whether <CODE>Rgui</CODE> will operate as an MDI program  (with 
  multiple child windows within one main window) or an SDI application (with 
  multiple top-level windows for the console, graphics and pager).  The 
   command-line setting overrides the setting in the user’s 
  <SAMP>Rconsole</SAMP> file. </P></DD>
  <DT><SAMP>--debug</SAMP></DT>
  <DD>
  <P>Enable the “Break to debugger” menu item in <CODE>Rgui</CODE>, and trigger
   a break to the debugger during command line processing. </P></DD></DL>
<P>Under Windows with <CODE>R CMD</CODE> you may also specify your own 
<SAMP>.bat</SAMP>, <SAMP>.exe</SAMP>, <SAMP>.sh</SAMP> or <SAMP>.pl</SAMP> file. 
 It will be run under the appropriate interpreter (Perl for <SAMP>.pl</SAMP>) 
with several environment variables set appropriately, including 
<CODE>R_HOME</CODE>, <CODE>R_OSTYPE</CODE>, <CODE>PATH</CODE>, 
<CODE>BSTINPUTS</CODE> and <CODE>TEXINPUTS</CODE>.  For example, if you already 
have <SAMP>latex.exe</SAMP> on your path, then </P>
<DIV class="example">
<PRE class="example">R CMD latex.exe mydoc
</PRE></DIV>
<P>will run LaTeX on <SAMP>mydoc.tex</SAMP>, with the path to R’s 
<SAMP>share/texmf</SAMP> macros appended to <CODE>TEXINPUTS</CODE>.  
(Unfortunately, this does not help with the MiKTeX build of LaTeX, but <CODE>R 
CMD texify mydoc</CODE> will work in that case.) </P>
<HR>
<A name="Invoking-R-under-OS-X"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Scripting-with-R" 
rel="next">Scripting with R</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Invoking-R-under-Windows" 
rel="prev">Invoking R under Windows</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Invoking-R" 
rel="up">Invoking R</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Invoking-R-under-OS-X-1"></A> 
<H3 class="appendixsec">B.3 Invoking R under OS X</H3>
<P>There are two ways to run R under OS X.  Within a <CODE>Terminal.app</CODE>
 window by invoking <CODE>R</CODE>, the methods described in the first
 subsection apply.  There is also console-based GUI (<CODE>R.app</CODE>) that by
 default is installed in the <CODE>Applications</CODE> folder on your system.  
It is a standard double-clickable OS X application. </P>
<P>The startup procedure under OS X is very similar to that under UNIX, but 
<CODE>R.app</CODE> does not make use of command-line arguments.  The ‘home
 directory’ is the one inside the R.framework, but the startup and current 
working directory are set as the user’s home directory unless a different 
startup directory is given in the Preferences window accessible from within the 
GUI. </P>
<HR>
<A name="Scripting-with-R"></A> 
<DIV class="header">
<P>Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Invoking-R-under-OS-X" 
rel="prev">Invoking R under OS X</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Invoking-R" 
rel="up">Invoking R</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Scripting-with-R-1"></A> 
<H3 class="appendixsec">B.4 Scripting with R</H3>
<P>If you just want to run a file <SAMP>foo.R</SAMP> of R commands, the
 recommended way is to use <CODE>R CMD BATCH foo.R</CODE>.  If you want to run 
this in the background or as a batch job use OS-specific facilities to do so: 
for example in most shells on Unix-alike OSes <CODE>R CMD BATCH foo.R 
&amp;</CODE> runs a background job. </P>
<P>You can pass parameters to scripts via additional arguments on the command 
line: for example (where the exact quoting needed will depend on the shell in 
use) </P>
<DIV class="example">
<PRE class="example">R CMD BATCH "--args arg1 arg2" foo.R &amp;
</PRE></DIV>
<P>will pass arguments to a script which can be retrieved as a character vector 
by </P>
<DIV class="example">
<PRE class="example">args &lt;- commandArgs(TRUE)
</PRE></DIV>
<P>This is made simpler by the alternative front-end <CODE>Rscript</CODE>, which 
can be invoked by </P>
<DIV class="example">
<PRE class="example">Rscript foo.R arg1 arg2
</PRE></DIV>
<P>and this can also be used to write executable script files like (at least on 
Unix-alikes, and in some Windows shells) </P>
<DIV class="example">
<PRE class="example">#! /path/to/Rscript
args &lt;- commandArgs(TRUE)
...
q(status=&lt;exit status code&gt;)
</PRE></DIV>
<P>If this is entered into a text file <SAMP>runfoo</SAMP> and this is made
 executable (by <CODE>chmod 755 runfoo</CODE>), it can be invoked for different 
arguments by </P>
<DIV class="example">
<PRE class="example">runfoo arg1 arg2
</PRE></DIV>
<P>For further options see <CODE>help("Rscript")</CODE>.  This writes R output 
to <SAMP>stdout</SAMP> and <SAMP>stderr</SAMP>, and this can be redirected in
 the usual way for the shell running the command. </P>
<P>If you do not wish to hardcode the path to <CODE>Rscript</CODE> but have it
 in your path (which is normally the case for an installed R except on Windows, 
but e.g. OS X users may need to add <SAMP>/usr/local/bin</SAMP> to their path), 
use </P>
<DIV class="example">
<PRE class="example">#! /usr/bin/env Rscript
...
</PRE></DIV>
<P>At least in Bourne and bash shells, the <CODE>#!</CODE> mechanism does 
<STRONG>not</STRONG> allow extra arguments like  <CODE>#! /usr/bin/env Rscript 
--vanilla</CODE>. </P>
<P>One thing to consider is what <CODE>stdin()</CODE> refers to.  It is
 commonplace to write R scripts with segments like </P>
<DIV class="example">
<PRE class="example">chem &lt;- scan(n=24)
2.90 3.10 3.40 3.40 3.70 3.70 2.80 2.50 2.40 2.40 2.70 2.20
5.28 3.37 3.03 3.03 28.95 3.77 3.40 2.20 3.50 3.60 3.70 3.70
</PRE></DIV>
<P>and <CODE>stdin()</CODE> refers to the script file to allow such traditional
 usage.  If you want to refer to the process’s <SAMP>stdin</SAMP>, use 
<CODE>"stdin"</CODE> as a <CODE>file</CODE> connection, e.g. <CODE>scan("stdin", 
...)</CODE>. </P>
<P>Another way to write executable script files (suggested by François Pinard) 
is to use a <EM>here document</EM> like </P>
<DIV class="example">
<PRE class="example">#!/bin/sh
[environment variables can be set here]
R --slave [other options] &lt;&lt;EOF

   R program goes here...

EOF
</PRE></DIV>
<P>but here <CODE>stdin()</CODE> refers to the program source and 
<CODE>"stdin"</CODE> will not be usable. </P>
<P>Short scripts can be passed to <CODE>Rscript</CODE> on the command-line 
<EM>via</EM> the <SAMP>-e</SAMP> flag.  (Empty scripts are not accepted.) </P>
<P>Note that on a Unix-alike the input filename (such as <SAMP>foo.R</SAMP>)
 should not contain spaces nor shell metacharacters. </P>
<HR>
<A name="The-command_002dline-editor"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="next">Function and variable index</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Invoking-R" 
rel="prev">Invoking R</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Top" 
rel="up">Top</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="The-command_002dline-editor-1"></A> 
<H2 class="appendix">Appendix C The command-line editor</H2><A name="Preliminaries"></A> 
<H3 class="appendixsection">C.1 Preliminaries</H3>
<P>When the <ACRONYM>GNU</ACRONYM> <STRONG>readline</STRONG> library is 
available at the time R is configured for compilation under UNIX, an inbuilt 
command line editor allowing recall, editing and re-submission of prior commands
 is used.  Note that other versions of <STRONG>readline</STRONG> exist and may 
be used by the inbuilt command line editor: this used to happen on OS X. </P>
<P>It can be disabled (useful for usage with <ACRONYM>ESS</ACRONYM> <A name="DOCF27" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#FOOT27"><SUP>27</SUP></A>) 
using the startup option <SAMP>--no-readline</SAMP>. </P>
<P>Windows versions of R have somewhat simpler command-line editing: see 
‘<SAMP>Console</SAMP>’ under the ‘<SAMP>Help</SAMP>’ menu of the 
<ACRONYM>GUI</ACRONYM>, and the file <SAMP>README.Rterm</SAMP> for command-line 
editing under <CODE>Rterm.exe</CODE>. </P>
<P>When using R with <STRONG>readline</STRONG> capabilities, the functions
 described below are available, as well as others (probably) documented in 
<CODE>man readline</CODE> or <CODE>info readline</CODE> on your system. </P>
<P>Many of these use either Control or Meta characters.  Control characters, 
such as <KBD>Control-m</KBD>, are obtained by holding the <TT 
class="key">CTRL</TT> down while you press the <TT class="key">m</TT> key, and 
are written as <KBD>C-m</KBD> below.  Meta characters, such as 
<KBD>Meta-b</KBD>, are typed by holding down <TT class="key">META</TT><A name="DOCF28" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#FOOT28"><SUP>28</SUP></A> 
and pressing <TT class="key">b</TT>, and written as <KBD>M-b</KBD> in the 
following.  If your terminal does not have a <TT class="key">META</TT> key
 enabled, you can still type Meta characters using two-character sequences 
starting with <KBD>ESC</KBD>.  Thus, to enter <KBD>M-b</KBD>, you could type <TT 
class="key">ESC</TT><TT class="key">b</TT>.  The <KBD>ESC</KBD> character 
sequences are also allowed on terminals with real Meta keys.  Note that case is 
significant for Meta characters. </P><A name="Editing-actions"></A> 
<H3 class="appendixsection">C.2 Editing actions</H3>
<P>The R program keeps a history of the command lines you type, including the 
erroneous lines, and commands in your history may be recalled, changed if 
necessary, and re-submitted as new commands.  In Emacs-style command-line 
editing any straight typing you do while in this editing phase causes the 
characters to be inserted in the command you are editing, displacing any 
characters to the right of the cursor. In <EM>vi</EM> mode character insertion 
mode is started by <KBD>M-i</KBD> or <KBD>M-a</KBD>, characters are typed and 
insertion mode is finished by typing a further <TT class="key">ESC</TT>.  (The 
default is Emacs-style, and only that is described here: for <EM>vi</EM> mode 
see the <STRONG>readline</STRONG> documentation.) </P>
<P>Pressing the <TT class="key">RET</TT> command at any time causes the command 
to be re-submitted. </P>
<P>Other editing actions are summarized in the following table. </P><A name="Command_002dline-editor-summary"></A> 
<H3 class="appendixsection">C.3 Command-line editor summary</H3><A name="Command-recall-and-vertical-motion"></A> 
<H4 class="subheading">Command recall and vertical motion</H4>
<DL compact="compact">
  <DT><KBD>C-p</KBD></DT>
  <DD>
  <P>Go to the previous command (backwards in the history). </P></DD>
  <DT><KBD>C-n</KBD></DT>
  <DD>
  <P>Go to the next command (forwards in the history). </P></DD>
  <DT><KBD>C-r <VAR>text</VAR></KBD></DT>
  <DD>
  <P>Find the last command with the <VAR>text</VAR> string in it. </P></DD></DL>
<P>On most terminals, you can also use the up and down arrow keys instead of 
<KBD>C-p</KBD> and <KBD>C-n</KBD>, respectively. </P><A name="Horizontal-motion-of-the-cursor"></A> 
<H4 class="subheading">Horizontal motion of the cursor</H4>
<DL compact="compact">
  <DT><KBD>C-a</KBD></DT>
  <DD>
  <P>Go to the beginning of the command. </P></DD>
  <DT><KBD>C-e</KBD></DT>
  <DD>
  <P>Go to the end of the line. </P></DD>
  <DT><KBD>M-b</KBD></DT>
  <DD>
  <P>Go back one word. </P></DD>
  <DT><KBD>M-f</KBD></DT>
  <DD>
  <P>Go forward one word. </P></DD>
  <DT><KBD>C-b</KBD></DT>
  <DD>
  <P>Go back one character. </P></DD>
  <DT><KBD>C-f</KBD></DT>
  <DD>
  <P>Go forward one character. </P></DD></DL>
<P>On most terminals, you can also use the left and right arrow keys instead of 
<KBD>C-b</KBD> and <KBD>C-f</KBD>, respectively. </P><A name="Editing-and-re_002dsubmission"></A> 
<H4 class="subheading">Editing and re-submission</H4>
<DL compact="compact">
  <DT><KBD><VAR>text</VAR></KBD></DT>
  <DD>
  <P>Insert <VAR>text</VAR> at the cursor. </P></DD>
  <DT><KBD>C-f <VAR>text</VAR></KBD></DT>
  <DD>
  <P>Append <VAR>text</VAR> after the cursor. </P></DD>
  <DT><KBD><SPAN class="key">DEL</SPAN></KBD></DT>
  <DD>
  <P>Delete the previous character (left of the cursor). </P></DD>
  <DT><KBD>C-d</KBD></DT>
  <DD>
  <P>Delete the character under the cursor. </P></DD>
  <DT><KBD>M-d</KBD></DT>
  <DD>
  <P>Delete the rest of the word under the cursor, and “save” it. </P></DD>
  <DT><KBD>C-k</KBD></DT>
  <DD>
  <P>Delete from cursor to end of command, and “save” it. </P></DD>
  <DT><KBD>C-y</KBD></DT>
  <DD>
  <P>Insert (yank) the last “saved” text here. </P></DD>
  <DT><KBD>C-t</KBD></DT>
  <DD>
  <P>Transpose the character under the cursor with the next. </P></DD>
  <DT><KBD>M-l</KBD></DT>
  <DD>
  <P>Change the rest of the word to lower case. </P></DD>
  <DT><KBD>M-c</KBD></DT>
  <DD>
  <P>Change the rest of the word to upper case. </P></DD>
  <DT><KBD><SPAN class="key">RET</SPAN></KBD></DT>
  <DD>
  <P>Re-submit the command to R. </P></DD></DL>
<P>The final <TT class="key">RET</TT> terminates the command line editing 
sequence. </P>
<P>The <STRONG>readline</STRONG> key bindings can be customized in the usual way 
<EM>via</EM> a <SAMP>~/.inputrc</SAMP> file.  These customizations can be
 conditioned on application <CODE>R</CODE>, that is by including a section like 
</P>
<DIV class="example">
<PRE class="example">$if R
  "\C-xd": "q('no')\n"
$endif
</PRE></DIV>
<HR>
<A name="Function-and-variable-index"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Concept-index" 
rel="next">Concept index</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-command_002dline-editor" 
rel="prev">The command-line editor</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Top" 
rel="up">Top</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Function-and-variable-index-1"></A> 
<H2 class="appendix">Appendix D Function and variable index</H2>
<TABLE summary="">
  <TBODY>
  <TR>
    <TH valign="top">Jump to: &nbsp; </TH>
    <TD><A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_symbol-1"><B>!</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_symbol-2"><B>%</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_symbol-3"><B>&amp;</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_symbol-4"><B>*</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_symbol-5"><B>+</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_symbol-6"><B>-</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_symbol-7"><B>.</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_symbol-8"><B>/</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_symbol-9"><B>:</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_symbol-10"><B>&lt;</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_symbol-11"><B>=</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_symbol-12"><B>&gt;</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_symbol-13"><B>?</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_symbol-14"><B>^</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_symbol-15"><B>|</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_symbol-16"><B>~</B></A> 
      &nbsp;  <BR><A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_letter-A"><B>A</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_letter-B"><B>B</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_letter-C"><B>C</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_letter-D"><B>D</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_letter-E"><B>E</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_letter-F"><B>F</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_letter-G"><B>G</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_letter-H"><B>H</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_letter-I"><B>I</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_letter-J"><B>J</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_letter-K"><B>K</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_letter-L"><B>L</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_letter-M"><B>M</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_letter-N"><B>N</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_letter-O"><B>O</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_letter-P"><B>P</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_letter-Q"><B>Q</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_letter-R"><B>R</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_letter-S"><B>S</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_letter-T"><B>T</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_letter-U"><B>U</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_letter-V"><B>V</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_letter-W"><B>W</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_letter-X"><B>X</B></A> 
      &nbsp;  </TD></TR></TBODY></TABLE>
<TABLE class="index-vr" border="0" summary="">
  <TBODY>
  <TR>
    <TD></TD>
    <TH align="left">Index Entry</TH>
    <TD>&nbsp;</TD>
    <TH align="left"> Section</TH></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR>
  <TR>
    <TH><A name="Function-and-variable-index_vr_symbol-1">!</A></TH>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-_0021"><CODE>!</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Logical-vectors">Logical 
      vectors</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-_0021_003d"><CODE>!=</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Logical-vectors">Logical 
      vectors</A></TD></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR>
  <TR>
    <TH><A name="Function-and-variable-index_vr_symbol-2">%</A></TH>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-_0025_002a_0025"><CODE>%*%</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Multiplication">Multiplication</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-_0025o_0025"><CODE>%o%</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-outer-product-of-two-arrays">The 
      outer product of two arrays</A></TD></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR>
  <TR>
    <TH><A name="Function-and-variable-index_vr_symbol-3">&amp;</A></TH>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-_0026"><CODE>&amp;</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Logical-vectors">Logical 
      vectors</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-_0026_0026"><CODE>&amp;&amp;</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Conditional-execution">Conditional 
      execution</A></TD></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR>
  <TR>
    <TH><A name="Function-and-variable-index_vr_symbol-4">*</A></TH>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-_002a"><CODE>*</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Vector-arithmetic">Vector 
      arithmetic</A></TD></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR>
  <TR>
    <TH><A name="Function-and-variable-index_vr_symbol-5">+</A></TH>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-_002b"><CODE>+</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Vector-arithmetic">Vector 
      arithmetic</A></TD></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR>
  <TR>
    <TH><A name="Function-and-variable-index_vr_symbol-6">-</A></TH>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-_002d"><CODE>-</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Vector-arithmetic">Vector 
      arithmetic</A></TD></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR>
  <TR>
    <TH><A name="Function-and-variable-index_vr_symbol-7">.</A></TH>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-_002e"><CODE>.</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Updating-fitted-models">Updating 
      fitted models</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-_002eFirst"><CODE>.First</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Customizing-the-environment">Customizing 
      the environment</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-_002eLast"><CODE>.Last</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Customizing-the-environment">Customizing 
      the environment</A></TD></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR>
  <TR>
    <TH><A name="Function-and-variable-index_vr_symbol-8">/</A></TH>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-_002f"><CODE>/</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Vector-arithmetic">Vector 
      arithmetic</A></TD></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR>
  <TR>
    <TH><A name="Function-and-variable-index_vr_symbol-9">:</A></TH>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-_003a"><CODE>:</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Generating-regular-sequences">Generating 
      regular sequences</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-_003a_003a"><CODE>::</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Namespaces">Namespaces</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-_003a_003a_003a"><CODE>:::</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Namespaces">Namespaces</A></TD></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR>
  <TR>
    <TH><A name="Function-and-variable-index_vr_symbol-10">&lt;</A></TH>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-_003c"><CODE>&lt;</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Logical-vectors">Logical 
      vectors</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-_003c_003c_002d"><CODE>&lt;&lt;-</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Scope">Scope</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-_003c_003d"><CODE>&lt;=</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Logical-vectors">Logical 
      vectors</A></TD></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR>
  <TR>
    <TH><A name="Function-and-variable-index_vr_symbol-11">=</A></TH>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-_003d_003d"><CODE>==</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Logical-vectors">Logical 
      vectors</A></TD></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR>
  <TR>
    <TH><A name="Function-and-variable-index_vr_symbol-12">&gt;</A></TH>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-_003e"><CODE>&gt;</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Logical-vectors">Logical 
      vectors</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-_003e_003d"><CODE>&gt;=</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Logical-vectors">Logical 
      vectors</A></TD></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR>
  <TR>
    <TH><A name="Function-and-variable-index_vr_symbol-13">?</A></TH>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-_003f"><CODE>?</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Getting-help">Getting 
      help</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-_003f_003f"><CODE>??</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Getting-help">Getting 
      help</A></TD></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR>
  <TR>
    <TH><A name="Function-and-variable-index_vr_symbol-14">^</A></TH>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-_005e"><CODE>^</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Vector-arithmetic">Vector 
      arithmetic</A></TD></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR>
  <TR>
    <TH><A name="Function-and-variable-index_vr_symbol-15">|</A></TH>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-_007c"><CODE>|</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Logical-vectors">Logical 
      vectors</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-_007c_007c"><CODE>||</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Conditional-execution">Conditional 
      execution</A></TD></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR>
  <TR>
    <TH><A name="Function-and-variable-index_vr_symbol-16">~</A></TH>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-_007e"><CODE>~</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Formulae-for-statistical-models">Formulae 
      for statistical models</A></TD></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR>
  <TR>
    <TH><A name="Function-and-variable-index_vr_letter-A">A</A></TH>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-abline"><CODE>abline</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Low_002dlevel-plotting-commands">Low-level 
      plotting commands</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-ace"><CODE>ace</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Some-non_002dstandard-models">Some 
      non-standard models</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-add1"><CODE>add1</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Updating-fitted-models">Updating 
      fitted models</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-anova"><CODE>anova</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Generic-functions-for-extracting-model-information">Generic 
      functions for extracting model information</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-anova-1"><CODE>anova</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#ANOVA-tables">ANOVA 
      tables</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-aov"><CODE>aov</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Analysis-of-variance-and-model-comparison">Analysis 
      of variance and model comparison</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-aperm"><CODE>aperm</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Generalized-transpose-of-an-array">Generalized 
      transpose of an array</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-array"><CODE>array</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-array_0028_0029-function">The 
      array() function</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-as_002edata_002eframe"><CODE>as.data.frame</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Making-data-frames">Making 
      data frames</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-as_002evector"><CODE>as.vector</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-concatenation-function-c_0028_0029-with-arrays">The 
      concatenation function c() with arrays</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-attach"><CODE>attach</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#attach_0028_0029-and-detach_0028_0029">attach() 
      and detach()</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-attr"><CODE>attr</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Getting-and-setting-attributes">Getting 
      and setting attributes</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-attr-1"><CODE>attr</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Getting-and-setting-attributes">Getting 
      and setting attributes</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-attributes"><CODE>attributes</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Getting-and-setting-attributes">Getting 
      and setting attributes</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-attributes-1"><CODE>attributes</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Getting-and-setting-attributes">Getting 
      and setting attributes</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-avas"><CODE>avas</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Some-non_002dstandard-models">Some 
      non-standard models</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-axis"><CODE>axis</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Low_002dlevel-plotting-commands">Low-level 
      plotting commands</A></TD></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR>
  <TR>
    <TH><A name="Function-and-variable-index_vr_letter-B">B</A></TH>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-boxplot"><CODE>boxplot</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#One_002d-and-two_002dsample-tests">One- 
      and two-sample tests</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-break"><CODE>break</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Repetitive-execution">Repetitive 
      execution</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-bruto"><CODE>bruto</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Some-non_002dstandard-models">Some 
      non-standard models</A></TD></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR>
  <TR>
    <TH><A name="Function-and-variable-index_vr_letter-C">C</A></TH>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-c"><CODE>c</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Vectors-and-assignment">Vectors 
      and assignment</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-c-1"><CODE>c</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Character-vectors">Character 
      vectors</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-c-2"><CODE>c</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-concatenation-function-c_0028_0029-with-arrays">The 
      concatenation function c() with arrays</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-c-3"><CODE>c</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Concatenating-lists">Concatenating 
      lists</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-C"><CODE>C</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Contrasts">Contrasts</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-cbind"><CODE>cbind</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Forming-partitioned-matrices">Forming 
      partitioned matrices</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-coef"><CODE>coef</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Generic-functions-for-extracting-model-information">Generic 
      functions for extracting model information</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-coefficients"><CODE>coefficients</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Generic-functions-for-extracting-model-information">Generic 
      functions for extracting model information</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-contour"><CODE>contour</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Display-graphics">Display 
      graphics</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-contrasts"><CODE>contrasts</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Contrasts">Contrasts</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-coplot"><CODE>coplot</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Displaying-multivariate-data">Displaying 
      multivariate data</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-cos"><CODE>cos</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Vector-arithmetic">Vector 
      arithmetic</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-crossprod"><CODE>crossprod</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Index-matrices">Index 
      matrices</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-crossprod-1"><CODE>crossprod</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Multiplication">Multiplication</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-cut"><CODE>cut</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Frequency-tables-from-factors">Frequency 
      tables from factors</A></TD></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR>
  <TR>
    <TH><A name="Function-and-variable-index_vr_letter-D">D</A></TH>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-data"><CODE>data</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Accessing-builtin-datasets">Accessing 
      builtin datasets</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-data_002eframe"><CODE>data.frame</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Making-data-frames">Making 
      data frames</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-density"><CODE>density</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Examining-the-distribution-of-a-set-of-data">Examining 
      the distribution of a set of data</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-det"><CODE>det</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Singular-value-decomposition-and-determinants">Singular 
      value decomposition and determinants</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-detach"><CODE>detach</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#attach_0028_0029-and-detach_0028_0029">attach() 
      and detach()</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-determinant"><CODE>determinant</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Singular-value-decomposition-and-determinants">Singular 
      value decomposition and determinants</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-dev_002elist"><CODE>dev.list</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Multiple-graphics-devices">Multiple 
      graphics devices</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-dev_002enext"><CODE>dev.next</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Multiple-graphics-devices">Multiple 
      graphics devices</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-dev_002eoff"><CODE>dev.off</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Multiple-graphics-devices">Multiple 
      graphics devices</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-dev_002eprev"><CODE>dev.prev</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Multiple-graphics-devices">Multiple 
      graphics devices</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-dev_002eset"><CODE>dev.set</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Multiple-graphics-devices">Multiple 
      graphics devices</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-deviance"><CODE>deviance</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Generic-functions-for-extracting-model-information">Generic 
      functions for extracting model information</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-diag"><CODE>diag</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Multiplication">Multiplication</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-dim"><CODE>dim</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Arrays">Arrays</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-dotchart"><CODE>dotchart</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Display-graphics">Display 
      graphics</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-drop1"><CODE>drop1</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Updating-fitted-models">Updating 
      fitted models</A></TD></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR>
  <TR>
    <TH><A name="Function-and-variable-index_vr_letter-E">E</A></TH>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-ecdf"><CODE>ecdf</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Examining-the-distribution-of-a-set-of-data">Examining 
      the distribution of a set of data</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-edit"><CODE>edit</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Editing-data">Editing 
      data</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-eigen"><CODE>eigen</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Eigenvalues-and-eigenvectors">Eigenvalues 
      and eigenvectors</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-else"><CODE>else</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Conditional-execution">Conditional 
      execution</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Error"><CODE>Error</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Analysis-of-variance-and-model-comparison">Analysis 
      of variance and model comparison</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-example"><CODE>example</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Getting-help">Getting 
      help</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-exp"><CODE>exp</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Vector-arithmetic">Vector 
      arithmetic</A></TD></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR>
  <TR>
    <TH><A name="Function-and-variable-index_vr_letter-F">F</A></TH>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-F"><CODE>F</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Logical-vectors">Logical 
      vectors</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-factor"><CODE>factor</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Factors">Factors</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-FALSE"><CODE>FALSE</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Logical-vectors">Logical 
      vectors</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-fivenum"><CODE>fivenum</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Examining-the-distribution-of-a-set-of-data">Examining 
      the distribution of a set of data</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-for"><CODE>for</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Repetitive-execution">Repetitive 
      execution</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-formula"><CODE>formula</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Generic-functions-for-extracting-model-information">Generic 
      functions for extracting model information</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-function"><CODE>function</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Writing-your-own-functions">Writing 
      your own functions</A></TD></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR>
  <TR>
    <TH><A name="Function-and-variable-index_vr_letter-G">G</A></TH>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-getAnywhere"><CODE>getAnywhere</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Object-orientation">Object 
      orientation</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-getS3method"><CODE>getS3method</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Object-orientation">Object 
      orientation</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-glm"><CODE>glm</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-glm_0028_0029-function">The 
      glm() function</A></TD></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR>
  <TR>
    <TH><A name="Function-and-variable-index_vr_letter-H">H</A></TH>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-help"><CODE>help</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Getting-help">Getting 
      help</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-help-1"><CODE>help</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Getting-help">Getting 
      help</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-help_002esearch"><CODE>help.search</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Getting-help">Getting 
      help</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-help_002estart"><CODE>help.start</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Getting-help">Getting 
      help</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-hist"><CODE>hist</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Examining-the-distribution-of-a-set-of-data">Examining 
      the distribution of a set of data</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-hist-1"><CODE>hist</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Display-graphics">Display 
      graphics</A></TD></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR>
  <TR>
    <TH><A name="Function-and-variable-index_vr_letter-I">I</A></TH>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-identify"><CODE>identify</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Interacting-with-graphics">Interacting 
      with graphics</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-if"><CODE>if</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Conditional-execution">Conditional 
      execution</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-if-1"><CODE>if</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Conditional-execution">Conditional 
      execution</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-ifelse"><CODE>ifelse</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Conditional-execution">Conditional 
      execution</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-image"><CODE>image</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Display-graphics">Display 
      graphics</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-is_002ena"><CODE>is.na</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Missing-values">Missing 
      values</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-is_002enan"><CODE>is.nan</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Missing-values">Missing 
      values</A></TD></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR>
  <TR>
    <TH><A name="Function-and-variable-index_vr_letter-J">J</A></TH>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-jpeg"><CODE>jpeg</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Device-drivers">Device 
      drivers</A></TD></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR>
  <TR>
    <TH><A name="Function-and-variable-index_vr_letter-K">K</A></TH>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-ks_002etest"><CODE>ks.test</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Examining-the-distribution-of-a-set-of-data">Examining 
      the distribution of a set of data</A></TD></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR>
  <TR>
    <TH><A name="Function-and-variable-index_vr_letter-L">L</A></TH>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-legend"><CODE>legend</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Low_002dlevel-plotting-commands">Low-level 
      plotting commands</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-length"><CODE>length</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Vector-arithmetic">Vector 
      arithmetic</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-length-1"><CODE>length</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-intrinsic-attributes-mode-and-length">The 
      intrinsic attributes mode and length</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-levels"><CODE>levels</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Factors">Factors</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-lines"><CODE>lines</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Low_002dlevel-plotting-commands">Low-level 
      plotting commands</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-list"><CODE>list</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Lists">Lists</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-lm"><CODE>lm</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Linear-models">Linear 
      models</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-lme"><CODE>lme</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Some-non_002dstandard-models">Some 
      non-standard models</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-locator"><CODE>locator</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Interacting-with-graphics">Interacting 
      with graphics</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-loess"><CODE>loess</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Some-non_002dstandard-models">Some 
      non-standard models</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-loess-1"><CODE>loess</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Some-non_002dstandard-models">Some 
      non-standard models</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-log"><CODE>log</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Vector-arithmetic">Vector 
      arithmetic</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-lqs"><CODE>lqs</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Some-non_002dstandard-models">Some 
      non-standard models</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-lsfit"><CODE>lsfit</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Least-squares-fitting-and-the-QR-decomposition">Least 
      squares fitting and the QR decomposition</A></TD></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR>
  <TR>
    <TH><A name="Function-and-variable-index_vr_letter-M">M</A></TH>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-mars"><CODE>mars</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Some-non_002dstandard-models">Some 
      non-standard models</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-max"><CODE>max</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Vector-arithmetic">Vector 
      arithmetic</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-mean"><CODE>mean</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Vector-arithmetic">Vector 
      arithmetic</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-methods"><CODE>methods</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Object-orientation">Object 
      orientation</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-min"><CODE>min</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Vector-arithmetic">Vector 
      arithmetic</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-mode"><CODE>mode</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-intrinsic-attributes-mode-and-length">The 
      intrinsic attributes mode and length</A></TD></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR>
  <TR>
    <TH><A name="Function-and-variable-index_vr_letter-N">N</A></TH>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-NA"><CODE>NA</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Missing-values">Missing 
      values</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-NaN"><CODE>NaN</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Missing-values">Missing 
      values</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-ncol"><CODE>ncol</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Matrix-facilities">Matrix 
      facilities</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-next"><CODE>next</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Repetitive-execution">Repetitive 
      execution</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-nlm"><CODE>nlm</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Nonlinear-least-squares-and-maximum-likelihood-models">Nonlinear 
      least squares and maximum likelihood models</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-nlm-1"><CODE>nlm</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Least-squares">Least 
      squares</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-nlm-2"><CODE>nlm</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Maximum-likelihood">Maximum 
      likelihood</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-nlme"><CODE>nlme</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Some-non_002dstandard-models">Some 
      non-standard models</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-nlminb"><CODE>nlminb</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Nonlinear-least-squares-and-maximum-likelihood-models">Nonlinear 
      least squares and maximum likelihood models</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-nrow"><CODE>nrow</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Matrix-facilities">Matrix 
      facilities</A></TD></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR>
  <TR>
    <TH><A name="Function-and-variable-index_vr_letter-O">O</A></TH>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-optim"><CODE>optim</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Nonlinear-least-squares-and-maximum-likelihood-models">Nonlinear 
      least squares and maximum likelihood models</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-order"><CODE>order</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Vector-arithmetic">Vector 
      arithmetic</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-ordered"><CODE>ordered</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Ordered-factors">Ordered 
      factors</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-ordered-1"><CODE>ordered</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Ordered-factors">Ordered 
      factors</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-outer"><CODE>outer</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-outer-product-of-two-arrays">The 
      outer product of two arrays</A></TD></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR>
  <TR>
    <TH><A name="Function-and-variable-index_vr_letter-P">P</A></TH>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-pairs"><CODE>pairs</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Displaying-multivariate-data">Displaying 
      multivariate data</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-par"><CODE>par</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-par_0028_0029-function">The 
      par() function</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-paste"><CODE>paste</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Character-vectors">Character 
      vectors</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-pdf"><CODE>pdf</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Device-drivers">Device 
      drivers</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-persp"><CODE>persp</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Display-graphics">Display 
      graphics</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-plot"><CODE>plot</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Generic-functions-for-extracting-model-information">Generic 
      functions for extracting model information</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-plot-1"><CODE>plot</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-plot_0028_0029-function">The 
      plot() function</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-pmax"><CODE>pmax</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Vector-arithmetic">Vector 
      arithmetic</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-pmin"><CODE>pmin</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Vector-arithmetic">Vector 
      arithmetic</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-png"><CODE>png</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Device-drivers">Device 
      drivers</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-points"><CODE>points</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Low_002dlevel-plotting-commands">Low-level 
      plotting commands</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-polygon"><CODE>polygon</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Low_002dlevel-plotting-commands">Low-level 
      plotting commands</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-postscript"><CODE>postscript</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Device-drivers">Device 
      drivers</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-predict"><CODE>predict</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Generic-functions-for-extracting-model-information">Generic 
      functions for extracting model information</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-print"><CODE>print</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Generic-functions-for-extracting-model-information">Generic 
      functions for extracting model information</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-prod"><CODE>prod</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Vector-arithmetic">Vector 
      arithmetic</A></TD></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR>
  <TR>
    <TH><A name="Function-and-variable-index_vr_letter-Q">Q</A></TH>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-qqline"><CODE>qqline</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Examining-the-distribution-of-a-set-of-data">Examining 
      the distribution of a set of data</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-qqline-1"><CODE>qqline</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Display-graphics">Display 
      graphics</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-qqnorm"><CODE>qqnorm</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Examining-the-distribution-of-a-set-of-data">Examining 
      the distribution of a set of data</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-qqnorm-1"><CODE>qqnorm</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Display-graphics">Display 
      graphics</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-qqplot"><CODE>qqplot</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Display-graphics">Display 
      graphics</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-qr"><CODE>qr</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Least-squares-fitting-and-the-QR-decomposition">Least 
      squares fitting and the QR decomposition</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-quartz"><CODE>quartz</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Device-drivers">Device 
      drivers</A></TD></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR>
  <TR>
    <TH><A name="Function-and-variable-index_vr_letter-R">R</A></TH>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-range"><CODE>range</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Vector-arithmetic">Vector 
      arithmetic</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-rbind"><CODE>rbind</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Forming-partitioned-matrices">Forming 
      partitioned matrices</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-read_002etable"><CODE>read.table</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-read_002etable_0028_0029-function">The 
      read.table() function</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-rep"><CODE>rep</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Generating-regular-sequences">Generating 
      regular sequences</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-repeat"><CODE>repeat</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Repetitive-execution">Repetitive 
      execution</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-resid"><CODE>resid</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Generic-functions-for-extracting-model-information">Generic 
      functions for extracting model information</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-residuals"><CODE>residuals</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Generic-functions-for-extracting-model-information">Generic 
      functions for extracting model information</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-rlm"><CODE>rlm</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Some-non_002dstandard-models">Some 
      non-standard models</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-rm"><CODE>rm</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Data-permanency-and-removing-objects">Data 
      permanency and removing objects</A></TD></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR>
  <TR>
    <TH><A name="Function-and-variable-index_vr_letter-S">S</A></TH>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-scan"><CODE>scan</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-scan_0028_0029-function">The 
      scan() function</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-sd"><CODE>sd</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-function-tapply_0028_0029-and-ragged-arrays">The 
      function tapply() and ragged arrays</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-search"><CODE>search</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Managing-the-search-path">Managing 
      the search path</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-seq"><CODE>seq</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Generating-regular-sequences">Generating 
      regular sequences</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-shapiro_002etest"><CODE>shapiro.test</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Examining-the-distribution-of-a-set-of-data">Examining 
      the distribution of a set of data</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-sin"><CODE>sin</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Vector-arithmetic">Vector 
      arithmetic</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-sink"><CODE>sink</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Executing-commands-from-or-diverting-output-to-a-file">Executing 
      commands from or diverting output to a file</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-solve"><CODE>solve</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Linear-equations-and-inversion">Linear 
      equations and inversion</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-sort"><CODE>sort</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Vector-arithmetic">Vector 
      arithmetic</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-source"><CODE>source</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Executing-commands-from-or-diverting-output-to-a-file">Executing 
      commands from or diverting output to a file</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-split"><CODE>split</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Repetitive-execution">Repetitive 
      execution</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-sqrt"><CODE>sqrt</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Vector-arithmetic">Vector 
      arithmetic</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-stem"><CODE>stem</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Examining-the-distribution-of-a-set-of-data">Examining 
      the distribution of a set of data</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-step"><CODE>step</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Generic-functions-for-extracting-model-information">Generic 
      functions for extracting model information</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-step-1"><CODE>step</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Updating-fitted-models">Updating 
      fitted models</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-sum"><CODE>sum</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Vector-arithmetic">Vector 
      arithmetic</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-summary"><CODE>summary</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Examining-the-distribution-of-a-set-of-data">Examining 
      the distribution of a set of data</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-summary-1"><CODE>summary</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Generic-functions-for-extracting-model-information">Generic 
      functions for extracting model information</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-svd"><CODE>svd</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Singular-value-decomposition-and-determinants">Singular 
      value decomposition and determinants</A></TD></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR>
  <TR>
    <TH><A name="Function-and-variable-index_vr_letter-T">T</A></TH>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-T"><CODE>T</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Logical-vectors">Logical 
      vectors</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-t"><CODE>t</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Generalized-transpose-of-an-array">Generalized 
      transpose of an array</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-t_002etest"><CODE>t.test</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#One_002d-and-two_002dsample-tests">One- 
      and two-sample tests</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-table"><CODE>table</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Index-matrices">Index 
      matrices</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-table-1"><CODE>table</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Frequency-tables-from-factors">Frequency 
      tables from factors</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-tan"><CODE>tan</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Vector-arithmetic">Vector 
      arithmetic</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-tapply"><CODE>tapply</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-function-tapply_0028_0029-and-ragged-arrays">The 
      function tapply() and ragged arrays</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-text"><CODE>text</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Low_002dlevel-plotting-commands">Low-level 
      plotting commands</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-title"><CODE>title</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Low_002dlevel-plotting-commands">Low-level 
      plotting commands</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-tree"><CODE>tree</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Some-non_002dstandard-models">Some 
      non-standard models</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-TRUE"><CODE>TRUE</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Logical-vectors">Logical 
      vectors</A></TD></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR>
  <TR>
    <TH><A name="Function-and-variable-index_vr_letter-U">U</A></TH>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-unclass"><CODE>unclass</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-class-of-an-object">The 
      class of an object</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-update"><CODE>update</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Updating-fitted-models">Updating 
      fitted models</A></TD></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR>
  <TR>
    <TH><A name="Function-and-variable-index_vr_letter-V">V</A></TH>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-var"><CODE>var</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Vector-arithmetic">Vector 
      arithmetic</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-var-1"><CODE>var</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-function-tapply_0028_0029-and-ragged-arrays">The 
      function tapply() and ragged arrays</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-var_002etest"><CODE>var.test</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#One_002d-and-two_002dsample-tests">One- 
      and two-sample tests</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-vcov"><CODE>vcov</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Generic-functions-for-extracting-model-information">Generic 
      functions for extracting model information</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-vector"><CODE>vector</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Vectors-and-assignment">Vectors 
      and assignment</A></TD></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR>
  <TR>
    <TH><A name="Function-and-variable-index_vr_letter-W">W</A></TH>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-while"><CODE>while</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Repetitive-execution">Repetitive 
      execution</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-wilcox_002etest"><CODE>wilcox.test</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#One_002d-and-two_002dsample-tests">One- 
      and two-sample tests</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-windows"><CODE>windows</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Device-drivers">Device 
      drivers</A></TD></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR>
  <TR>
    <TH><A name="Function-and-variable-index_vr_letter-X">X</A></TH>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-X11"><CODE>X11</CODE></A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Device-drivers">Device 
      drivers</A></TD></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR></TBODY></TABLE>
<TABLE summary="">
  <TBODY>
  <TR>
    <TH valign="top">Jump to: &nbsp; </TH>
    <TD><A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_symbol-1"><B>!</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_symbol-2"><B>%</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_symbol-3"><B>&amp;</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_symbol-4"><B>*</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_symbol-5"><B>+</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_symbol-6"><B>-</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_symbol-7"><B>.</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_symbol-8"><B>/</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_symbol-9"><B>:</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_symbol-10"><B>&lt;</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_symbol-11"><B>=</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_symbol-12"><B>&gt;</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_symbol-13"><B>?</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_symbol-14"><B>^</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_symbol-15"><B>|</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_symbol-16"><B>~</B></A> 
      &nbsp;  <BR><A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_letter-A"><B>A</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_letter-B"><B>B</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_letter-C"><B>C</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_letter-D"><B>D</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_letter-E"><B>E</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_letter-F"><B>F</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_letter-G"><B>G</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_letter-H"><B>H</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_letter-I"><B>I</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_letter-J"><B>J</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_letter-K"><B>K</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_letter-L"><B>L</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_letter-M"><B>M</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_letter-N"><B>N</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_letter-O"><B>O</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_letter-P"><B>P</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_letter-Q"><B>Q</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_letter-R"><B>R</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_letter-S"><B>S</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_letter-T"><B>T</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_letter-U"><B>U</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_letter-V"><B>V</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_letter-W"><B>W</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index_vr_letter-X"><B>X</B></A> 
      &nbsp;  </TD></TR></TBODY></TABLE>
<HR>
<A name="Concept-index"></A> 
<DIV class="header">
<P>Next: <A accesskey="n" href="http://127.0.0.1:29225/doc/manual/R-intro.html#References" 
rel="next">References</A>, Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="prev">Function and variable index</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Top" 
rel="up">Top</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="Concept-index-1"></A> 
<H2 class="appendix">Appendix E Concept index</H2>
<TABLE summary="">
  <TBODY>
  <TR>
    <TH valign="top">Jump to: &nbsp; </TH>
    <TD><A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Concept-index_cp_letter-A"><B>A</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Concept-index_cp_letter-B"><B>B</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Concept-index_cp_letter-C"><B>C</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Concept-index_cp_letter-D"><B>D</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Concept-index_cp_letter-E"><B>E</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Concept-index_cp_letter-F"><B>F</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Concept-index_cp_letter-G"><B>G</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Concept-index_cp_letter-I"><B>I</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Concept-index_cp_letter-K"><B>K</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Concept-index_cp_letter-L"><B>L</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Concept-index_cp_letter-M"><B>M</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Concept-index_cp_letter-N"><B>N</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Concept-index_cp_letter-O"><B>O</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Concept-index_cp_letter-P"><B>P</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Concept-index_cp_letter-Q"><B>Q</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Concept-index_cp_letter-R"><B>R</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Concept-index_cp_letter-S"><B>S</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Concept-index_cp_letter-T"><B>T</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Concept-index_cp_letter-U"><B>U</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Concept-index_cp_letter-V"><B>V</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Concept-index_cp_letter-W"><B>W</B></A> 
      &nbsp;  </TD></TR></TBODY></TABLE>
<TABLE class="index-cp" border="0" summary="">
  <TBODY>
  <TR>
    <TD></TD>
    <TH align="left">Index Entry</TH>
    <TD>&nbsp;</TD>
    <TH align="left"> Section</TH></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR>
  <TR>
    <TH><A name="Concept-index_cp_letter-A">A</A></TH>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Accessing-builtin-datasets">Accessing 
      builtin datasets</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Accessing-builtin-datasets">Accessing 
      builtin datasets</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Additive-models">Additive 
      models</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Some-non_002dstandard-models">Some 
      non-standard models</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Analysis-of-variance">Analysis 
      of variance</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Analysis-of-variance-and-model-comparison">Analysis 
      of variance and model comparison</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Arithmetic-functions-and-operators">Arithmetic 
      functions and operators</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Vector-arithmetic">Vector 
      arithmetic</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Arrays">Arrays</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Arrays">Arrays</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Assignment">Assignment</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Vectors-and-assignment">Vectors 
      and assignment</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Attributes">Attributes</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Objects">Objects</A></TD></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR>
  <TR>
    <TH><A name="Concept-index_cp_letter-B">B</A></TH>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Binary-operators">Binary 
      operators</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Defining-new-binary-operators">Defining 
      new binary operators</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Box-plots">Box 
      plots</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#One_002d-and-two_002dsample-tests">One- 
      and two-sample tests</A></TD></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR>
  <TR>
    <TH><A name="Concept-index_cp_letter-C">C</A></TH>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Character-vectors">Character 
      vectors</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Character-vectors">Character 
      vectors</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Classes">Classes</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-class-of-an-object">The 
      class of an object</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Classes-1">Classes</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Object-orientation">Object 
      orientation</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Concatenating-lists">Concatenating 
      lists</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Concatenating-lists">Concatenating 
      lists</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Contrasts">Contrasts</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Contrasts">Contrasts</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Control-statements">Control 
      statements</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Control-statements">Control 
      statements</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-CRAN">CRAN</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Contributed-packages-and-CRAN">Contributed 
      packages and CRAN</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Customizing-the-environment">Customizing 
      the environment</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Customizing-the-environment">Customizing 
      the environment</A></TD></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR>
  <TR>
    <TH><A name="Concept-index_cp_letter-D">D</A></TH>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Data-frames">Data 
      frames</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Data-frames">Data 
      frames</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Default-values">Default 
      values</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Named-arguments-and-defaults">Named 
      arguments and defaults</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Density-estimation">Density 
      estimation</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Examining-the-distribution-of-a-set-of-data">Examining 
      the distribution of a set of data</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Determinants">Determinants</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Singular-value-decomposition-and-determinants">Singular 
      value decomposition and determinants</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Diverting-input-and-output">Diverting 
      input and output</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Executing-commands-from-or-diverting-output-to-a-file">Executing 
      commands from or diverting output to a file</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Dynamic-graphics">Dynamic 
      graphics</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Dynamic-graphics">Dynamic 
      graphics</A></TD></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR>
  <TR>
    <TH><A name="Concept-index_cp_letter-E">E</A></TH>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Eigenvalues-and-eigenvectors">Eigenvalues 
      and eigenvectors</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Eigenvalues-and-eigenvectors">Eigenvalues 
      and eigenvectors</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Empirical-CDFs">Empirical 
      CDFs</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Examining-the-distribution-of-a-set-of-data">Examining 
      the distribution of a set of data</A></TD></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR>
  <TR>
    <TH><A name="Concept-index_cp_letter-F">F</A></TH>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Factors">Factors</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Factors">Factors</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Factors-1">Factors</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Contrasts">Contrasts</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Families">Families</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Families">Families</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Formulae">Formulae</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Formulae-for-statistical-models">Formulae 
      for statistical models</A></TD></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR>
  <TR>
    <TH><A name="Concept-index_cp_letter-G">G</A></TH>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Generalized-linear-models">Generalized 
      linear models</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Generalized-linear-models">Generalized 
      linear models</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Generalized-transpose-of-an-array">Generalized 
      transpose of an array</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Generalized-transpose-of-an-array">Generalized 
      transpose of an array</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Generic-functions">Generic 
      functions</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Object-orientation">Object 
      orientation</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Graphics-device-drivers">Graphics 
      device drivers</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Device-drivers">Device 
      drivers</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Graphics-parameters">Graphics 
      parameters</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-par_0028_0029-function">The 
      par() function</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Grouped-expressions">Grouped 
      expressions</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Grouped-expressions">Grouped 
      expressions</A></TD></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR>
  <TR>
    <TH><A name="Concept-index_cp_letter-I">I</A></TH>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Indexing-of-and-by-arrays">Indexing 
      of and by arrays</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Array-indexing">Array 
      indexing</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Indexing-vectors">Indexing 
      vectors</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Index-vectors">Index 
      vectors</A></TD></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR>
  <TR>
    <TH><A name="Concept-index_cp_letter-K">K</A></TH>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Kolmogorov_002dSmirnov-test">Kolmogorov-Smirnov 
      test</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Examining-the-distribution-of-a-set-of-data">Examining 
      the distribution of a set of data</A></TD></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR>
  <TR>
    <TH><A name="Concept-index_cp_letter-L">L</A></TH>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Least-squares-fitting">Least 
      squares fitting</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Least-squares-fitting-and-the-QR-decomposition">Least 
      squares fitting and the QR decomposition</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Linear-equations">Linear 
      equations</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Linear-equations-and-inversion">Linear 
      equations and inversion</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Linear-models">Linear 
      models</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Linear-models">Linear 
      models</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Lists">Lists</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Lists">Lists</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Local-approximating-regressions">Local 
      approximating regressions</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Some-non_002dstandard-models">Some 
      non-standard models</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Loops-and-conditional-execution">Loops 
      and conditional execution</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Loops-and-conditional-execution">Loops 
      and conditional execution</A></TD></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR>
  <TR>
    <TH><A name="Concept-index_cp_letter-M">M</A></TH>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Matrices">Matrices</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Arrays">Arrays</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Matrix-multiplication">Matrix 
      multiplication</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Multiplication">Multiplication</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Maximum-likelihood">Maximum 
      likelihood</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Maximum-likelihood">Maximum 
      likelihood</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Missing-values">Missing 
      values</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Missing-values">Missing 
      values</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Mixed-models">Mixed 
      models</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Some-non_002dstandard-models">Some 
      non-standard models</A></TD></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR>
  <TR>
    <TH><A name="Concept-index_cp_letter-N">N</A></TH>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Named-arguments">Named 
      arguments</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Named-arguments-and-defaults">Named 
      arguments and defaults</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Namespace">Namespace</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Namespaces">Namespaces</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Nonlinear-least-squares">Nonlinear 
      least squares</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Nonlinear-least-squares-and-maximum-likelihood-models">Nonlinear 
      least squares and maximum likelihood models</A></TD></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR>
  <TR>
    <TH><A name="Concept-index_cp_letter-O">O</A></TH>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Object-orientation">Object 
      orientation</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Object-orientation">Object 
      orientation</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Objects">Objects</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Objects">Objects</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-One_002d-and-two_002dsample-tests">One- 
      and two-sample tests</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#One_002d-and-two_002dsample-tests">One- 
      and two-sample tests</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Ordered-factors">Ordered 
      factors</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Factors">Factors</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Ordered-factors-1">Ordered 
      factors</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Contrasts">Contrasts</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Outer-products-of-arrays">Outer 
      products of arrays</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-outer-product-of-two-arrays">The 
      outer product of two arrays</A></TD></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR>
  <TR>
    <TH><A name="Concept-index_cp_letter-P">P</A></TH>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Packages">Packages</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#R-and-statistics">R 
      and statistics</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Packages-1">Packages</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Packages">Packages</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Probability-distributions">Probability 
      distributions</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Probability-distributions">Probability 
      distributions</A></TD></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR>
  <TR>
    <TH><A name="Concept-index_cp_letter-Q">Q</A></TH>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-QR-decomposition">QR 
      decomposition</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Least-squares-fitting-and-the-QR-decomposition">Least 
      squares fitting and the QR decomposition</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Quantile_002dquantile-plots">Quantile-quantile 
      plots</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Examining-the-distribution-of-a-set-of-data">Examining 
      the distribution of a set of data</A></TD></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR>
  <TR>
    <TH><A name="Concept-index_cp_letter-R">R</A></TH>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Reading-data-from-files">Reading 
      data from files</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Reading-data-from-files">Reading 
      data from files</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Recycling-rule">Recycling 
      rule</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Vector-arithmetic">Vector 
      arithmetic</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Recycling-rule-1">Recycling 
      rule</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#The-recycling-rule">The 
      recycling rule</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Regular-sequences">Regular 
      sequences</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Generating-regular-sequences">Generating 
      regular sequences</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Removing-objects">Removing 
      objects</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Data-permanency-and-removing-objects">Data 
      permanency and removing objects</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Robust-regression">Robust 
      regression</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Some-non_002dstandard-models">Some 
      non-standard models</A></TD></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR>
  <TR>
    <TH><A name="Concept-index_cp_letter-S">S</A></TH>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Scope">Scope</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Scope">Scope</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Search-path">Search 
      path</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Managing-the-search-path">Managing 
      the search path</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Shapiro_002dWilk-test">Shapiro-Wilk 
      test</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Examining-the-distribution-of-a-set-of-data">Examining 
      the distribution of a set of data</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Singular-value-decomposition">Singular 
      value decomposition</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Singular-value-decomposition-and-determinants">Singular 
      value decomposition and determinants</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Statistical-models">Statistical 
      models</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Statistical-models-in-R">Statistical 
      models in R</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Student_0027s-t-test">Student’s 
      <EM>t</EM> test</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#One_002d-and-two_002dsample-tests">One- 
      and two-sample tests</A></TD></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR>
  <TR>
    <TH><A name="Concept-index_cp_letter-T">T</A></TH>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Tabulation">Tabulation</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Frequency-tables-from-factors">Frequency 
      tables from factors</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Tree_002dbased-models">Tree-based 
      models</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Some-non_002dstandard-models">Some 
      non-standard models</A></TD></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR>
  <TR>
    <TH><A name="Concept-index_cp_letter-U">U</A></TH>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Updating-fitted-models">Updating 
      fitted models</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Updating-fitted-models">Updating 
      fitted models</A></TD></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR>
  <TR>
    <TH><A name="Concept-index_cp_letter-V">V</A></TH>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Vectors">Vectors</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Simple-manipulations-numbers-and-vectors">Simple 
      manipulations numbers and vectors</A></TD></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR>
  <TR>
    <TH><A name="Concept-index_cp_letter-W">W</A></TH>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Wilcoxon-test">Wilcoxon 
      test</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#One_002d-and-two_002dsample-tests">One- 
      and two-sample tests</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Workspace">Workspace</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Data-permanency-and-removing-objects">Data 
      permanency and removing objects</A></TD></TR>
  <TR>
    <TD></TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#index-Writing-functions">Writing 
      functions</A>:</TD>
    <TD>&nbsp;</TD>
    <TD valign="top"><A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Writing-your-own-functions">Writing 
      your own functions</A></TD></TR>
  <TR>
    <TD colspan="4">
      <HR>
    </TD></TR></TBODY></TABLE>
<TABLE summary="">
  <TBODY>
  <TR>
    <TH valign="top">Jump to: &nbsp; </TH>
    <TD><A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Concept-index_cp_letter-A"><B>A</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Concept-index_cp_letter-B"><B>B</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Concept-index_cp_letter-C"><B>C</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Concept-index_cp_letter-D"><B>D</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Concept-index_cp_letter-E"><B>E</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Concept-index_cp_letter-F"><B>F</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Concept-index_cp_letter-G"><B>G</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Concept-index_cp_letter-I"><B>I</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Concept-index_cp_letter-K"><B>K</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Concept-index_cp_letter-L"><B>L</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Concept-index_cp_letter-M"><B>M</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Concept-index_cp_letter-N"><B>N</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Concept-index_cp_letter-O"><B>O</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Concept-index_cp_letter-P"><B>P</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Concept-index_cp_letter-Q"><B>Q</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Concept-index_cp_letter-R"><B>R</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Concept-index_cp_letter-S"><B>S</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Concept-index_cp_letter-T"><B>T</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Concept-index_cp_letter-U"><B>U</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Concept-index_cp_letter-V"><B>V</B></A> 
      &nbsp;  <A class="summary-letter" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Concept-index_cp_letter-W"><B>W</B></A> 
      &nbsp;  </TD></TR></TBODY></TABLE>
<HR>
<A name="References"></A> 
<DIV class="header">
<P>Previous: <A accesskey="p" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Concept-index" 
rel="prev">Concept index</A>, Up: <A accesskey="u" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Top" 
rel="up">Top</A> &nbsp; [<A title="Table of contents" href="http://127.0.0.1:29225/doc/manual/R-intro.html#SEC_Contents" 
rel="contents">Contents</A>][<A title="Index" href="http://127.0.0.1:29225/doc/manual/R-intro.html#Function-and-variable-index" 
rel="index">Index</A>]</P></DIV><A name="References-1"></A> 
<H2 class="appendix">Appendix F References</H2>
<P>D. M. Bates and  D. G. Watts (1988), <EM>Nonlinear Regression Analysis and 
Its Applications.</EM> John Wiley &amp; Sons, New York. </P>
<P>Richard A. Becker, John M. Chambers and Allan R. Wilks (1988), <EM>The New S 
Language.</EM> Chapman &amp; Hall, New York. This book is often called the 
“<EM>Blue Book</EM>”. </P>
<P>John M. Chambers and Trevor J. Hastie eds. (1992), <EM>Statistical Models in 
S.</EM> Chapman &amp; Hall, New York. This is also called the “<EM>White 
Book</EM>”. </P>
<P>John M. Chambers (1998) <EM>Programming with Data</EM>. Springer, New York.
 This is also called the “<EM>Green Book</EM>”. </P>
<P>A. C. Davison and D. V. Hinkley (1997), <EM>Bootstrap Methods and Their 
Applications</EM>, Cambridge University Press. </P>
<P>Annette J. Dobson (1990), <EM>An Introduction to Generalized Linear
 Models</EM>, Chapman and Hall, London. </P>
<P>Peter McCullagh and John A. Nelder (1989), <EM>Generalized Linear
 Models.</EM> Second edition, Chapman and Hall, London. </P>
<P>John A.&nbsp;Rice (1995), <EM>Mathematical Statistics and Data Analysis.</EM>
 Second edition.  Duxbury Press, Belmont, CA. </P>
<P>S. D. Silvey (1970), <EM>Statistical Inference.</EM> Penguin, London. </P>
<DIV class="footnote">
<HR>

<H4 class="footnotes-heading">Footnotes</H4>
<H3><A name="FOOT1" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#DOCF1">(1)</A></H3>
<P>ACM Software Systems award, 1998: <A href="https://awards.acm.org/award_winners/chambers_6640862.cfm">https://awards.acm.org/award_winners/chambers_6640862.cfm</A>.</P>
<H3><A name="FOOT2" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#DOCF2">(2)</A></H3>
<P>For portable R code (including that to be used in R packages) only A–Za–z0–9 
should be used.</P>
<H3><A name="FOOT3" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#DOCF3">(3)</A></H3>
<P><STRONG>not</STRONG> inside strings, nor within the argument list of a 
function definition</P>
<H3><A name="FOOT4" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#DOCF4">(4)</A></H3>
<P>some of the consoles will not allow you to enter more, and amongst those 
which do some will silently discard the excess and some will use it as the start
 of the next line.</P>
<H3><A name="FOOT5" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#DOCF5">(5)</A></H3>
<P>of unlimited length.</P>
<H3><A name="FOOT6" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#DOCF6">(6)</A></H3>
<P>The leading “dot” in this file name makes it <EM>invisible</EM> in normal 
file listings in UNIX, and in default GUI file listings on OS X and Windows.</P>
<H3><A name="FOOT7" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#DOCF7">(7)</A></H3>
<P>With other than vector types of argument, such as <CODE>list</CODE> mode 
arguments, the action of <CODE>c()</CODE> is rather different.  See <A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Concatenating-lists">Concatenating 
lists</A>.</P>
<H3><A name="FOOT8" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#DOCF8">(8)</A></H3>
<P>Actually, it is still available as <CODE>.Last.value</CODE> before any other 
statements are executed.</P>
<H3><A name="FOOT9" 
href="http://127.0.0.1:29225/doc/manual/R-intro.html#DOCF9">(9)</A></H3>
<P><CODE>paste(..., collapse=<VAR>ss</VAR>)</CODE> joins the arguments into a 
single character string putting <VAR>ss</VAR> in between, e.g., <CODE>ss &lt;- 
"|"</CODE>.  There are more tools for character manipulation, see the help for 
<CODE>sub</CODE> and <CODE>substring</CODE>.</P>
<H3><A name="FOOT10" href="http://127.0.0.1:29225/doc/manual/R-intro.html#DOCF10">(10)</A></H3>
<P><EM>numeric</EM> mode is actually an amalgam of two distinct modes, namely 
<EM>integer</EM> and <EM>double</EM> precision, as explained in the manual.</P>
<H3><A name="FOOT11" href="http://127.0.0.1:29225/doc/manual/R-intro.html#DOCF11">(11)</A></H3>
<P>Note however that <CODE>length(<VAR>object</VAR>)</CODE> does not always
 contain intrinsic useful information, e.g., when <CODE><VAR>object</VAR></CODE> 
is a function.</P>
<H3><A name="FOOT12" href="http://127.0.0.1:29225/doc/manual/R-intro.html#DOCF12">(12)</A></H3>
<P>In general, coercion from numeric to character and back again will not be 
exactly reversible, because of roundoff errors in the character 
representation.</P>
<H3><A name="FOOT13" href="http://127.0.0.1:29225/doc/manual/R-intro.html#DOCF13">(13)</A></H3>
<P>A different style using ‘formal’ or ‘S4’ classes is provided in package 
<CODE>methods</CODE>.</P>
<H3><A name="FOOT14" href="http://127.0.0.1:29225/doc/manual/R-intro.html#DOCF14">(14)</A></H3>
<P>Readers should note that there are eight states and territories in Australia, 
namely the Australian Capital Territory, New South Wales, the Northern 
Territory, Queensland, South Australia, Tasmania, Victoria and Western 
Australia.</P>
<H3><A name="FOOT15" href="http://127.0.0.1:29225/doc/manual/R-intro.html#DOCF15">(15)</A></H3>
<P>Note that <CODE>tapply()</CODE> also works in this case when its second 
argument is not a factor, e.g., ‘<SAMP><CODE>tapply(incomes, 
state)</CODE></SAMP>’, and this is true for quite a few other functions, since 
arguments are <EM>coerced</EM> to factors when necessary (using 
<CODE>as.factor()</CODE>).</P>
<H3><A name="FOOT16" href="http://127.0.0.1:29225/doc/manual/R-intro.html#DOCF16">(16)</A></H3>
<P>Note that <CODE>x %*% x</CODE> is ambiguous, as it could mean either x’x or x 
x’, where x is the column form.  In such cases the smaller matrix seems 
implicitly to be the interpretation adopted, so the scalar x’x is in this case 
the result.  The matrix x x’ may be calculated either by <CODE>cbind(x) %*% 
x</CODE> or <CODE>x %*% rbind(x)</CODE> since the result of <CODE>rbind()</CODE> 
or <CODE>cbind()</CODE> is always a matrix.  However, the best way to compute
 x’x or x x’ is <CODE>crossprod(x)</CODE> or <CODE>x %o% x</CODE> 
respectively.</P>
<H3><A name="FOOT17" href="http://127.0.0.1:29225/doc/manual/R-intro.html#DOCF17">(17)</A></H3>
<P>Even better would be to form a matrix square root B with A = BB’ and find the 
squared length of the solution of By = x , perhaps using the Cholesky or eigen 
decomposition of A.  </P>
<H3><A name="FOOT18" href="http://127.0.0.1:29225/doc/manual/R-intro.html#DOCF18">(18)</A></H3>
<P>Conversion of character columns to factors is overridden using the 
<CODE>stringsAsFactors</CODE> argument to the <CODE>data.frame()</CODE> 
function.</P>
<H3><A name="FOOT19" href="http://127.0.0.1:29225/doc/manual/R-intro.html#DOCF19">(19)</A></H3>
<P>See the on-line help for <CODE>autoload</CODE> for the meaning of the second 
term.</P>
<H3><A name="FOOT20" href="http://127.0.0.1:29225/doc/manual/R-intro.html#DOCF20">(20)</A></H3>
<P>Under UNIX, the utilities <CODE>sed</CODE> or<CODE>awk</CODE> can be 
used.</P>
<H3><A name="FOOT21" href="http://127.0.0.1:29225/doc/manual/R-intro.html#DOCF21">(21)</A></H3>
<P>to be discussed later, or use <CODE>xyplot</CODE> from package <A href="http://cran.r-project.org/package=lattice"><STRONG>lattice</STRONG></A>.</P>
<H3><A name="FOOT22" href="http://127.0.0.1:29225/doc/manual/R-intro.html#DOCF22">(22)</A></H3>
<P>See also the methods described in <A href="http://127.0.0.1:29225/doc/manual/R-intro.html#Statistical-models-in-R">Statistical 
models in R</A></P>
<H3><A name="FOOT23" href="http://127.0.0.1:29225/doc/manual/R-intro.html#DOCF23">(23)</A></H3>
<P>In some sense this mimics the behavior in <SMALL>S-PLUS</SMALL> since in 
<SMALL>S-PLUS</SMALL> this operator always creates or assigns to a global 
variable.</P>
<H3><A name="FOOT24" href="http://127.0.0.1:29225/doc/manual/R-intro.html#DOCF24">(24)</A></H3>
<P>So it is hidden under UNIX.</P>
<H3><A name="FOOT25" href="http://127.0.0.1:29225/doc/manual/R-intro.html#DOCF25">(25)</A></H3>
<P>Some graphics parameters such as the size of the current device are for 
information only.</P>
<H3><A name="FOOT26" href="http://127.0.0.1:29225/doc/manual/R-intro.html#DOCF26">(26)</A></H3>
<P>2.5Gb on versions of Windows that support 3Gb per process and have the 
support enabled: see the <SAMP>rw-FAQ</SAMP> Q2.9; 3.5Gb on most 64-bit versions 
of Windows.</P>
<H3><A name="FOOT27" href="http://127.0.0.1:29225/doc/manual/R-intro.html#DOCF27">(27)</A></H3>
<P>The ‘Emacs Speaks Statistics’ package; see the <ACRONYM>URL</ACRONYM> <A 
href="http://ess.r-project.org/">http://ess.r-project.org/</A></P>
<H3><A name="FOOT28" href="http://127.0.0.1:29225/doc/manual/R-intro.html#DOCF28">(28)</A></H3>
<P>On a PC keyboard this is usually the Alt key, occasionally the ‘Windows’ key. 
 On a Mac keyboard normally no meta key is available.</P></DIV>
<HR>
</BODY></HTML>
